#!/usr/bin/python3 -u
# BOTD - python3 IRC channel daemon.
#
# bin/botd

__version__ = 1

import os, sys ; sys.path.insert(0, os.getcwd())

import logging
import botd.log

from botd.csl import Console
from botd.err import EINIT
from botd.krn import Kernel
from botd.log import level, logfiled
from botd.shl import parse_cli
from botd.trc import get_exception
from botd.trm import termreset, termsave

opts = [
    ('-b', '--daemon', 'store_true', False, 'enable daemon mode', 'daemon'),
    ('-d', '--datadir', 'store', str, "", 'set working directory.', 'workdir'),
    ('-m', '--modules', 'store', str, "", 'modules to load.', 'modules'),
    ('-l', '--loglevel', 'store', str, "", 'set loglevel.', 'level'),
    ('-a', '--logdir', "store", str, "", "directory to find the logfiles.", 'logdir'),
]

def daemon():
    pid = os.fork()
    if pid != 0:
        termreset()
        os._exit(0)
    os.setsid()
    os.umask(0)
    si = open("/dev/null", 'r')
    so = open("/dev/null", 'a+')
    se = open("/dev/null", 'a+')
    os.dup2(si.fileno(), sys.stdin.fileno())
    os.dup2(so.fileno(), sys.stdout.fileno())
    os.dup2(se.fileno(), sys.stderr.fileno())

def execute(main):
    termsave()
    try:
        main()
    except KeyboardInterrupt:
        print("")
    except EINIT:
        pass
    except PermissionError:
        print("you need root permissions.")
    except Exception:
        logging.error(get_exception())
    finally:
        termreset()

def main():
    cfg = parse_cli("botd", __version__, opts)
    k = Kernel()
    k.cfg.last()
    k.cfg.edit(cfg, True)
    k.walk(cfg.modules, True)
    if cfg.daemon:
        daemon()
    else:
        c = Console()
        c.start()
    k.start()
    k.wait()

execute(main)
os._exit(0)
