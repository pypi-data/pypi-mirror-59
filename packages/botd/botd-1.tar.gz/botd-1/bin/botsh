#!/usr/bin/python3 -u
# BOTLIB - Framework to program bots (a botlib).
#
# bin/bot 

__version__ = 1

import os, sys ; sys.path.insert(0, os.getcwd())

import logging
import os
 
from botd.err import EINIT
from botd.krn import Kernel
from botd.csl import Console
from botd.log import level
from botd.shl import parse_cli
from botd.trm import termreset, termsave
from botd.trc import get_exception
from botd.utl import hd

opts = [
    ('-d', '--datadir', 'store', str, hd(".botd"), 'set working directory.', 'workdir'),
    ('-m', '--modules', 'store', str, "", 'modules to load.', 'modules'),
    ('-l', '--loglevel', 'store', str, "", 'set loglevel.', 'level'),
    ('-p', '--prompting', 'store_true', False, "", "query for initial values."),
    ('-a', '--logdir', "store", str, "", "directory to find the logfiles.", 'logdir'),
]

def execute(main):
    termsave()
    try:
        main()
    except KeyboardInterrupt:
        print("")
    except botd.err.EINIT:
        pass
    except PermissionError:
        print("you need root permissions.")
    except Exception:
        logging.error(get_exception())
    finally:
        termreset()

def main():
    cfg = parse_cli("botsh", __version__, opts)
    k = Kernel(cfg)
    c = Console()
    c.start()
    k.wait()

execute(main)
os._exit(0)
