Metadata-Version: 2.1
Name: json-configparser
Version: 0.4.2
Summary: A module that parses and validates JSON configuration files.
Home-page: https://github.com/GIlunga/JSON-Configparser
Author: Guilherme Ilunga
Author-email: guiilunga@hotmail.com
License: UNKNOWN
Project-URL: Bug Reports, https://github.com/GIlunga/JSON-Configparser/issues
Project-URL: Source, https://github.com/GIlunga/JSON-Configparser
Description: # JSON-Configparser
        [![Build status](https://dev.azure.com/guiilunga/JSON-Configparser/_apis/build/status/GIlunga.JSON-Configparser)](https://dev.azure.com/guiilunga/JSON-Configparser/_build?definitionId=-1)
        [![PyPI version fury.io](https://badge.fury.io/py/json-configparser.svg)](https://pypi.org/project/json-configparser/)
        [![MIT license](https://img.shields.io/badge/License-MIT-blue.svg)](https://github.com/GIlunga/JSON-Configparser/blob/master/LICENSE)
        [![PyPI pyversions](https://img.shields.io/pypi/pyversions/json-configparser.svg)](https://pypi.org/project/json-configparser/)
        [![Documentation Status](https://readthedocs.org/projects/json-configparser/badge/?version=latest)](https://json-configparser.readthedocs.io/en/latest/?badge=latest)
        
        
        This python package enables the usage of JSON files as configuration files that can be properly validated.
        
        The examples folder contains examples of using this package.
        
        ## Main Features
        - Parse several different datatypes from a JSON configuration file:
            - ints
            - floats
            - strings
            - booleans
            - lists
            - dictionaries
            - lists/dictionaries of all other types
        - Define options, including their types, bounds, extra validations, and defaults
        - Parse a configuration file, returning an object with attributes or a dictionary
        - All types, bounds, and defaults are validated by the package
            
        ## List of TODOs
        - Implement compatibility with 3.7 dataclasses
        - Improve tests
        - Improve function names
        - Improve the creation of Bounds
        - Allow command line interaction, e.g., when running a script pass the path to the json and new values for some arguments
Keywords: configuration options
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.6, <3.9
Description-Content-Type: text/markdown
