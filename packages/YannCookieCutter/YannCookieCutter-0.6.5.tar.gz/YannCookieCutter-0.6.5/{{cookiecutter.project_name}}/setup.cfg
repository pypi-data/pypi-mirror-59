[bumpversion]
current_version = {{ cookiecutter.version }}
commit = True
tag = True

{%- set license_classifiers = {
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'ISC license': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} %}

[metadata]
name = {{ cookiecutter.project_name }}
author={{ cookiecutter.full_name.replace('\"', '\\\"') }}
author_email={{ cookiecutter.email }}
home-page = https://github.com/ydethe/{{ cookiecutter.project_name }}
description = Template tool for putting up the scaffold of a Python project
long-description = file: README.rst
{%- if cookiecutter.open_source_license in license_classifiers %}
license={{ cookiecutter.open_source_license }}
{%- endif %}
license-file = LICENSE
platform = any
classifiers = 
	Development Status :: 3 - Alpha
	Intended Audience :: Developers
{%- if cookiecutter.open_source_license in license_classifiers %}
    {{ license_classifiers[cookiecutter.open_source_license] }}
{%- endif %}
	Operating System :: OS Independent
	Programming Language :: Python
	Programming Language :: Python :: 2.7
	Programming Language :: Python :: 3.3
	Programming Language :: Python :: 3.4
	Programming Language :: Python :: 3.5
	Programming Language :: Python :: 3.6
	Topic :: Software Development :: Libraries :: Python Modules
url = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_name }}

{%- if 'y' in cookiecutter.command_line_interface|lower %}
[options.entry_points]
console_scripts =
    {{ cookiecutter.project_name }}={{ cookiecutter.project_name }}.cli:main
{%- endif %}

[options]
zip_safe = false
include_package_data = true
python_requires = >= 3.5
packages = find:
test_suite = nose.collector
setup_requires = 
	setuptools >=38.3.0
	setuptools_scm
	wheel
tests_require = 
	tox
	nose
    
[bdist_wheel]
universal = true

[check]
metadata = true
restructuredtext = true
strict = true

[sdist]
formats = gztar

[tox]
envlist = py35,py36,py37,flake8

[testenv]
setenv = 
	PYTHONPATH = {toxinidir}
deps = nose
	coverage
	-rrequirements.txt
commands = nosetests --with-xunit --all-modules --traverse-namespace --with-doctest --with-coverage --cover-xml --cover-package={{ cookiecutter.project_name }} --cover-inclusive

[testenv:flake8]
basepython = python3
skip_install = true
deps = 
	flake8
	flake8-bugbear
	flake8-colors
	flake8-junit-report
	flake8-docstrings>=1.3.1
	flake8-import-order>=0.9
	flake8-typing-imports>=1.1
	pep8-naming
commands = 
	flake8 --exit-zero {{ cookiecutter.project_name }} tests/ setup.py --output-file=flake8_report.log
	flake8_junit flake8_report.log flake8_junit.xml

[flake8]
ignore = D203, W503, E203
exclude = 
	.tox,
	.git,
	__pycache__,
	docs/conf.py,
	build,
	dist,
	tests/fixtures/*,
	*.pyc,
	*.egg-info,
	.cache,
	.eggs
max-complexity = 10
import-order-style = google
application-import-names = flake8

