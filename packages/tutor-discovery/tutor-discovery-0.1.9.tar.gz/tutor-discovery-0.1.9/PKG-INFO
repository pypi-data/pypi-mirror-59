Metadata-Version: 1.2
Name: tutor-discovery
Version: 0.1.9
Summary: A Tutor plugin for course discovery, the Open edX service for providing access to consolidated course and program metadata
Home-page: https://docs.tutor.overhang.io/
Author: Overhang.io
Author-email: contact@overhang.io
License: AGPLv3
Project-URL: Documentation, https://docs.tutor.overhang.io/
Project-URL: Code, https://github.com/overhangio/tutor-discovery
Project-URL: Issue tracker, https://github.com/overhangio/tutor-discovery/issues
Project-URL: Community, https://discuss.overhang.io
Description: Course Discovery plugin for `Tutor <https://docs.tutor.overhang.io>`_
        =====================================================================
        
        This is a plugin for `Tutor <https://docs.tutor.overhang.io>`_ that integrates the `Course Discovery <https://github.com/edx/course-discovery/>`__ application in an Open edX platform. it is useful for integration with, for example, `Ecommerce <https://github.com/edx/ecommerce>`__ or an external course catalog.
        
        .. image:: https://overhang.io/images/clients/e-ducation.jpg
            :alt: E-ducation
            :target: https://www.e-ducation.cn/
        
        This plugin was developed and open sourced to the community thanks to the generous support of `E-ducation <https://www.e-ducation.cn/>`_. Thank you!
        
        Installation
        ------------
        
        This plugin requires tutor>=3.6.0. Also, you should have installed tutor from source, and not from a pre-compiled binary.
        
        ::
          
            pip install tutor-discovery
        
        Then, to enable this plugin, run::
          
            tutor plugins enable discovery
        
        You will have to re-generate the environment::
          
            tutor config save
            
        The, run migrations::
          
            tutor local init
        
        This last step is unnecessary if you run instead ``tutor local quickstart``.
        
        Operations
        ----------
        
        Creating a user
        ~~~~~~~~~~~~~~~
        
        The discovery user interface will be available at http://discovery.localhost for a local instance, and at ``DISCOVERY_HOST`` (by default: http(s)://discovery.<your lms host>) in production. In order to run commands from the UI, a user must be created::
          
          tutor local run discovery ./manage.py createsuperuser
        
        Then, you must login with this user at http://discovery.localhost/admin.
        
        Alternatively, you can login with oauth2 using a pre-existing user created on the LMS/CMS by accessing http(s)://discovery.<your lms host>/login. To do so, the proper domain names must exist and point to the production server.
        
        Re-indexing courses
        ~~~~~~~~~~~~~~~~~~~
        
        ::
          
          tutor local run discovery ./manage.py refresh_course_metadata
          tutor local run discovery ./manage.py update_index --disable-change-limit
        
        Caching programs
        ~~~~~~~~~~~~~~~~
        
        In order to cache programs in the LMS, you will need to manually create a catalog integration. This step should be performed just once::
            
            tutor local run lms ./manage.py lms create_catalog_integrations --enabled \
                --internal_api_url=http://discovery:8000 \
                --service_username=lms_catalog_service_user
        
        Then::
            
            tutor local run lms ./manage.py lms cache_programs
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU Affero General Public License v3
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Requires-Python: >=3.5
