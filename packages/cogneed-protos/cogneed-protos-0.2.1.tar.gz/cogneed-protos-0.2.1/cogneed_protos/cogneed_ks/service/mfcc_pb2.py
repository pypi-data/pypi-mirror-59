# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cogneed-protos/cogneed-ks/service/mfcc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='cogneed-protos/cogneed-ks/service/mfcc.proto',
  package='ai.cogneed.cloud.speech.v1',
  syntax='proto3',
  serialized_options=_b('\n\032ai.cogneed.cloud.speech.v1P\001'),
  serialized_pb=_b('\n,cogneed-protos/cogneed-ks/service/mfcc.proto\x12\x1a\x61i.cogneed.cloud.speech.v1\"#\n\x0bMfccRequest\x12\x14\n\x0cwave_content\x18\x01 \x01(\x0c\"\"\n\nMfccWindow\x12\x14\n\x0c\x63oefficients\x18\x01 \x03(\x01\"G\n\x0cMfccResponse\x12\x37\n\x07windows\x18\x01 \x03(\x0b\x32&.ai.cogneed.cloud.speech.v1.MfccWindow2k\n\x0bMfccService\x12\\\n\x07\x63ompute\x12\'.ai.cogneed.cloud.speech.v1.MfccRequest\x1a(.ai.cogneed.cloud.speech.v1.MfccResponseB\x1e\n\x1a\x61i.cogneed.cloud.speech.v1P\x01\x62\x06proto3')
)




_MFCCREQUEST = _descriptor.Descriptor(
  name='MfccRequest',
  full_name='ai.cogneed.cloud.speech.v1.MfccRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='wave_content', full_name='ai.cogneed.cloud.speech.v1.MfccRequest.wave_content', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=76,
  serialized_end=111,
)


_MFCCWINDOW = _descriptor.Descriptor(
  name='MfccWindow',
  full_name='ai.cogneed.cloud.speech.v1.MfccWindow',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='coefficients', full_name='ai.cogneed.cloud.speech.v1.MfccWindow.coefficients', index=0,
      number=1, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=113,
  serialized_end=147,
)


_MFCCRESPONSE = _descriptor.Descriptor(
  name='MfccResponse',
  full_name='ai.cogneed.cloud.speech.v1.MfccResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='windows', full_name='ai.cogneed.cloud.speech.v1.MfccResponse.windows', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=149,
  serialized_end=220,
)

_MFCCRESPONSE.fields_by_name['windows'].message_type = _MFCCWINDOW
DESCRIPTOR.message_types_by_name['MfccRequest'] = _MFCCREQUEST
DESCRIPTOR.message_types_by_name['MfccWindow'] = _MFCCWINDOW
DESCRIPTOR.message_types_by_name['MfccResponse'] = _MFCCRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

MfccRequest = _reflection.GeneratedProtocolMessageType('MfccRequest', (_message.Message,), {
  'DESCRIPTOR' : _MFCCREQUEST,
  '__module__' : 'cogneed_protos.cogneed_ks.service.mfcc_pb2'
  # @@protoc_insertion_point(class_scope:ai.cogneed.cloud.speech.v1.MfccRequest)
  })
_sym_db.RegisterMessage(MfccRequest)

MfccWindow = _reflection.GeneratedProtocolMessageType('MfccWindow', (_message.Message,), {
  'DESCRIPTOR' : _MFCCWINDOW,
  '__module__' : 'cogneed_protos.cogneed_ks.service.mfcc_pb2'
  # @@protoc_insertion_point(class_scope:ai.cogneed.cloud.speech.v1.MfccWindow)
  })
_sym_db.RegisterMessage(MfccWindow)

MfccResponse = _reflection.GeneratedProtocolMessageType('MfccResponse', (_message.Message,), {
  'DESCRIPTOR' : _MFCCRESPONSE,
  '__module__' : 'cogneed_protos.cogneed_ks.service.mfcc_pb2'
  # @@protoc_insertion_point(class_scope:ai.cogneed.cloud.speech.v1.MfccResponse)
  })
_sym_db.RegisterMessage(MfccResponse)


DESCRIPTOR._options = None

_MFCCSERVICE = _descriptor.ServiceDescriptor(
  name='MfccService',
  full_name='ai.cogneed.cloud.speech.v1.MfccService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=222,
  serialized_end=329,
  methods=[
  _descriptor.MethodDescriptor(
    name='compute',
    full_name='ai.cogneed.cloud.speech.v1.MfccService.compute',
    index=0,
    containing_service=None,
    input_type=_MFCCREQUEST,
    output_type=_MFCCRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_MFCCSERVICE)

DESCRIPTOR.services_by_name['MfccService'] = _MFCCSERVICE

# @@protoc_insertion_point(module_scope)
