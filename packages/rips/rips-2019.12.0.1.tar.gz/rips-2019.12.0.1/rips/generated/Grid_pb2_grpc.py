# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import Grid_pb2 as Grid__pb2


class GridStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetCellCenters = channel.unary_unary(
        '/rips.Grid/GetCellCenters',
        request_serializer=Grid__pb2.GridRequest.SerializeToString,
        response_deserializer=Grid__pb2.CellCenters.FromString,
        )
    self.GetDimensions = channel.unary_unary(
        '/rips.Grid/GetDimensions',
        request_serializer=Grid__pb2.GridRequest.SerializeToString,
        response_deserializer=Grid__pb2.GridDimensions.FromString,
        )


class GridServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetCellCenters(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDimensions(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GridServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetCellCenters': grpc.unary_unary_rpc_method_handler(
          servicer.GetCellCenters,
          request_deserializer=Grid__pb2.GridRequest.FromString,
          response_serializer=Grid__pb2.CellCenters.SerializeToString,
      ),
      'GetDimensions': grpc.unary_unary_rpc_method_handler(
          servicer.GetDimensions,
          request_deserializer=Grid__pb2.GridRequest.FromString,
          response_serializer=Grid__pb2.GridDimensions.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'rips.Grid', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
