=====================================================
 OpenTelekomCloud docs.otc.t-systems.com Sphinx theme
=====================================================

*otcdocstheme* is a theme and extension support for Sphinx documentation
that is published to readthemanuals.org.

It is intended for use by OpenTelekomCloud projects.

Using the theme
---------------

.. note::

   Prior to using this theme, ensure your project can use the OpenTelekomCloud brand
   by referring to the brand guidelines at https://cloud.telekom.de/en/imprint/.

.. note::

   Some of the settings below are included in the file generated by Sphinx when
   you initialize a project, so they may already have values that need to be
   changed.

#. Update the requirements list for your project to include
   ``otcdocstheme`` (usually in ``test-requirements.txt``).

#. If your project previously used the *oslosphinx* theme (without modifying
   the header navigation), remove ``oslosphinx`` from your requirements list,
   and then in your ``conf.py`` you can remove the import statement and
   extension listing for *oslosphinx*.

#. Once done, you should add ``'otcdocstheme'`` to the list of extensions
   Sphinx needs to initialize and configure the theme::

     extensions = [
         # ...
         'otcdocstheme',
         # ...
     ]

     html_theme = 'opentelekomclouddocs'

#. Set the options to link to the git repository and bug tracker.

   ``repository_name``
       The prefix and repo name. For example,
       ``'opentelekomcloud/python-otcextensions'``.

   ``bug_project``
       The project name or ID. For launchpad, it's a string like
       ``python-otcextensions``. If your project uses
       ``storyboard.otc.t-systems.org``, use the project number instead like
       ``901``. If unspecified, the "Report a bug" links are not shown.

   ``bug_tag``
      Launchpad bug tag. If unspecified, no tag is set.  The default is empty.

   One example for a project using launchpad::

      # otcdocstheme options
      repository_name = 'opentelekomcloud/python-otcextensions'
      bug_project = 'python-otcextensions'
      bug_tag = ''

   One example for a project using storyboard::

      # otcdocstheme options
      repository_name = 'openstack-infra/infra-manual'
      bug_project = '721'
      bug_tag = ''

#. Remove the options that will be automatically configured by the theme.

   - ``project``
   - ``html_last_updated_fmt``
   - ``latex_engine``
   - ``latex_elements``

   In addition, if your documentation is versioned, you should remove the
   options related to versioning.

   - ``version``
   - ``release``

.. versionchanged:: 1.20

   In older versions of *otcdocstheme*, it was necessary to manually
   configure the ``html_last_updated_fmt`` option for HTML output and the
   ``latex_engine`` and ``latex_elements`` options if you required PDF output.
   This is no longer the case as these attributes are now configured
   automatically.


Additional Configuration
------------------------

If you are using this theme for API reference documentation, set the sidebar
navigation in the ``html_theme_options`` in the ``conf.py`` file::

    # To use the API Reference sidebar dropdown menu,
    # uncomment the html_theme_options parameter.  The theme
    # variable, sidebar_dropdown, should be set to `api_ref`.
    # Otherwise, the list of links for the User and Ops docs
    # appear in the sidebar dropdown menu.
    html_theme_options = {
        # ...
        "sidebar_dropdown": "api_ref",
        "sidebar_mode": "toc",
        # ...
    }

If you are using this theme for documentation you want to release based on git
tags on your repository, set the release dropdown menu option in the
``html_theme_options`` in the ``conf.py`` file. By default it is set to
``False``::

    html_theme_options = {
        # ...
        "show_other_versions": "True",
        # ...
    }

.. warning::

    Do not use this for release-notes as they are always published as one
    document with internal versioning.


Demonstration example
---------------------

The demo documentation provides example output to ensure it matches what's
expected. The link below points to the example output when using the theme
for all documentation that is not API reference.

.. toctree::
   :maxdepth: 1

   demo/index
