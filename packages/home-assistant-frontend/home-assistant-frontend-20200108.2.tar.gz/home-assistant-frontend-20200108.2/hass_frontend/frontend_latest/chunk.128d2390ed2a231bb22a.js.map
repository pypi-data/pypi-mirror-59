{"version":3,"sources":["webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/components/ha-switch.ts","webpack:///./src/dialogs/confirmation/show-dialog-confirmation.ts","webpack:///./src/panels/config/entity_registry/dialog-entity-registry-detail.ts"],"names":["HaIronFocusablesHelper","getTabbableNodes","node","result","this","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","children","element","tabIndex","_normalizedTabIndex","needsSort","push","localName","dom","getDistributedNodes","shadowRoot","root","i","length","paperDialogClass","customElements","get","haTabFixBehaviorImpl","_focusableNodes","define","mixinBehaviors","MwcSwitch","_decorate","customElement","_initialize","_MwcSwitch","HaSwitch","[object Object]","args","super","F","d","kind","decorators","query","key","value","_get","_getPrototypeOf","prototype","call","style","setProperty","classList","toggle","Boolean","_slot","assignedNodes","static","css","__webpack_require__","__webpack_exports__","showConfirmationDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","loadConfirmationDialog","Promise","all","e","then","bind","systemLogDetailParams","fireEvent","dialogTag","dialogImport","dialogParams","DialogEntityRegistryDetail","_LitElement","property","async","params","_params","_error","undefined","_name","entry","name","_origEntityId","entity_id","_entityId","_disabledBy","disabled_by","updateComplete","html","stateObj","hass","states","invalidDomainUpdate","computeDomain","trim","_openedChanged","computeStateName","localize","_nameChanged","_submitting","_entityIdChanged","_disabledByChanged","_confirmDeleteEntry","attributes","restored","_updateEntry","ev","detail","updateEntityRegistryEntry","new_entity_id","err","message","removeEntityRegistryEntry","text","confirm","_deleteEntry","target","checked","haStyleDialog","LitElement"],"mappings":"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","file":"chunk.128d2390ed2a231bb22a.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import { customElement, CSSResult, css, query } from \"lit-element\";\nimport \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\n// tslint:disable-next-line\nimport { Switch } from \"@material/mwc-switch\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\n      \"--mdc-theme-secondary\",\n      \"var(--switch-checked-color)\"\n    );\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\n          background-color: var(--switch-checked-button-color);\n          border-color: var(--switch-checked-button-color);\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__track {\n          background-color: var(--switch-checked-track-color);\n          border-color: var(--switch-checked-track-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--switch-unchecked-button-color);\n          border-color: var(--switch-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--switch-unchecked-track-color);\n          border-color: var(--switch-unchecked-track-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","import { fireEvent } from \"../../common/dom/fire_event\";\n\nexport interface ConfirmationDialogParams {\n  title?: string;\n  text: string;\n  confirmBtnText?: string;\n  cancelBtnText?: string;\n  confirm: () => void;\n}\n\nexport const loadConfirmationDialog = () =>\n  import(/* webpackChunkName: \"confirmation\" */ \"./dialog-confirmation\");\n\nexport const showConfirmationDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: ConfirmationDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-confirmation\",\n    dialogImport: loadConfirmationDialog,\n    dialogParams: systemLogDetailParams,\n  });\n};\n","import {\n  LitElement,\n  html,\n  css,\n  CSSResult,\n  TemplateResult,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../../components/dialog/ha-paper-dialog\";\nimport \"../../../components/ha-switch\";\n\nimport { EntityRegistryDetailDialogParams } from \"./show-dialog-entity-registry-detail\";\nimport { PolymerChangedEvent } from \"../../../polymer-types\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { HaSwitch } from \"../../../components/ha-switch\";\n\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport {\n  updateEntityRegistryEntry,\n  removeEntityRegistryEntry,\n} from \"../../../data/entity_registry\";\nimport { showConfirmationDialog } from \"../../../dialogs/confirmation/show-dialog-confirmation\";\n\nclass DialogEntityRegistryDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() private _name!: string;\n  @property() private _entityId!: string;\n  @property() private _disabledBy!: string | null;\n  @property() private _error?: string;\n  @property() private _params?: EntityRegistryDetailDialogParams;\n  @property() private _submitting?: boolean;\n  private _origEntityId!: string;\n\n  public async showDialog(\n    params: EntityRegistryDetailDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    this._name = this._params.entry.name || \"\";\n    this._origEntityId = this._params.entry.entity_id;\n    this._entityId = this._params.entry.entity_id;\n    this._disabledBy = this._params.entry.disabled_by;\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._params) {\n      return html``;\n    }\n    const entry = this._params.entry;\n    const stateObj: HassEntity | undefined = this.hass.states[entry.entity_id];\n    const invalidDomainUpdate =\n      computeDomain(this._entityId.trim()) !==\n      computeDomain(this._params.entry.entity_id);\n\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=\"${this._openedChanged}\"\n      >\n        <h2>\n          ${stateObj\n            ? computeStateName(stateObj)\n            : entry.name || entry.entity_id}\n        </h2>\n        <paper-dialog-scrollable>\n          ${!stateObj\n            ? html`\n                <div>\n                  ${this.hass!.localize(\n                    \"ui.panel.config.entity_registry.editor.unavailable\"\n                  )}\n                </div>\n              `\n            : \"\"}\n          ${this._error\n            ? html`\n                <div class=\"error\">${this._error}</div>\n              `\n            : \"\"}\n          <div class=\"form\">\n            <paper-input\n              .value=${this._name}\n              @value-changed=${this._nameChanged}\n              .label=${this.hass.localize(\"ui.dialogs.more_info_settings.name\")}\n              .placeholder=${stateObj ? computeStateName(stateObj) : \"\"}\n              .disabled=${this._submitting}\n            ></paper-input>\n            <paper-input\n              .value=${this._entityId}\n              @value-changed=${this._entityIdChanged}\n              .label=${this.hass.localize(\n                \"ui.dialogs.more_info_settings.entity_id\"\n              )}\n              error-message=\"Domain needs to stay the same\"\n              .invalid=${invalidDomainUpdate}\n              .disabled=${this._submitting}\n            ></paper-input>\n            <div class=\"row\">\n              <ha-switch\n                .checked=${!this._disabledBy}\n                @change=${this._disabledByChanged}\n              >\n                <div>\n                  <div>\n                    ${this.hass.localize(\n                      \"ui.panel.config.entity_registry.editor.enabled_label\"\n                    )}\n                  </div>\n                  <div class=\"secondary\">\n                    ${this._disabledBy && this._disabledBy !== \"user\"\n                      ? this.hass.localize(\n                          \"ui.panel.config.entity_registry.editor.enabled_cause\",\n                          \"cause\",\n                          this.hass.localize(\n                            `config_entry.disabled_by.${this._disabledBy}`\n                          )\n                        )\n                      : \"\"}\n                    ${this.hass.localize(\n                      \"ui.panel.config.entity_registry.editor.enabled_description\"\n                    )}\n                    <br />${this.hass.localize(\n                      \"ui.panel.config.entity_registry.editor.note\"\n                    )}\n                  </div>\n                </div>\n              </ha-switch>\n            </div>\n          </div>\n        </paper-dialog-scrollable>\n        <div class=\"paper-dialog-buttons\">\n          <mwc-button\n            class=\"warning\"\n            @click=\"${this._confirmDeleteEntry}\"\n            .disabled=${this._submitting ||\n              !(stateObj && stateObj.attributes.restored)}\n          >\n            ${this.hass.localize(\n              \"ui.panel.config.entity_registry.editor.delete\"\n            )}\n          </mwc-button>\n          <mwc-button\n            @click=\"${this._updateEntry}\"\n            .disabled=${invalidDomainUpdate || this._submitting}\n          >\n            ${this.hass.localize(\n              \"ui.panel.config.entity_registry.editor.update\"\n            )}\n          </mwc-button>\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private _nameChanged(ev: PolymerChangedEvent<string>): void {\n    this._error = undefined;\n    this._name = ev.detail.value;\n  }\n\n  private _entityIdChanged(ev: PolymerChangedEvent<string>): void {\n    this._error = undefined;\n    this._entityId = ev.detail.value;\n  }\n\n  private async _updateEntry(): Promise<void> {\n    this._submitting = true;\n    try {\n      await updateEntityRegistryEntry(this.hass!, this._origEntityId, {\n        name: this._name.trim() || null,\n        disabled_by: this._disabledBy,\n        new_entity_id: this._entityId.trim(),\n      });\n      this._params = undefined;\n    } catch (err) {\n      this._error = err.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteEntry(): Promise<void> {\n    this._submitting = true;\n\n    try {\n      await removeEntityRegistryEntry(this.hass!, this._entityId);\n      this._params = undefined;\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _confirmDeleteEntry(): void {\n    showConfirmationDialog(this, {\n      text: this.hass.localize(\n        \"ui.panel.config.entity_registry.editor.confirm_delete\"\n      ),\n      confirm: () => this._deleteEntry(),\n    });\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    if (!(ev.detail as any).value) {\n      this._params = undefined;\n    }\n  }\n  private _disabledByChanged(ev: Event): void {\n    this._disabledBy = (ev.target as HaSwitch).checked ? null : \"user\";\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        :host {\n          --paper-font-title_-_white-space: normal;\n        }\n        ha-paper-dialog {\n          min-width: 400px;\n          max-width: 450px;\n        }\n        .form {\n          padding-bottom: 24px;\n        }\n        mwc-button.warning {\n          margin-right: auto;\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n        .row {\n          margin-top: 8px;\n          color: var(--primary-text-color);\n        }\n        .secondary {\n          color: var(--secondary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-entity-registry-detail\": DialogEntityRegistryDetail;\n  }\n}\n\ncustomElements.define(\n  \"dialog-entity-registry-detail\",\n  DialogEntityRegistryDetail\n);\n"],"sourceRoot":""}