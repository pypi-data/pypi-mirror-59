[tox]
envlist = py35,py27,pep8,pylint
minversion = 1.6
skipsdist = True

[testenv]
setenv = VIRTUAL_ENV={envdir}
         PYTHONWARNINGS=default::DeprecationWarning
usedevelop = True
deps = -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky}
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
whitelist_externals =
  sh
  find
  rm
commands =
  find . -type f -name "*.py[c|o]" -delete
  find . -type d -name "__pycache__" -delete
  rm -rf .tox/lower-constraints/*
  {toxinidir}/tools/ostestr_compat_shim.sh {posargs}
# there is also secret magic in ostestr which lets you run in a fail only
# mode. To do this define the TRACE_FAILONLY environmental variable.


[testenv:common]
# Fake job to define environment variables shared between dsvm/non-dsvm jobs
setenv = OS_TEST_TIMEOUT=180
commands = false

[testenv:dsvm]
# Fake job to define environment variables shared between dsvm jobs
setenv = OS_SUDO_TESTING=1
         OS_ROOTWRAP_CMD=sudo {envdir}/bin/neutron-rootwrap {envdir}/etc/neutron/rootwrap.conf
         OS_ROOTWRAP_DAEMON_CMD=sudo {envdir}/bin/neutron-rootwrap-daemon {envdir}/etc/neutron/rootwrap.conf
         OS_FAIL_ON_MISSING_DEPS=1
         OS_LOG_PATH={env:OS_LOG_PATH:/opt/stack/logs}
commands = false

[testenv:functional]
setenv = {[testenv]setenv}
         {[testenv:common]setenv}
         OS_TEST_PATH=./neutron_fwaas/tests/functional
         OS_LOG_PATH={env:OS_LOG_PATH:/opt/stack/logs}
commands =
  python setup.py testr --slowest --testr-args='{posargs}'

[testenv:dsvm-fullstack]
setenv = {[testenv]setenv}
         {[testenv:common]setenv}
         {[testenv:dsvm]setenv}
         # workaround for DB teardown lock contention (bug/1541742)
         OS_TEST_TIMEOUT=600
         OS_TEST_PATH=./neutron_fwaas/tests/fullstack
sitepackages=True

[testenv:api]
sitepackages=True
setenv =
 OS_TEST_PATH=./neutron_fwaas/tests/tempest_plugin/tests/api/
 OS_TESTR_CONCURRENCY=1
 TEMPEST_CONFIG_DIR={env:TEMPEST_CONFIG_DIR:/opt/stack/tempest/etc}
commands =
  python setup.py testr --slowest --testr-args='{posargs}'

[testenv:scenario]
sitepackages=True
setenv =
 OS_TEST_PATH=./neutron_fwaas/tests/tempest_plugin/tests/scenario/
 OS_TESTR_CONCURRENCY=1
 TEMPEST_CONFIG_DIR={env:TEMPEST_CONFIG_DIR:/opt/stack/tempest/etc}
commands =
  python setup.py testr --slowest --testr-args='{posargs}'

[testenv:dsvm-functional]
setenv =
  OS_TEST_PATH=./neutron_fwaas/tests/functional
  OS_SUDO_TESTING=1
  OS_ROOTWRAP_CMD=sudo {envdir}/bin/neutron-rootwrap {envdir}/etc/neutron/rootwrap.conf
  OS_ROOTWRAP_DAEMON_CMD=sudo {envdir}/bin/neutron-rootwrap-daemon {envdir}/etc/neutron/rootwrap.conf
  OS_FAIL_ON_MISSING_DEPS=1
  OS_NEUTRON_PATH={env:OS_NEUTRON_PATH:/opt/stack/new/neutron}
whitelist_externals =
  sh
  cp
  sudo
commands =
  {toxinidir}/tools/deploy_rootwrap.sh {toxinidir} {envdir}/etc {envdir}/bin
  python setup.py testr --slowest --testr-args='{posargs}'

[testenv:releasenotes]
deps = -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:pep8]
commands =
  flake8
  doc8 {posargs}
  {toxinidir}/tools/check_unit_test_structure.sh
  neutron-db-manage --subproject neutron-fwaas --database-connection sqlite:// check_migration
  {[testenv:genconfig]commands}
whitelist_externals = sh

[testenv:cover]
commands =
  python setup.py test --coverage --coverage-package-name=neutron_fwaas --testr-args='{posargs}'
  coverage report

[testenv:venv]
commands = {posargs}

[testenv:docs]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands =
  rm -rf doc/source/contributor/api
  sphinx-build -W -b html doc/source doc/build/html

[doc8]
ignore = D000
ignore-path = .venv,.git,.tox,.tmp,*neutron_fwaas/locale*,*lib/python*,neutron_fwaas.egg*,doc/build,releasenotes/*,doc/source/contributor/api,requirements.txt,test-requirements.txt

[flake8]
# E125 continuation line does not distinguish itself from next logical line
# E126 continuation line over-indented for hanging indent
# E128 continuation line under-indented for visual indent
# E129 visually indented line with same indent as next logical line
# E265 block comment should start with '# '
# H404 multi line docstring should start with a summary
# H405 multi line docstring summary not separated with an empty line
# TODO(dougwig) -- uncomment this to test for remaining linkages
# N530 direct neutron imports not allowed
# TODO(ihrachys) -- reenable N537 when new neutron-lib release is available
# H106: Do not put vim configuration in source files
# H203: Use assertIs(Not)None to check for None
# H204: Use assert(Not)Equal to check for equality
# H205: Use assert(Greater|Less)(Equal) for comparison
# H904: Delay string interpolations at logging calls
# N521: jsonutils.loads must be used instead of json.loads
ignore = E125,E126,E128,E129,E265,H404,H405,N530,N521
enable-extensions=H106,H203,H204,H205,H904
show-source = true
exclude = .venv,.git,.tox,dist,doc,*lib/python*,.tmp,*egg,build,tools,.ropeproject,rally-scenarios
import-order-style = pep8

[testenv:pylint]
deps =
  {[testenv]deps}
  pylint
commands =
  pylint --rcfile=.pylintrc --output-format=colorized {posargs:neutron_fwaas}

[hacking]
import_exceptions = neutron_fwaas._i18n
local-check-factory = neutron_lib.hacking.checks.factory

[testenv:genconfig]
commands = {toxinidir}/tools/generate_config_file_samples.sh

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
