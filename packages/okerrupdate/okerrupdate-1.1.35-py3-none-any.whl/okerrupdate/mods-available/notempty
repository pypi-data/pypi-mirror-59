#!/usr/bin/python3

import os
import sys
import re
import glob
import time

def timesuffix2sec(timesuffix):
    suf = {'s': 1, 'm': 60, 'h': 3600, 'd': 86400}

    r = re.match('(\d+)(d|h|m|s|day|days|hour|hours|hr|min|minute|minutes|sec|seconds)?$', timesuffix)
    if r is None:
        raise ValueError('Cannot parse \'{}\'. Valid examples are: 10s, 5m, 2h'.format(timesuffix))

    r = re.match('(\d+)([dhmsDHMS])?', timesuffix)
    if r is None:
        raise ValueError('Bad time/suffix value {}'.format(timesuffix))

    n = int(r.group(1))
    try:
        suffix = r.group(2).lower()
    except:
        suffix = 's'
    return n * suf[suffix]


if len(sys.argv) == 1:
    method = 'info'
else:
    method = sys.argv[1]

if method == 'info':
    info = {
        'Protocol': '0.1',
        'Description': 'Report files which must be not empty (log files)',
        'Version': '0.1',
        'Methods': 'check makeconfig info'
    }
    for k, v in info.items():
        print("{}: {}".format(k, v))

elif method == 'check':
    # read parameters
    prefix = os.getenv('PREFIX')
    basename = os.getenv('BASENAME')
    pathlist = os.getenv('PATHLIST','/var/log/*')
    skip = os.getenv('SKIP','')
    maxage = timesuffix2sec(os.getenv('MAXAGE', '10m'))
    recursive = bool(int(os.getenv('RECURSIVE','1')))

    nfiles = 0
    filename = None

    status = 'OK'
    details = ''

    for path in pathlist.split(' '):
        for curpath in glob.glob(path, recursive=recursive):
            if not os.path.isfile(curpath):
                continue
            if skip and re.search(skip, curpath):
                continue
            stat = os.stat(curpath)
            sz = stat.st_size
            if sz:
                continue
            age = time.time() - stat.st_mtime

            if age<maxage:
                continue

            nfiles += 1
            filename = curpath
            status = 'ERR'

    if filename:
        if nfiles>1:
            details = "{} and {} more files".format(filename, nfiles-1)
        else:
            details = filename

    print("NAME: {}{}".format(prefix, basename))
    print("TAGS: {}".format(basename))
    print("METHOD: heartbeat")
    print("DETAILS: {}".format(details))
    print("STATUS: {}".format(status))

elif method=='makeconfig':
    data="""
#
# Env configurational file for 'emptyold' check
#

# Space-separated directories to check
# PATHLIST=/var/log /tmp
PATHLIST=/var/log/**

# recursive? if 1 and path ends with '**', it will match any file 
RECURSIVE=1

# regex to skip these files (empty: do not skip anything)
# SKIP=/var/log/journal
SKIP=\.\d$|\.gz$|/.*error.log|/var/log/fsck/check.*|/var/log/mysql.err
""".strip()

    print(data)