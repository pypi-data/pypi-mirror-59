# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import simulation_pb2 as simulation__pb2


class SimulationStub(object):
  """
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.resume = channel.unary_unary(
        '/iams.servicer.Simulation/resume',
        request_serializer=simulation__pb2.EventRegister.SerializeToString,
        response_deserializer=simulation__pb2.EventSchedule.FromString,
        )
    self.schedule = channel.unary_unary(
        '/iams.servicer.Simulation/schedule',
        request_serializer=simulation__pb2.EventRegister.SerializeToString,
        response_deserializer=simulation__pb2.EventSchedule.FromString,
        )
    self.log = channel.unary_unary(
        '/iams.servicer.Simulation/log',
        request_serializer=simulation__pb2.EventLog.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class SimulationServicer(object):
  """
  """

  def resume(self, request, context):
    """
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def schedule(self, request, context):
    """
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def log(self, request, context):
    """
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SimulationServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'resume': grpc.unary_unary_rpc_method_handler(
          servicer.resume,
          request_deserializer=simulation__pb2.EventRegister.FromString,
          response_serializer=simulation__pb2.EventSchedule.SerializeToString,
      ),
      'schedule': grpc.unary_unary_rpc_method_handler(
          servicer.schedule,
          request_deserializer=simulation__pb2.EventRegister.FromString,
          response_serializer=simulation__pb2.EventSchedule.SerializeToString,
      ),
      'log': grpc.unary_unary_rpc_method_handler(
          servicer.log,
          request_deserializer=simulation__pb2.EventLog.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'iams.servicer.Simulation', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
