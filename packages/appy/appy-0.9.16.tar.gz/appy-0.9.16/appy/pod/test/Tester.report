Parsing ODT file... 
*******************************************************************************
* Suite PodNominal.
* Tests all functions of pod with tests that do not produce errors.

-------------------------------------------------------------------------------
- Test noPython.
- A template containing complex content (tables, inner tables, sections, etc) but containing no POD expressions is dumped. The result must be the same as the template.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test withAnImage.
- Idem, but also with a image embedded into the document.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test onlyExpressions.
- A template containing simple pod expressions is dumped.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test simpleIfIsTrue.
- A template containing a simple if statement is dumped (the statement in the context resolves to True).

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test simpleIfIsTrue003.
- Same as simpleIfIsTrue, but with a template made with OpenOffice 3 that adds formatting within notes.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test simpleIfIsFalse.
- A template containing a simple if statement is dumped (the statement in the context resolves to False).

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test simpleForEmptyList.
- A template containing a simple for statement is dumped (the statement in the context resolves to an empty list).

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test simpleForFilledList.
- A template containing a simple for statement is dumped (the statement in the context resolves to a list with some elements).

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test simpleForRow.
- A table row is repeated.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test ifAndFors1.
- A mix of “if” and “for” statements are used with tables and sections. Also tests “meta-if” statements.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forCellCorrectNumber.
- A cell is repeated. The number of resulting cells is correct to produce a coherent table.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forCellNotEnough.
- A cell is repeated. The number of resulting cells of the last row is not sufficient to produce a coherent table, so pod adds cells.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forCellTooMuch1.
- A cell is repeated. The number of resulting cells of the last row is too high. So pod splits it.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forCellTooMuch2.
- Idem, but with a different number of (surplus) cells.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forCellTooMuch3.
- Idem, but with a different number of (surplus) cells.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forCellTooMuch4.
- Idem, but with a different number of (surplus) cells.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forCellOnlyOne.
- Yet another cell repetition.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forCellBug.
- Yet another cell repetition.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forCellBug2.
- Yet another cell repetition. There was a bug: pod did not remember the column index of the cell (within its table) where the 'for' statement was defined.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forTable.
- A whole one-cell table is repeated.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forTableMinus.
- A whole one-cell table is repeated, but is then removed from the result through with the “minus” operator.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forTableMinus2.
- Idem above, but an inner table is in the cell. The inner table is not “minused”.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test simpleTest.
- A simple test used as introductory example on the website.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test headerFooter.
- Tests that pod replacements works in headers and footers.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test simpleFromTest.
- Simple test that includes the “from” part of a statement. Includes all error cases as well.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test elseStatements.
- Tests the “else” statements (including some errors in template).

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test varDef.
- Defines variables in 'do … with' statements.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test chart1.
- Renders a simple chart.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test fieldExpression.
- Tests a new way to insert POD expressions, via a field. A field can be cut-and-pasted; this is not as easy with track-changed text.

Checking result...
Test successful.

*******************************************************************************
* Suite PodXhtml.
* Tests for rendering XHTML chunks in an ODT document.

-------------------------------------------------------------------------------
- Test xhtmlEmpty.
- An empty test whose unique objective is to test something quickly without creating a new test. Simply temporarily update the XhtmlEmpty.py context with some XHTML chunk and run it.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlNominal.
- A test with a simple content coming from a ckeditor field.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlComplex.
- A test with bold, italics, sup, sub elements; with headings, subheadings, bulleted and numbered lists at several levels.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlStylesMapping.
- Tests the definition of a global styles mapping and local styles mapping.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlStylesMapping2.
- More tests with styles mappings.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlTables.
- Tests translation of XHTML tables.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlComplexTables.
- Tests translation of complex XHTML tables containing sub-tables, lists, etc.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlKeepWithNext.
- Tests the possibility to define paragraphs and list items (<li>) with an option “Keep with next”. Useful for keeping last paragraphs together with a signature at the bottom of a page, for example (avoid having the signature alone at the top of the last page).

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlEntities.
- Tests a content that includes HTML entities.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlComplex2.
- More XHTML cases.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlComplex3.
- Still more XHTML cases.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlComplex4.
- Still more.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlComplex5.
- More more.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlComplex6.
- Tests conflictual elements p->div->p, td->div->p.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlComplex7.
- Tests <ul><li> within <div> and tables with rowspans > 1.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlComplex8.
- Tests <div> within <ol><li>. Also tests “blockquote” tags.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlComplex9.
- Tests table widths expressed in cm, cell background colors expressed as rgb expressions, table cells with vertical alignment and paragraphs with “text-indent”.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlIgnoreStyles.
- Checks if POD ignores style information that can come from cut/past operations from a Word processor to a browser editor like ckeditor.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlColgroup.
- Tests a table containing a colgroup declaration. Also tests column widths specified in various ways.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlTableProperties.
- Tests dumping some XHTML tables with a style mapping containing a TableProperties instance.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlSpan.
- Tests applying an inline style to a span within a paragraph. Also tests application of both bold and underline to the same text span.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlListProperties.
- Tests using BulletedProperties and NumberedProperties to customize lists.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlCustomStyles.
- Tests the generation of custom ODF styles based on CSS properties.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlPIntoLis.
- Tests whether sub-paragraphs ('p' tags) are shown within 'li' tags. If several 'p' tags are found, they are removed but their content is kept, separated by carriage returns. Also tests the rendering of a table within a 'li' tag.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlPIntoTds.
- Paragraphs without any applied style, present into table cells, must take the cell style.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlInHeader.
- Tests if xhtml is correctly rendered even in a page header.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlTwisted.
- Tests special cases mixing inner and not-inner styles. Several mechanisms are tested here in combination: management of conflictual elements and management of late-dumping of inner-elements being in status “waiting”.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlHtml.
- Tests the preprocessor that converts valid HTML into valid XHTML.

Checking result...
Test successful.

*******************************************************************************
* Suite PodErrorsInTemplate.
* Tests errors that are generated as notes within templates.

-------------------------------------------------------------------------------
- Test errorExpression.
- A pod expression produces a Python exception.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test errorIf.
- A if statement produces a Python exception.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test errorForRuntime.
- “For” statements produce Python exceptions at “run-time” (ie no syntax error occurred while parsing the “for” statements)

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test errorForParsetime.
- “For” statements produce a Python exception at “parse-time” (ie syntax errors are present in the “for” statements)

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forTableMinusError.
- A table must be repeated through a for statement with a minus operator, but the table has a row with 2 cells. The minus operator may only be applied to one-cell tables.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test forTableMinusError2.
- A table must be repeated through a for statement with a minus operator, but the table has two rows. The minus operator may only be applied to one-cell tables.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test simpleMinusError.
- The “minus” operator is applied on a text.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test xhtmlStylesErrors.
- Tests some errors on local styles mapping definitions.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test errorFooter.
- An error is generated in the page footer.

Checking result...
Test successful.

-------------------------------------------------------------------------------
- Test ifElseErrors.
- Tests some more errors generated in if/else clauses (“else” without named “if”; “duplicate named if”; “if”expression (function “test”)

Checking result...
Test successful.

*******************************************************************************
* Suite PodErrors.
* Tests errors that are produced as exceptions by pod.

-------------------------------------------------------------------------------
- Test wrongResultType.
- The specified result type is not supported by pod.

Exception occurred:
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/shared/test.py", line 109, in run
    self.do()
   File "Tester.py", line 135, in do
    Renderer(template, context, self.result, **params).run()
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 730, in run
    self.finalize()
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 910, in finalize
    raise PodError(BAD_RESULT_TYPE % (
 appy.pod.PodError: Result "/home/gdy999/appy/pod/test/temp/wrongResultType.ort" has a wrong extension. Allowed extensions are: "['xlsx', 'docx', 'rtf', 'odp', 'doc', 'htm', 'ods', 'odt', 'swf', 'html', 'ppt', 'pdf', 'txt', 'xls', 'csv']".
Test successful.

-------------------------------------------------------------------------------
- Test hStarNotInt.
- In a global style mapping, a “h*” key does not have an integer value.

Exception occurred:
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/shared/test.py", line 109, in run
    self.do()
   File "Tester.py", line 135, in do
    Renderer(template, context, self.result, **params).run()
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 326, in __init__
    self.setStylesMapping(stylesMapping)
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 756, in setStylesMapping
    raise po
 appy.pod.PodError: For key "h*", the value must be of type "int".
Test successful.

-------------------------------------------------------------------------------
- Test styleNameNotString.
- In a global style mapping, a style name is not a string.

Exception occurred:
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/shared/test.py", line 109, in run
    self.do()
   File "Tester.py", line 135, in do
    Renderer(template, context, self.result, **params).run()
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 326, in __init__
    self.setStylesMapping(stylesMapping)
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 756, in setStylesMapping
    raise po
 appy.pod.PodError: The styles mapping value for key "h1" must be a string.
Test successful.

-------------------------------------------------------------------------------
- Test itemNone.
- In a global style mapping, the pair (None, None) is present.

Exception occurred:
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/shared/test.py", line 109, in run
    self.do()
   File "Tester.py", line 135, in do
    Renderer(template, context, self.result, **params).run()
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 326, in __init__
    self.setStylesMapping(stylesMapping)
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 756, in setStylesMapping
    raise po
 appy.pod.PodError: The styles mapping dictionary's keys must be strings.
Test successful.

-------------------------------------------------------------------------------
- Test unstylable.
- In a global style mapping, the 'li' key is present. But at present with pod you can't specify a given ODT list style. Pod uses its own ODT list style.

Exception occurred:
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/shared/test.py", line 109, in run
    self.do()
   File "Tester.py", line 135, in do
    Renderer(template, context, self.result, **params).run()
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 326, in __init__
    self.setStylesMapping(stylesMapping)
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 756, in setStylesMapping
    raise po
 appy.pod.PodError: You can't associate a style to element "li". Unstylable elements are: ('li', 'a')
Test successful.

-------------------------------------------------------------------------------
- Test odtStyleNotFound.
- In a global style mapping, an unexisting ODT style is specified.

Exception occurred:
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/shared/test.py", line 109, in run
    self.do()
   File "Tester.py", line 135, in do
    Renderer(template, context, self.result, **params).run()
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 326, in __init__
    self.setStylesMapping(stylesMapping)
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 756, in setStylesMapping
    raise po
 appy.pod.PodError: OpenDocument style "tutu" was not found in your template. Note that the styles names ("Heading 1", "Standard"...) that appear when opening your template with OpenOffice, for example, are a super-set of the styles that are really recorded into your document. Indeed, only styles that are in use within your template are actually recorded into the document. You may consult the list of available styles programmatically by calling your pod renderer's "getStyles" method.
Test successful.

-------------------------------------------------------------------------------
- Test paragraphToText.
- In a global style mapping, we try to map a “paragraph” style to a “text” style.

Exception occurred:
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/shared/test.py", line 109, in run
    self.do()
   File "Tester.py", line 135, in do
    Renderer(template, context, self.result, **params).run()
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 326, in __init__
    self.setStylesMapping(stylesMapping)
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 756, in setStylesMapping
    raise po
 appy.pod.PodError: For XHTML element "h1", you must associate a paragraph-wide OpenDocument style. "Internet link" is a "text" style (that applies to only a chunk of text within a paragraph).
Test successful.

-------------------------------------------------------------------------------
- Test textToParagraph.
- In a global style mapping, we try to map a “text” style to a “paragraph” style.

Exception occurred:
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/shared/test.py", line 109, in run
    self.do()
   File "Tester.py", line 135, in do
    Renderer(template, context, self.result, **params).run()
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 326, in __init__
    self.setStylesMapping(stylesMapping)
   File "/opt/Plone-2.5.5/Python-2.4.4/lib/python2.4/site-packages/appy/pod/renderer.py", line 756, in setStylesMapping
    raise po
 appy.pod.PodError: For XHTML element "b", you must associate an OpenDocument "text" style (that applies to only a chunk of text within a paragraph). "Text body" is a paragraph-wide style.
Test successful.

*******************************************************************************
* Suite PodImports.
* Tests the import of documents into a pod template.

-------------------------------------------------------------------------------
- Test imagesImport.
- Imports the content of images (given as paths) into the ODT result.

Checking result...
Test successful.

*******************************************************************************
* Suite PodOds.
* Tests with ODS results.

-------------------------------------------------------------------------------
- Test odsSimple.
- First simple test that generates a ODS file.

Checking result...
Test successful.

77/77 successful test(s) performed in 4.63 seconds, but 2 ignored test(s) not counted.
