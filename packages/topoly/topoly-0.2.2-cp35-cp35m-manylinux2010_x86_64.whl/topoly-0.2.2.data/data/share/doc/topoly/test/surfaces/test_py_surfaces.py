#!/usr/bin/python3
import sys
import os

from topoly_surfaces import lasso
full_array = [[ 1,   0.000000,   0.000000,   0.000000], 
[ 2,   1.000000,   0.000000,   0.000000], 
[ 3,   1.519376,   0.854546,   0.000000], 
[ 4,   1.228102,  -0.065844,  -0.260848], 
[ 5,   0.409454,  -0.443460,  -0.693541], 
[ 6,   1.042599,  -0.117467,   0.008497], 
[ 7,   1.974961,  -0.255223,   0.342749], 
[ 8,   2.506924,  -0.063232,  -0.481966], 
[ 9,   1.931307,   0.669387,  -0.118737], 
[10,   1.702770,   1.288413,   0.632647], 
[11,   2.323304,   0.644159,   1.079721], 
[12,   2.102030,   0.066894,   0.293717], 
[13,   2.514897,   0.810465,  -0.232252], 
[14,   2.894818,   1.335749,   0.529152], 
[15,   3.817838,   1.228070,   0.898530], 
[16,   4.722993,   1.646503,   0.973420], 
[17,   4.031658,   2.350980,   1.133941], 
[18,   3.162758,   2.547533,   0.679652], 
[19,   2.460517,   1.990879,   0.235811], 
[20,   1.675851,   1.371631,   0.264641], 
[21,   0.774931,   1.018335,   0.516685], 
[22,   0.052756,   1.119516,  -0.167585], 
[23,   0.186433,   1.774806,  -0.911040], 
[24,  -0.469058,   1.036846,  -0.750581], 
[25,   0.015815,   0.897981,   0.112909], 
[26,  -0.434444,   0.923269,  -0.779631], 
[27,   0.514195,   0.834903,  -0.475863], 
[28,  -0.433468,   0.927671,  -0.170364], 
[29,  -0.776257,   0.125372,   0.318320], 
[30,  -0.062597,  -0.048650,   0.996852], 
[31,   0.203395,  -0.239104,   0.051879], 
[32,   0.487903,  -0.737077,   0.871072], 
[33,   0.657560,   0.233873,   0.702332], 
[34,   1.024857,   0.425565,  -0.207803], 
[35,   0.326788,   0.928416,   0.301942], 
[36,   1.246893,   0.967434,  -0.087781], 
[37,   1.136249,   1.480931,  -0.938709], 
[38,   0.867092,   1.462408,  -1.901627], 
[39,   1.226895,   0.896308,  -2.643295], 
[40,   0.231314,   0.881452,  -2.550573], 
[41,   0.535998,   0.999069,  -1.605409], 
[42,   0.488348,   1.990193,  -1.481303], 
[43,   0.111324,   1.928334,  -0.557167], 
[44,  -0.078468,   1.118546,  -1.112346], 
[45,  -1.004991,   1.477029,  -1.226561], 
[46,  -0.893760,   1.198590,  -0.272570], 
[47,  -0.772393,   1.287248,   0.716071], 
[48,   0.122552,   1.640242,   0.443181], 
[49,  -0.614726,   1.547179,  -0.225969], 
[50,  -0.917517,   0.855001,   0.429170], 
[51,  -1.875319,   1.123794,   0.327354], 
[52,  -2.830895,   0.935985,   0.100195], 
[53,  -2.799883,   0.945225,   1.099672], 
[54,  -3.523426,   1.529180,   0.731593], 
[55,  -2.985147,   0.969932,   1.362066], 
[56,  -2.992716,   1.877266,   0.941724], 
[57,  -3.663064,   2.136737,   1.636927], 
[58,  -4.364785,   1.900624,   2.309116], 
[59,  -4.441840,   1.815059,   3.302465], 
[60,  -3.898437,   1.012764,   3.549521]] 

loop_array = [[1,   0.000000,   0.000000,   0.000000], 
[ 2,   1.000000,   0.000000,   0.000000], 
[ 3,   1.013236,   0.999912,   0.000000], 
[ 4,   1.085731,   0.065288,  -0.348170], 
[ 5,   1.840578,   0.362107,  -0.933067], 
[ 6,   1.339966,   0.144145,  -1.770850], 
[ 7,   0.791944,   0.979945,  -1.737513], 
[ 8,   1.251690,   1.125805,  -0.861522], 
[ 9,   0.352832,   0.687639,  -0.853409], 
[10,   0.446240,   1.654856,  -1.089559], 
[11,   1.159960,   1.893970,  -1.747912], 
[12,   0.682928,   1.606077,  -2.578309], 
[13,   1.418821,   1.764812,  -1.920080], 
[14,   2.259891,   1.897402,  -1.395656], 
[15,   2.292547,   1.502165,  -2.313655], 
[16,   2.466289,   0.605753,  -1.905904], 
[17,   2.642341,  -0.365445,  -2.066463], 
[18,   2.302180,   0.086705,  -1.241932], 
[19,   2.651566,  -0.815742,  -1.493964], 
[20,   1.659102,  -0.938107,  -1.487512], 
[21,   1.216083,  -1.790099,  -1.766516], 
[22,   0.514003,  -1.861676,  -1.058024], 
[23,   0.745617,  -2.588792,  -1.704288], 
[24,   0.221913,  -2.398219,  -0.873978], 
[25,   0.845723,  -2.382469,  -0.092561], 
[26,   0.961110,  -1.481894,  -0.511667], 
[27,   0.599080,  -0.794334,   0.117772], 
[28,   1.015244,   0.042289,  -0.238416], 
[29,   1.727815,  -0.596642,  -0.528260], 
[30,   0.820468,  -0.176545,  -0.543750]]

tail_array = [[31,   1.743002,  -0.172430,  -0.929643], 
[32,   2.414384,  -0.747494,  -1.397134], 
[33,   2.377248,  -0.388744,  -0.464440], 
[34,   1.671762,  -0.707806,   0.168403], 
[35,   0.973425,  -0.465802,  -0.505214], 
[36,   0.957498,  -0.274580,   0.476203], 
[37,   0.520740,  -0.657867,  -0.337636], 
[38,   1.331489,  -0.151092,  -0.630664], 
[39,   1.040409,   0.095741,   0.293645], 
[40,   0.167010,   0.579877,   0.346424], 
[41,  -0.791516,   0.788774,   0.540306], 
[42,  -1.399899,   1.424575,   0.065303], 
[43,  -1.234799,   1.391706,   1.051032], 
[44,  -1.400875,   1.296106,   2.032500], 
[45,  -1.101576,   1.806709,   2.838543], 
[46,  -1.779478,   2.539069,   2.774514], 
[47,  -1.110388,   3.069614,   2.254090], 
[48,  -0.858465,   2.986820,   3.218289], 
[49,  -0.868385,   2.436278,   2.383541], 
[50,  -0.237519,   3.169053,   2.128495], 
[51,   0.498855,   2.959378,   2.771759], 
[52,   0.181618,   3.459418,   3.577564], 
[53,  -0.333964,   3.723793,   4.392598], 
[54,  -0.021996,   3.760422,   5.341984], 
[55,  -0.964512,   3.706936,   5.671837], 
[56,  -1.636247,   3.342164,   6.316595], 
[57,  -1.731732,   3.550123,   7.290061], 
[58,  -1.860800,   3.146221,   6.384410], 
[59,  -1.671725,   3.527640,   5.479551], 
[60,  -1.606647,   3.375779,   6.465808]]

res_file='0 6 1 X X -37 -43 +44 +45 -49 +49 XX 0 0 1 X X XX  L0 XX 11.4769 30 1.91795\n'
res_vec='0 4 1 X X -33 +34 -35 -43 XX 0 2 1 X X -33 -43 XX LS2--C XX 10.4002 30 2.42151\n'
res_vec2='0 4 1 X X -30 +34 -35 -37 XX 0 1 1 X X -37 XX L-1C XX 12.1081 30 3.33025\n'
res_traj=['1   0 2 1 X X +58 -59 XX 0 0 1 X X XX  L0 XX 19.8323 30 2.32774\n',
'2   0 1 1 X X -30 XX 0 0 1 X X XX  L0 XX 11.58 30 2.06739\n',
'3   0 2 1 X X +30 -30 XX 0 0 1 X X XX  L0 XX 14.7794 30 2.01348\n']



if __name__ == "__main__":
    print("Testing PY surfaces\n")
    

    res = lasso('../data/lasso_08.xyz'.encode('utf-8'), 0, 30)
    res_str = res.decode('UTF-8')
    print("\'file\' input_method test; result:\n" + res_str.replace('\n',''))
    try:
        assert res_str == res_file
    except:
        print('\'file\' input_method failed :(\n')
    else: 
        print('\'file\' input_method passed :)\n')

    lasso('../data/lasso_traj_ndx.xyz'.encode('utf-8'), 0, 30, 'traj'.encode('utf-8'), output_name = 'test'.encode('utf-8'))
    print("\'traj\' input_method test; ", end='')
    try:
        with open('traj_test.txt', 'r') as f:
            res = []
            for line in f.readlines():
                if line[0] == '#':
                    continue
                line = line.replace('\t','   ')
                res.append(line)
        print("result:\n{}".format(res))
    except:
        print('Failed to open \'traj_test.txt\'')
        print('\'traj\' input_method failed :(\n') 
    try:
        assert res == res_traj
    except:
        print('\'traj\' input_method failed :(\n') 
    else: 
        print('\'traj\' input_method passed :)\n')
    

    res = lasso(input_method = 'vec'.encode('utf-8'), allchain = full_array, loop_beg = 1, loop_end = 30)
    res_str = res.decode('UTF-8')
    print("\'vec\' input_method test; result:\n" + res_str.replace('\n',''))
    try:
        assert res_str == res_vec
    except:
        print('\'vec\' input_method failed :(\n')
    else: 
        print('\'vec\' input_method passed :)\n')

    res = lasso(input_method = 'vec2'.encode('utf-8'), loop = loop_array, tail = tail_array)
    res_str = res.decode('UTF-8')
    print("\'vec2\' input_method test; result:\n" + res_str.replace('\n',''))
    try:
        assert res_str == res_vec2
    except:
        print('\'vec\' input_method failed :(\n')
    else: 
        print('\'vec\' input_method passed :)\n')

    os.remove('traj_test.txt')
