# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import axonclient.query_pb2 as query__pb2


class QueryServiceStub(object):
  """Service providing operations for the Query Messaging component of AxonServer 
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.OpenStream = channel.stream_stream(
        '/io.axoniq.axonserver.grpc.query.QueryService/OpenStream',
        request_serializer=query__pb2.QueryProviderOutbound.SerializeToString,
        response_deserializer=query__pb2.QueryProviderInbound.FromString,
        )
    self.Query = channel.unary_stream(
        '/io.axoniq.axonserver.grpc.query.QueryService/Query',
        request_serializer=query__pb2.QueryRequest.SerializeToString,
        response_deserializer=query__pb2.QueryResponse.FromString,
        )
    self.Subscription = channel.stream_stream(
        '/io.axoniq.axonserver.grpc.query.QueryService/Subscription',
        request_serializer=query__pb2.SubscriptionQueryRequest.SerializeToString,
        response_deserializer=query__pb2.SubscriptionQueryResponse.FromString,
        )


class QueryServiceServicer(object):
  """Service providing operations for the Query Messaging component of AxonServer 
  """

  def OpenStream(self, request_iterator, context):
    """Opens a Query- and Instruction stream to AxonServer. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Query(self, request, context):
    """Sends a point-to-point or scatter-gather Query 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Subscription(self, request_iterator, context):
    """Opens a Subscription Query 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QueryServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'OpenStream': grpc.stream_stream_rpc_method_handler(
          servicer.OpenStream,
          request_deserializer=query__pb2.QueryProviderOutbound.FromString,
          response_serializer=query__pb2.QueryProviderInbound.SerializeToString,
      ),
      'Query': grpc.unary_stream_rpc_method_handler(
          servicer.Query,
          request_deserializer=query__pb2.QueryRequest.FromString,
          response_serializer=query__pb2.QueryResponse.SerializeToString,
      ),
      'Subscription': grpc.stream_stream_rpc_method_handler(
          servicer.Subscription,
          request_deserializer=query__pb2.SubscriptionQueryRequest.FromString,
          response_serializer=query__pb2.SubscriptionQueryResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'io.axoniq.axonserver.grpc.query.QueryService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
