[tool.poetry]
name = "fracx"
version = "0.1.13"
description = "FracX is a library that can be used to interface with PDS Energy's FracX platform for exchanging frac schedules."
authors = ["Brock Friedrich <brocklfriedrich@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/la-mar/permian-frac-exchange"
repository = "https://github.com/la-mar/permian-frac-exchange"
keywords = ["fracx", "frac", "oil", "gas"]

[tool.poetry.dependencies]
python = "^3.6.5"
pyyaml = "^5.2"
xlrd = "^1.2.0"
python-dotenv = "^0.10.3"
click = "^7.0"
colorama = "^0.4.3"
sqlalchemy = "^1.3.12"
tomlkit = "^0.5.8"
attrdict = "^2.0.1"
datadog = "^0.33.0"
json_log_formatter = "^0.2.0"
logutils = "^0.3.5"
flask-sqlalchemy = "^2.4.1"
attr = "^0.3.1"
attrs = "^19.3.0"
pyparsing = "^2.4.6"
python-dateutil = "^2.8.1"
psycopg2-binary = "^2.8.4"
pymssql = {version = "^2.1.4", optional = true}
aiocontextvars = "^0.2.2"
cython = {version = "^0.29.14", optional = true}
coverage = {version = "^5.0.2", extras = ["toml"]}


[tool.poetry.dev-dependencies]
black = { version = "*", allow-prereleases = true }
mypy = "*"
pytest = "*"
pytest-cov = "*"
docker = "*"
boto3 = "*"
hypothesis = "*"
requests-mock = "*"
codecov = "^2.0.15"
flake8 = "^3.7.9"
ipython = "^7.11.1"
pytest-flask = "^0.15.0"
pytest-mock = "^2.0.0"
pytest_localftpserver = "^1.0.1"

[tool.poetry.extras]
mssql = ["cython", "pymssql"]

[tool.poetry.scripts]
fracx = "fracx.manage:main"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    "pragma: no cover",
    "if self.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "logger.debug",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.isort]
force_grid_wrap = 0
include_trailing_comma = true
line_length = 120
lines_after_imports = 2
multi_line_output = 3
use_parentheses = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

