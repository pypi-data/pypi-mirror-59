# This is the config file for your Raveberry setup.
# The default settings lead to a minimal installation.

[General]
# Set the directory where raveberry will be installed to
install_directory = /opt/raveberry/
# Changes the system's hostname. With this hostname the server will be accessible in the network. Leave blank to keep the system's hostname.
hostname = raveberry

[Modules]
# Set the following values to 'True' or 'False' to enable or disable installation of these features.
# Configures the system's audio visualization with HDMI output. Only works on Raspberry Pi 4
screen_visualization = False
# Configures the system's audio visualization with LEDs. Disable if the necessary hardware is not present.
led_visualization = False
# Normalize the volume of songs. Builds the `aacgain` tool which takes some time on a Raspberry Pi.
audio_normalization = False
# Configures the system's WiFi hotspot. Should only be enabled when a second wlan interface is present.
hotspot = False

[Song Caching]
# The directory to cache the songs into. Defaults to ~/Music/raveberry
cache_dir =
# The label of the external medium where the cache_dir should be created.
# The medium should be formatted as FAT.
# Leave empty if the directory should be placed in the local filesystem.
# The external medium will be mounted at /mnt/<Label>, so set cache_dir accordingly (e.g. /mnt/Stick/raveberry)
cache_medium =

[Sound Config]
# The alsa sink that is used to play music.
# List available sinks with `aplay -L` and insert number or name.
# examples include hw:0,0 or default:CARD=ALSA.
alsa_device = default

[Hotspot]
# The SSID of your home WiFi.
# In this WiFi, Raveberry will not create a hotspot.
# Get the SSID of the network you are currently connected to with `iwgetid`.
homewifi =
# The password for the WiFi created by Raveberry.
hotspot_password =

[Remote]
# The path to the private key that is used to build the ssh tunnel to the remote server.
remote_key =
# The IP of the remote machine.
remote_ip =
# The port on the remote machine that the tunnel connects to.
remote_port =
# The remote url that makes Raveberry accessible.
remote_url =

[Backup]
# If a past backup is present, it can be specified here.
db_backup =
# A command to backup the database. It will be executed every night.
# An example would be `sudo -u postgres pg_dump raveberry > /tmp/dbbackup`
# This command would just write the database's entries to a file.
# You can also provide the path to a script to perform additional actions.
backup_command =

[Development]
# The username you want to develop under.
# This user is added to the www-data group to be able to modify the webserver's files.
dev_user =
