Metadata-Version: 2.1
Name: pgsync
Version: 1.0.1
Summary: Postgres to elasticsearch sync
Home-page: https://github.com/toluaina/pgsync
Author: Tolu Aina
Author-email: tolu@pgsync.com
Maintainer: Tolu Aina
Maintainer-email: tolu@pgsync.com
License: UNKNOWN
Project-URL: Bug Reports, https://github.com/toluaina/pgsync/issues
Project-URL: Funding, https://patreon.com/toluaina
Project-URL: Source, https://github.com/toluaina/pgsync
Project-URL: Web, https://pgsync.com
Keywords: pgsync,elasticsearch,postgres,change data capture
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
Requires-Python: >=3.6.0
Requires-Dist: click (==7.0)
Requires-Dist: elasticsearch-dsl (==7.1.0)
Requires-Dist: elasticsearch (==7.1.0)
Requires-Dist: environs (==7.1.0)
Requires-Dist: faker (==3.0.0)
Requires-Dist: marshmallow (==3.3.0)
Requires-Dist: newrelic (==5.4.1.134)
Requires-Dist: psycopg2-binary (==2.8.4)
Requires-Dist: python-dateutil (==2.8.1)
Requires-Dist: python-dotenv (==0.10.3)
Requires-Dist: redis (==3.3.11)
Requires-Dist: six (==1.13.0)
Requires-Dist: sqlalchemy (==1.3.12)
Requires-Dist: sqlparse (==0.3.0)
Requires-Dist: text-unidecode (==1.3)
Requires-Dist: urllib3 (==1.25.7)

# PostgreSQL to Elasticsearch sync


`PGSync <https://pgsync.com>`__ is a middleware for syncing data from `Postgres <https://www.postgresql.org>`__ to `Elasticsearch <https://www.elastic.co/products/elastic-stack>`__.  
It allows you to keep `Postgres <https://www.postgresql.org>`__ as your source of truth data source and
expose structured denormalized documents in `Elasticsearch <https://www.elastic.co/products/elastic-stack>`__.


### Requirements

- `Python <https://www.python.org>`__ 3.6+
- `Postgres <https://www.postgresql.org>`__ 9.4+
- `Redis <https://redis.io>`__
- `Elasticsearch <https://www.elastic.co/products/elastic-stack>`__ 6.3.1+

### Postgres setup

  Enable `logical decoding <https://www.postgresql.org/docs/current/logicaldecoding.html>`__ in your 
  Postgres setting.

  - you would also need to set up at least two parameters at postgresql.conf

    ```wal_level = logical```

    ```max_replication_slots = 1```

### Installation

You can install PGSync from `PyPI <hhttps://pypi.org>`__:

    $ pip install pgsync

### Config

Create a schema for the application named e.g **schema.json**

`Example schema <https://github.com/toluaina/pg-sync/blob/master/examples/airbnb/schema.json>`__

Example spec

.. code-block:: json

    [
        {
            "index": "[database name]",
            "nodes": [
                {
                    "table": "[table A]",
                    "columns": [
                        "column 1 from table A",
                        "column 2 from table A",
                        ... additional columns
                    ],
                    "children": [
                        {
                            "table": "[table B with relationship to table A]",
                            "columns": [
                              "column 1 from table B",
                              "column 2 from table B",
                              ... additional columns
                            ],
                            "relationship": {
                                "variant": "object",
                                "type": "one_to_many"
                            },
                            ...
                        },
                        {
                            ... any other additional children
                        }
                    ]
                }
            ]
        }
    ]

### Environment variables 

Setup required environment variables for the application

    SCHEMA='/path/to/schema.json'

    ELASTICSEARCH_HOST=localhost
    ELASTICSEARCH_PORT=9200

    PG_HOST=localhost
    PG_USER=i-am-root # this must be a postgres superuser
    PG_PORT=5432
    PG_PASSWORD=*****

    REDIS_HOST=redis
    REDIS_PORT=6379
    REDIS_DB=0
    REDIS_AUTH=*****


## Running

bootstrap the database (one time only)
  $ bootstrap --config schema.json
run pgsync as a daemon
  $ pgsync --config schema.json --daemon


=======
History
=======

1.0.1 (2020-15-01)
------------------

* First release on PyPI.


