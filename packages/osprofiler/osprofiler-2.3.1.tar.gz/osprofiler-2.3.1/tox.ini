[tox]
minversion = 1.6
skipsdist = True
envlist = py35,py27,pep8

[testenv]
setenv = VIRTUAL_ENV={envdir}
         LANG=en_US.UTF-8
         LANGUAGE=en_US:en
         LC_ALL=C
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/rocky}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/test-requirements.txt
install_command = pip install -U {opts} {packages}
usedevelop = True
commands = python setup.py testr --slowest --testr-args='{posargs}'
distribute = false

[testenv:py27]
basepython = python2.7

[testenv:functional]
basepython = python2.7
setenv = {[testenv]setenv}
         OS_TEST_PATH=./osprofiler/tests/functional
deps =
  {[testenv]deps}
  oslo.messaging

[testenv:functional-py35]
basepython = python3.5
setenv = {[testenv:functional]setenv}
deps = {[testenv:functional]deps}

[testenv:pep8]
basepython = python3
commands =
  flake8
  # Run security linter
  bandit -r osprofiler -n5
distribute = false

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:cover]
basepython = python3
commands = python setup.py testr --coverage --testr-args='{posargs}'

[testenv:docs]
basepython = python3
commands = python setup.py build_sphinx

[testenv:bandit]
basepython = python3
commands = bandit -r osprofiler -n5

[flake8]
show-source = true
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,tools,setup.py,build,releasenotes

[hacking]
local-check-factory = osprofiler.hacking.checks.factory

[testenv:releasenotes]
basepython = python3
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
