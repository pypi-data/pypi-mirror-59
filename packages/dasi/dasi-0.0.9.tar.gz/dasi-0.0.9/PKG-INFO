Metadata-Version: 2.1
Name: dasi
Version: 0.0.9
Summary: Automated DNA assembly planner for Python
Home-page: https://github.com/jvrana/dasi-dna-design
Author: Justin Vrana
Author-email: justin.vrana@gmail.com
Requires-Python: >=3.6,<4.0
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Provides-Extra: documentation
Provides-Extra: styling
Requires-Dist: biopython (>=1.74,<2.0)
Requires-Dist: fire (>=0.1,<0.2)
Requires-Dist: frozendict (>=1.2,<2.0)
Requires-Dist: jsonschema (>=3.1,<4.0)
Requires-Dist: loggable-jdv (>=0.1.5,<0.2.0)
Requires-Dist: matplotlib (>=3.1,<4.0)
Requires-Dist: more-itertools (>=8.0,<9.0)
Requires-Dist: msgpack (>=0.6.1,<0.7.0)
Requires-Dist: msgpack-numpy (>=0.4.4,<0.5.0)
Requires-Dist: nest_asyncio (>=1.0,<2.0)
Requires-Dist: networkx (>=2.3,<3.0)
Requires-Dist: numpy (>=1.17,<2.0)
Requires-Dist: pandas (>=0.25.1,<0.26.0)
Requires-Dist: primer3plus (>=1.0.5,<2.0.0)
Requires-Dist: pyblastbio (>=0.6.1,<0.7.0)
Requires-Dist: seaborn (>=0.9.0,<0.10.0)
Requires-Dist: sortedcontainers (>=2.1,<3.0)
Requires-Dist: sympy (>=1.4,<2.0)
Requires-Dist: tqdm (>=4.32,<5.0)
Requires-Dist: uvloop (>=0.12.2,<0.13.0)
Project-URL: Documentation, https://jvrana.github.io/dasi-dna-design
Description-Content-Type: text/markdown

# DASi DNA Design

[![PyPI version](https://badge.fury.io/py/dasi.svg)](https://badge.fury.io/py/dasi)

**DASi** is an automatic DNA cloning plan designer aimed for operating on small budgets
by focusing on material re-use.

The software converts a nucleotide sequence, or a library of sequences, to an executable
 molecular assembly plan while
optimizing material cost, assembly efficiency, and assembly time.

The software goals are reminiscent of j5 or Teselegen but focused on:
1. having a dead-simple user interface and
1. utilizing information about current laboratory inventory in its optimization
algorithm.

### Planned Features

* Golden-gate support
* heirarchical a~~~~ssembly
* library support (with bayesian search to optimize shared parts)
* front-end
* connection to fabrication facility

### Use cases

* developing cloning plans from computer-generated sequences
* developing cloning plans for human-generated sequences
* developing plans for users that do not know the intricacies of molecular biology

### Other related repos used in this project:

* pyblastbio - python BLAST wrapper
* primer3-py-plus - python wrapper around Primer3
* loggable-jdv - logging class
* benchlingapi - Python BenchlingAPI

