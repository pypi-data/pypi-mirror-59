# File: interaction_pb2.py
# Author: Edwinn Gamborino
# Institution: NTU Center for Artificial Intelligence and Advanced Robotics
# Version: v0.2.6
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: interaction.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='interaction.proto',
  package='interaction',
  syntax='proto3',
  serialized_pb=_b('\n\x11interaction.proto\x12\x0binteraction\"%\n\x13RobotConnectRequest\x12\x0e\n\x06status\x18\x01 \x01(\t\"#\n\x11RobotConnectReply\x12\x0e\n\x06status\x18\x01 \x01(\t\"4\n\x14TabletConnectRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06gender\x18\x02 \x01(\t\"$\n\x12TabletConnectReply\x12\x0e\n\x06status\x18\x01 \x01(\t\"\x1f\n\nRobotInput\x12\x11\n\tutterance\x18\x01 \x01(\t\" \n\x0bRobotOutput\x12\x11\n\tutterance\x18\x01 \x01(\t\"\x1a\n\x0bTabletInput\x12\x0b\n\x03url\x18\x01 \x01(\t\"\x1e\n\x0cTabletOutput\x12\x0e\n\x06status\x18\x01 \x01(\t2\xbc\x02\n\x08Interact\x12R\n\x0cRobotConnect\x12 .interaction.RobotConnectRequest\x1a\x1e.interaction.RobotConnectReply\"\x00\x12U\n\rTabletConnect\x12!.interaction.TabletConnectRequest\x1a\x1f.interaction.TabletConnectReply\"\x00\x12@\n\tRobotSend\x12\x17.interaction.RobotInput\x1a\x18.interaction.RobotOutput\"\x00\x12\x43\n\nTabletSend\x12\x18.interaction.TabletInput\x1a\x19.interaction.TabletOutput\"\x00\x42@\n(com.interaction.robot.robohoninteractionB\rInteractProtoP\x01\xa2\x02\x02STb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_ROBOTCONNECTREQUEST = _descriptor.Descriptor(
  name='RobotConnectRequest',
  full_name='interaction.RobotConnectRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='interaction.RobotConnectRequest.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=71,
)


_ROBOTCONNECTREPLY = _descriptor.Descriptor(
  name='RobotConnectReply',
  full_name='interaction.RobotConnectReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='interaction.RobotConnectReply.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=73,
  serialized_end=108,
)


_TABLETCONNECTREQUEST = _descriptor.Descriptor(
  name='TabletConnectRequest',
  full_name='interaction.TabletConnectRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='interaction.TabletConnectRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gender', full_name='interaction.TabletConnectRequest.gender', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=110,
  serialized_end=162,
)


_TABLETCONNECTREPLY = _descriptor.Descriptor(
  name='TabletConnectReply',
  full_name='interaction.TabletConnectReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='interaction.TabletConnectReply.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=164,
  serialized_end=200,
)


_ROBOTINPUT = _descriptor.Descriptor(
  name='RobotInput',
  full_name='interaction.RobotInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='utterance', full_name='interaction.RobotInput.utterance', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=202,
  serialized_end=233,
)


_ROBOTOUTPUT = _descriptor.Descriptor(
  name='RobotOutput',
  full_name='interaction.RobotOutput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='utterance', full_name='interaction.RobotOutput.utterance', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=235,
  serialized_end=267,
)


_TABLETINPUT = _descriptor.Descriptor(
  name='TabletInput',
  full_name='interaction.TabletInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='interaction.TabletInput.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=269,
  serialized_end=295,
)


_TABLETOUTPUT = _descriptor.Descriptor(
  name='TabletOutput',
  full_name='interaction.TabletOutput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='interaction.TabletOutput.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=297,
  serialized_end=327,
)

DESCRIPTOR.message_types_by_name['RobotConnectRequest'] = _ROBOTCONNECTREQUEST
DESCRIPTOR.message_types_by_name['RobotConnectReply'] = _ROBOTCONNECTREPLY
DESCRIPTOR.message_types_by_name['TabletConnectRequest'] = _TABLETCONNECTREQUEST
DESCRIPTOR.message_types_by_name['TabletConnectReply'] = _TABLETCONNECTREPLY
DESCRIPTOR.message_types_by_name['RobotInput'] = _ROBOTINPUT
DESCRIPTOR.message_types_by_name['RobotOutput'] = _ROBOTOUTPUT
DESCRIPTOR.message_types_by_name['TabletInput'] = _TABLETINPUT
DESCRIPTOR.message_types_by_name['TabletOutput'] = _TABLETOUTPUT

RobotConnectRequest = _reflection.GeneratedProtocolMessageType('RobotConnectRequest', (_message.Message,), dict(
  DESCRIPTOR = _ROBOTCONNECTREQUEST,
  __module__ = 'interaction_pb2'
  # @@protoc_insertion_point(class_scope:interaction.RobotConnectRequest)
  ))
_sym_db.RegisterMessage(RobotConnectRequest)

RobotConnectReply = _reflection.GeneratedProtocolMessageType('RobotConnectReply', (_message.Message,), dict(
  DESCRIPTOR = _ROBOTCONNECTREPLY,
  __module__ = 'interaction_pb2'
  # @@protoc_insertion_point(class_scope:interaction.RobotConnectReply)
  ))
_sym_db.RegisterMessage(RobotConnectReply)

TabletConnectRequest = _reflection.GeneratedProtocolMessageType('TabletConnectRequest', (_message.Message,), dict(
  DESCRIPTOR = _TABLETCONNECTREQUEST,
  __module__ = 'interaction_pb2'
  # @@protoc_insertion_point(class_scope:interaction.TabletConnectRequest)
  ))
_sym_db.RegisterMessage(TabletConnectRequest)

TabletConnectReply = _reflection.GeneratedProtocolMessageType('TabletConnectReply', (_message.Message,), dict(
  DESCRIPTOR = _TABLETCONNECTREPLY,
  __module__ = 'interaction_pb2'
  # @@protoc_insertion_point(class_scope:interaction.TabletConnectReply)
  ))
_sym_db.RegisterMessage(TabletConnectReply)

RobotInput = _reflection.GeneratedProtocolMessageType('RobotInput', (_message.Message,), dict(
  DESCRIPTOR = _ROBOTINPUT,
  __module__ = 'interaction_pb2'
  # @@protoc_insertion_point(class_scope:interaction.RobotInput)
  ))
_sym_db.RegisterMessage(RobotInput)

RobotOutput = _reflection.GeneratedProtocolMessageType('RobotOutput', (_message.Message,), dict(
  DESCRIPTOR = _ROBOTOUTPUT,
  __module__ = 'interaction_pb2'
  # @@protoc_insertion_point(class_scope:interaction.RobotOutput)
  ))
_sym_db.RegisterMessage(RobotOutput)

TabletInput = _reflection.GeneratedProtocolMessageType('TabletInput', (_message.Message,), dict(
  DESCRIPTOR = _TABLETINPUT,
  __module__ = 'interaction_pb2'
  # @@protoc_insertion_point(class_scope:interaction.TabletInput)
  ))
_sym_db.RegisterMessage(TabletInput)

TabletOutput = _reflection.GeneratedProtocolMessageType('TabletOutput', (_message.Message,), dict(
  DESCRIPTOR = _TABLETOUTPUT,
  __module__ = 'interaction_pb2'
  # @@protoc_insertion_point(class_scope:interaction.TabletOutput)
  ))
_sym_db.RegisterMessage(TabletOutput)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n(com.interaction.robot.robohoninteractionB\rInteractProtoP\001\242\002\002ST'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class InteractStub(object):
    """The interact service definition.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.RobotConnect = channel.unary_unary(
          '/interaction.Interact/RobotConnect',
          request_serializer=RobotConnectRequest.SerializeToString,
          response_deserializer=RobotConnectReply.FromString,
          )
      self.TabletConnect = channel.unary_unary(
          '/interaction.Interact/TabletConnect',
          request_serializer=TabletConnectRequest.SerializeToString,
          response_deserializer=TabletConnectReply.FromString,
          )
      self.RobotSend = channel.unary_unary(
          '/interaction.Interact/RobotSend',
          request_serializer=RobotInput.SerializeToString,
          response_deserializer=RobotOutput.FromString,
          )
      self.TabletSend = channel.unary_unary(
          '/interaction.Interact/TabletSend',
          request_serializer=TabletInput.SerializeToString,
          response_deserializer=TabletOutput.FromString,
          )


  class InteractServicer(object):
    """The interact service definition.
    """

    def RobotConnect(self, request, context):
      """Sends connection confirm
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def TabletConnect(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RobotSend(self, request, context):
      """Sends information
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def TabletSend(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_InteractServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'RobotConnect': grpc.unary_unary_rpc_method_handler(
            servicer.RobotConnect,
            request_deserializer=RobotConnectRequest.FromString,
            response_serializer=RobotConnectReply.SerializeToString,
        ),
        'TabletConnect': grpc.unary_unary_rpc_method_handler(
            servicer.TabletConnect,
            request_deserializer=TabletConnectRequest.FromString,
            response_serializer=TabletConnectReply.SerializeToString,
        ),
        'RobotSend': grpc.unary_unary_rpc_method_handler(
            servicer.RobotSend,
            request_deserializer=RobotInput.FromString,
            response_serializer=RobotOutput.SerializeToString,
        ),
        'TabletSend': grpc.unary_unary_rpc_method_handler(
            servicer.TabletSend,
            request_deserializer=TabletInput.FromString,
            response_serializer=TabletOutput.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'interaction.Interact', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaInteractServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The interact service definition.
    """
    def RobotConnect(self, request, context):
      """Sends connection confirm
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def TabletConnect(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RobotSend(self, request, context):
      """Sends information
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def TabletSend(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaInteractStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The interact service definition.
    """
    def RobotConnect(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sends connection confirm
      """
      raise NotImplementedError()
    RobotConnect.future = None
    def TabletConnect(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    TabletConnect.future = None
    def RobotSend(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sends information
      """
      raise NotImplementedError()
    RobotSend.future = None
    def TabletSend(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    TabletSend.future = None


  def beta_create_Interact_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('interaction.Interact', 'RobotConnect'): RobotConnectRequest.FromString,
      ('interaction.Interact', 'RobotSend'): RobotInput.FromString,
      ('interaction.Interact', 'TabletConnect'): TabletConnectRequest.FromString,
      ('interaction.Interact', 'TabletSend'): TabletInput.FromString,
    }
    response_serializers = {
      ('interaction.Interact', 'RobotConnect'): RobotConnectReply.SerializeToString,
      ('interaction.Interact', 'RobotSend'): RobotOutput.SerializeToString,
      ('interaction.Interact', 'TabletConnect'): TabletConnectReply.SerializeToString,
      ('interaction.Interact', 'TabletSend'): TabletOutput.SerializeToString,
    }
    method_implementations = {
      ('interaction.Interact', 'RobotConnect'): face_utilities.unary_unary_inline(servicer.RobotConnect),
      ('interaction.Interact', 'RobotSend'): face_utilities.unary_unary_inline(servicer.RobotSend),
      ('interaction.Interact', 'TabletConnect'): face_utilities.unary_unary_inline(servicer.TabletConnect),
      ('interaction.Interact', 'TabletSend'): face_utilities.unary_unary_inline(servicer.TabletSend),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Interact_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('interaction.Interact', 'RobotConnect'): RobotConnectRequest.SerializeToString,
      ('interaction.Interact', 'RobotSend'): RobotInput.SerializeToString,
      ('interaction.Interact', 'TabletConnect'): TabletConnectRequest.SerializeToString,
      ('interaction.Interact', 'TabletSend'): TabletInput.SerializeToString,
    }
    response_deserializers = {
      ('interaction.Interact', 'RobotConnect'): RobotConnectReply.FromString,
      ('interaction.Interact', 'RobotSend'): RobotOutput.FromString,
      ('interaction.Interact', 'TabletConnect'): TabletConnectReply.FromString,
      ('interaction.Interact', 'TabletSend'): TabletOutput.FromString,
    }
    cardinalities = {
      'RobotConnect': cardinality.Cardinality.UNARY_UNARY,
      'RobotSend': cardinality.Cardinality.UNARY_UNARY,
      'TabletConnect': cardinality.Cardinality.UNARY_UNARY,
      'TabletSend': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'interaction.Interact', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
