Metadata-Version: 2.1
Name: dcyd
Version: 0.0.4
Summary: dcyd model performance monitoring client
Home-page: https://github.com/dcyd-inc/dcyd-mpm-client-python
Author: Tim Eller
Author-email: tim@dcyd.io
License: UNKNOWN
Description: # MPM Model Performance Monitoring client
        
        ## Installation
        
        <pre>
        $ pip3 install dcyd
        $ dcyd-config <i>AN_ALPHANUMERIC_USERNAME</i>
        $ export DCYD_CONFIG_FILE=<i>/some/path/</i>dcyd-key.json
        </pre>
        
        ## Usage
        <pre>
        from dcyd.mpm import mpm
        
        @mpm
        def my_predict_function(<i>some args</i>, <i>some kwargs</i>):
            ...
        
            return <i>some scalar</i>
        </pre>
        
        @mpm(<i>optional kwargs to help filter data later</i>)
        def my_other_predict_function(<i>some args</i>, <i>some kwargs</i>):
            ...
        
            return <i>some scalar</i>
        </pre>
        
        ## Development
        
        1. Clone the repo locally, and switch to a branch other than `master`.
        2. Create and activate a virtual environment:
        <pre>
        $ python3 -m venv <i>my_env_name</i>
        </pre>
        3. From the directory containing `setup.py`:
        ```
        $ pip3 install .
        ```
        or
        ```
        $ pip3 install -e .
        ```
        (These are in place of `python3 setup.py install` and `python3 setup.py develop`, for reasons explained [here](https://stackoverflow.com/questions/19048732/python-setup-py-develop-vs-install).
        
        ### Distributing the package in PyPI
        
        This process comes from [this turorial](https://packaging.python.org/tutorials/packaging-projects/).
        1. Increment the version in `setup.py`, using [these rules](https://www.python.org/dev/peps/pep-0440/) (or newer).
        2. Install/update some modules:
        ```
        $ pip3 install --user --upgrade setuptools wheel twine
        ```
        3. From the directory containing `setup.py` (and _not_ in a virtual environment), create the wheel:
        ```
        $ python3 setup.py sdist bdist_wheel
        ```
        4. Upload the wheel to PyPI:
        ```
        $ python3 -m twine upload dist/*
        ```
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.5
Description-Content-Type: text/markdown
