Metadata-Version: 2.1
Name: django-graphql-auth
Version: 0.1.8
Summary: Graphql and relay authentication with Graphene for Django.
Home-page: https://github.com/PedroBern/django-graphql-auth
Author: pedrobern
Author-email: pedrobermoreira@gmail.com
Maintainer: pedrobern
License: MIT
Project-URL: Issues, https://github.com/PedroBern/django-graphql-auth/issues
Keywords: api graphql rest relay graphene auth
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Framework :: Django
Classifier: Framework :: Django :: 2.1
Classifier: Framework :: Django :: 2.2
Classifier: Framework :: Django :: 3.0
Description-Content-Type: text/x-rst
Requires-Dist: Django (>=2.1.0)
Requires-Dist: django-graphql-jwt (>=0.3.0)
Requires-Dist: django-filter (>=2.2.0)
Requires-Dist: graphene-django (>=2.1.8)
Requires-Dist: graphene (>=2.1.8)
Provides-Extra: dev
Requires-Dist: pytest (>=3.6.3) ; extra == 'dev'
Requires-Dist: pytest-cov (>=2.4.0) ; extra == 'dev'
Requires-Dist: pytest-django (>=3.1.2) ; extra == 'dev'
Requires-Dist: coveralls ; extra == 'dev'
Provides-Extra: test
Requires-Dist: pytest (>=3.6.3) ; extra == 'test'
Requires-Dist: pytest-cov (>=2.4.0) ; extra == 'test'
Requires-Dist: pytest-django (>=3.1.2) ; extra == 'test'
Requires-Dist: coveralls ; extra == 'test'

Django GraphQL Auth
===================

|Pypi| |Build Status| |Codecov|

GraphQL authentication for `Django <https://github.com/django/django>`_!

Features
--------

* Fully compatible with `Relay <https://github.com/facebook/relay>`_
* Works with default/custom user model
* JWT authentication (with `Django GraphQL JWT <https://github.com/flavors/django-graphql-jwt>`_)
* User query with filters (with `Django Filter <https://github.com/carltongibson/django-filter>`_ and `Graphene Django <https://github.com/graphql-python/graphene-django>`_)
* User registration with email verification
* Resend activation email
* Retrieve/Update user
* Archive user
* Permanently delete user
* Turn archived user active again on login
* Password change
* Password reset through email
* Revoke user tokens on account archive and password change/reset
* All mutations return ``success`` and ``errors``
* Customizable

.. |Pypi| image:: https://img.shields.io/pypi/v/django-graphql-auth.svg
   :target: https://pypi.org/project/django-graphql-auth/
   :alt: Pypi

.. |Build Status| image:: https://travis-ci.com/pedrobern/django-graphql-auth.svg?branch=master
   :target: https://travis-ci.com/pedrobern/django-graphql-auth
   :alt: Build Status

.. |Codecov| image:: https://img.shields.io/codecov/c/github/pedrobern/django-graphql-auth/master.svg?style=flat-square
   :target: https://codecov.io/gh/pedrobern/django-graphql-auth/
   :alt: Codecov


