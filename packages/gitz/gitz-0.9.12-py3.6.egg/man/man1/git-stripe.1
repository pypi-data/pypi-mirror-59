.\" Man page generated from reStructuredText.
.
.TH GIT STRIPE: PUSH A SEQUENCE OF COMMIT IDS TO A REMOTE REPOSITORY  "" "" ""
.SH NAME
git stripe: Push a sequence of commit IDs to a remote repository \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH USAGE
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
git stripe [\-h] [\-q] [\-v] [\-c] [\-D] [\-d] [\-o OFFSET] [\-p PREFIX] [\-r REMOTES] [\-n]
              [count] [commit_id]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH POSITIONAL ARGUMENTS
.INDENT 0.0
.INDENT 3.5
\fBcount\fP: The number of striped branches to be created: default is 1
\fBcommit_id\fP: Branch/commit ID of the first stripe (or HEAD~ if none)
.UNINDENT
.UNINDENT
.SH OPTIONAL ARGUMENTS
.INDENT 0.0
.INDENT 3.5
\fB\-h, \-\-help\fP: show this help message and exit
.sp
\fB\-q, \-\-quiet\fP: Suppress all output
.sp
\fB\-v, \-\-verbose\fP: Report all messages in great detail
.sp
\fB\-c, \-\-careful\fP: Do not force push over existing stripes
.sp
\fB\-D, \-\-delete\-all\fP: Delete all striped branches
.sp
\fB\-d, \-\-delete\fP: Delete the striped branches for this request
.sp
\fB\-o OFFSET, \-\-offset OFFSET\fP: Offset to start numbering stripes
.sp
\fB\-p PREFIX, \-\-prefix PREFIX\fP: Base name for stripe branches (_gitz_stripe_ if none)
.sp
\fB\-r REMOTES, \-\-remotes REMOTES\fP: One or more remote remotes to push to, separated by colon. "." means the local repo, "^" means the upstream repo
.sp
\fB\-n, \-\-no\-run\fP: If set, commands will be printed but not executed
.UNINDENT
.UNINDENT
.SH DESCRIPTION
.sp
Starting with a given commit ID, and moving backwards from there,
push each commit ID to its own disposable branch name.
.sp
Useful to bring these commits to the attention of your continuous integration
if it has missed some of your commit IDs because you rebased or pushed a
sequences of commits too fast.
.SH EXAMPLES
.INDENT 0.0
.TP
.B \fBgit stripe\fP
Pushes HEAD~, HEAD~2 and HEAD~3 into their own branches named
_gitz_stripe_0, _gitz_stripe_1 and _gitz_stripe_2
.TP
.B \fBgit stripe 1\fP
Pushes HEAD~ into its own branch named _gitz_stripe_0
.TP
.B \fBgit stripe \-\-offset=5\fP
Pushes HEAD~, HEAD~2 and HEAD~3 into their own branches named
_gitz_stripe_5, _gitz_stripe_6 and _gitz_stripe_7
.TP
.B \fBgit stripe \-o5\fP
(same)
.TP
.B \fBgit stripe 2 HEAD~3\fP
Pushes HEAD~3 and HEAD~4 into two branches named _gitz_stripe_0
and  _gitz_stripe_1
.TP
.B \fBgit stripe HEAD~3 2\fP
(same)
.TP
.B \fBgit stripe \-\-delete\fP
Delete any branches named _gitz_stripe_0, _gitz_stripe_1
aor _gitz_stripe_2
.TP
.B \fBgit stripe \-d\fP
(same)
.sp
git stripe \-d does not fail if some or all of the branches
to be deleted are missing
.TP
.B \fBgit stripe \-\-prefix=MINE\fP
Pushes HEAD~, HEAD~2 and HEAD~3 into their own branches named
MINE_0, MINE_1, MINE_2
.TP
.B \fBgit stripe \-p MINE\fP
(same)
.TP
.B \fBgit stripe 2 \-\-prefix=MINE\fP
Pushes HEAD~ and HEAD~2 into their own branches named MINE_0
and MINE_1
.TP
.B \fBgit stripe 2 \-p=MINE\fP
(same)
.TP
.B \fBgit stripe 2 \-\-prefix=MINE \-\-offset\fP
Pushes HEAD~ and HEAD~2 into their own branches named MINE_10
and MINE_11
.TP
.B \fBgit stripe 2 \-p MINE \-o10\fP
(same)
.UNINDENT
.\" Generated by docutils manpage writer.
.
