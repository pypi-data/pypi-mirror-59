.\" Man page generated from reStructuredText.
.
.TH GIT NEW: CREATE AND PUSH NEW BRANCHES  "" "" ""
.SH NAME
git new: Create and push new branches \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH USAGE
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
git new [\-h] [\-q] [\-v] [\-f] [\-F] [\-o ORIGIN] [\-r REFERENCE_BRANCH] [\-n]
           branches [branches ...]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH POSITIONAL ARGUMENTS
.INDENT 0.0
.INDENT 3.5
\fBbranches\fP: Names of branches to create
.UNINDENT
.UNINDENT
.SH OPTIONAL ARGUMENTS
.INDENT 0.0
.INDENT 3.5
\fB\-h, \-\-help\fP: show this help message and exit
.sp
\fB\-q, \-\-quiet\fP: Suppress all output
.sp
\fB\-v, \-\-verbose\fP: Report all messages in great detail
.sp
\fB\-f, \-\-force\fP: Force push over existing branches
.sp
\fB\-F, \-\-force\-protected\fP: Force push over existing or protected branches
.sp
\fB\-o ORIGIN, \-\-origin ORIGIN\fP: Remote origin to push to
.sp
\fB\-r REFERENCE_BRANCH, \-\-reference\-branch REFERENCE_BRANCH\fP: Branch to create from, in the form \fBbranch\fP or \fBremote/branch\fP
.sp
\fB\-n, \-\-no\-run\fP: If set, commands will be printed but not executed
.UNINDENT
.UNINDENT
.SH DESCRIPTION
.sp
Create new branches from the reference branch and push them with
\-\-set\-upstream.
.sp
\fBgit new\fP does the things you really want to safely get new branches
where you can start working and pushing immediately
.INDENT 0.0
.IP \(bu 2
Fails leaving the workspace unchanged if there are uncommitted changes
.IP \(bu 2
Fails if any branch already exists locally or remotely, unless \-f/\-\-force
.IP \(bu 2
Fetches the \fIreference branch\fP \- a branch on the upstream or origin repo that
is the main branch for development \- likely upstream/master or origin/master
.IP \(bu 2
Create new branches locally from that reference branch commit ID
.IP \(bu 2
Pushes them to the remote origin with \-\-set\-upstream
.UNINDENT
.sp
gitz can guess what the reference branch and remote origin are, and for
nearly all projects this will be correct, or this can be specified at the
command line, per project, or through environment variables \- see \fBgit gitz\fP
for more details.
.SH EXAMPLES
.INDENT 0.0
.TP
.B \fBgit new foo\fP
Create a new branch foo from the reference branch and push to the origin
.TP
.B \fBgit new foo \-\-origin=remote_1\fP
Create a new branch foo from the reference branch and push to remote_1
.TP
.B \fBgit new foo \-o remote_1\fP
(same)
.TP
.B \fBgit new one two three \-\-reference\-branch=some\-remote/master\fP
Create three new branches from the remote branch some\-remote/master
.TP
.B \fBgit new one two three \-r some\-remote/master\fP
(same)
.UNINDENT
.\" Generated by docutils manpage writer.
.
