Metadata-Version: 2.1
Name: adafruit-circuitpython-neotrellis
Version: 1.0.4
Summary: CircuitPython library for using Adafruit NeoTrellis.
Home-page: https://github.com/adafruit/Adafruit_CircuitPython_NeoTrellis
Author: Adafruit Industries
Author-email: circuitpython@adafruit.com
License: MIT
Description: Introduction
        ============
        
        .. image:: https://readthedocs.org/projects/adafruit-circuitpython-neotrellis/badge/?version=latest
            :target: https://circuitpython.readthedocs.io/projects/neotrellis/en/latest/
            :alt: Documentation Status
        
        .. image:: https://img.shields.io/discord/327254708534116352.svg
            :target: https://discord.gg/nBQh6qu
            :alt: Discord
        
        .. image:: https://travis-ci.com/adafruit/Adafruit_CircuitPython_NeoTrellis.svg?branch=master
            :target: https://travis-ci.com/adafruit/Adafruit_CircuitPython_NeoTrellis
            :alt: Build Status
        
        This is a library for using the Adafruit_NeoTrellis boards with circuitpython.
        
        Dependencies
        =============
        This driver depends on:
        
        * `Adafruit CircuitPython <https://github.com/adafruit/circuitpython>`_
        * `Bus Device <https://github.com/adafruit/Adafruit_CircuitPython_BusDevice>`_
        * `Register <https://github.com/adafruit/Adafruit_CircuitPython_Register>`_
        * `Adafruit Seesaw <https://github.com/adafruit/Adafruit_CircuitPython_seesaw>`_
        
        Please ensure all dependencies are available on the CircuitPython filesystem.
        This is easily achieved by downloading
        `the Adafruit library and driver bundle <https://github.com/adafruit/Adafruit_CircuitPython_Bundle>`_.
        
        Usage Example
        =============
        
        see examples/neotrellis_simpletest.py for usage example
        
        Contributing
        ============
        
        Contributions are welcome! Please read our `Code of Conduct
        <https://github.com/adafruit/Adafruit_CircuitPython_NeoTrellis/blob/master/CODE_OF_CONDUCT.md>`_
        before contributing to help this project stay welcoming.
        
        Building locally
        ================
        
        Zip release files
        -----------------
        
        To build this library locally you'll need to install the
        `circuitpython-build-tools <https://github.com/adafruit/circuitpython-build-tools>`_ package.
        
        .. code-block:: shell
        
            python3 -m venv .env
            source .env/bin/activate
            pip install circuitpython-build-tools
        
        Once installed, make sure you are in the virtual environment:
        
        .. code-block:: shell
        
            source .env/bin/activate
        
        Then run the build:
        
        .. code-block:: shell
        
            circuitpython-build-bundles --filename_prefix adafruit-circuitpython-neotrellis --library_location .
        
        Sphinx documentation
        -----------------------
        
        Sphinx is used to build the documentation based on rST files and comments in the code. First,
        install dependencies (feel free to reuse the virtual environment from above):
        
        .. code-block:: shell
        
            python3 -m venv .env
            source .env/bin/activate
            pip install Sphinx sphinx-rtd-theme
        
        Now, once you have the virtual environment activated:
        
        .. code-block:: shell
        
            cd docs
            sphinx-build -E -W -b html . _build/html
        
        This will output the documentation to ``docs/_build/html``. Open the index.html in your browser to
        view them. It will also (due to -W) error out on any warning like Travis will. This is a good way to
        locally verify it will pass.
        
Keywords: adafruit neotrellis neopixel trellis led rgbsensor hardware micropython circuitpython
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: System :: Hardware
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Description-Content-Type: text/x-rst
