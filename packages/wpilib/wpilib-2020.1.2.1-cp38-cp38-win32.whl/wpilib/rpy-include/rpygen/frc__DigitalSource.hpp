

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>

#include <..\_impl\include\frc\DigitalSource.h>


#include <rpygen/frc__InterruptableSensorBase.hpp>

namespace rpygen {

using namespace frc;

template <typename CxxBase>
using PyBasefrc__DigitalSource = 
    Pyfrc__InterruptableSensorBase<
        CxxBase
    >
;

template <typename CxxBase>
struct Pyfrc__DigitalSource : PyBasefrc__DigitalSource<CxxBase> {
    using PyBasefrc__DigitalSource<CxxBase>::PyBasefrc__DigitalSource;



#ifndef RPYGEN_DISABLE_KGetPortHandleForRouting_v
    HAL_Handle GetPortHandleForRouting() const override {
PYBIND11_OVERLOAD_PURE_NAME(HAL_Handle, CxxBase, "getPortHandleForRouting", GetPortHandleForRouting,);
    }
#endif

#ifndef RPYGEN_DISABLE_KGetAnalogTriggerTypeForRouting_v
    AnalogTriggerType GetAnalogTriggerTypeForRouting() const override {
PYBIND11_OVERLOAD_PURE_NAME(AnalogTriggerType, CxxBase, "getAnalogTriggerTypeForRouting", GetAnalogTriggerTypeForRouting,);
    }
#endif

#ifndef RPYGEN_DISABLE_KIsAnalogTrigger_v
    bool IsAnalogTrigger() const override {
PYBIND11_OVERLOAD_PURE_NAME(bool, CxxBase, "isAnalogTrigger", IsAnalogTrigger,);
    }
#endif

#ifndef RPYGEN_DISABLE_KGetChannel_v
    int GetChannel() const override {
PYBIND11_OVERLOAD_PURE_NAME(int, CxxBase, "getChannel", GetChannel,);
    }
#endif



};

}; // namespace rpygen