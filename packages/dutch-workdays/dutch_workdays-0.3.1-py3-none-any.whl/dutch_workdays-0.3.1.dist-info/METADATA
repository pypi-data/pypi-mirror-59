Metadata-Version: 2.1
Name: dutch-workdays
Version: 0.3.1
Summary: "A very small library that handles with Dutch calendars and holidays ðŸ‡³ðŸ‡±"
Home-page: https://gitlab.com/new10-public/dutch-workdays/
Author: New10
Author-email: pypi-admin@new10.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: License :: OSI Approved :: MIT License
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: dataclasses ; python_version < "3.7"
Provides-Extra: tests
Requires-Dist: flake8 (==3.7.9) ; extra == 'tests'
Requires-Dist: isort[pyproject] (==4.3.21) ; extra == 'tests'
Requires-Dist: mypy (==0.761) ; extra == 'tests'
Requires-Dist: pytest (==5.3.2) ; extra == 'tests'
Requires-Dist: pytest-cov (==2.8.1) ; extra == 'tests'
Requires-Dist: black (==19.10b0) ; extra == 'tests'
Requires-Dist: pre-commit (==1.21.0) ; extra == 'tests'
Requires-Dist: bump2version (==0.5.11) ; extra == 'tests'

Dutch Workdays
==============

A very small library that handles with Dutch calendars and holidays ðŸ‡³ðŸ‡±

Installing
----------

```
pip install dutch-workdays
```

Usage
-----

```python
from dutch_workdays import Calendar
cal = Calendar()
cal.get_king_queen_day(2018)
# (datetime.date(2018, 4, 27), "King's day")
```

`dutch-workdays` works as a drop-in replacement of workalendar_, so for the
rest of the API please refer to
the `workdays documentation`_.

Why not just using Workalendar instead?
---------------------------------------

Workalendar is an awesome library, it's very complete and very well maintained
but it's, unfortunately, quite a big dependency as well. It not only includes
Python code to handle calendars from most of the world, but it also requires C
libraries to calculate high-precision astronomy computations. It's an overkill
if you only need to know about Dutch holidays.

Differences from Workalendar
----------------------------

- All the codebase is type annotated.
- Zero dependencies
- Dateutil easter calculation is vendorized.


.. _workalendar: https://github.com/peopledoc/workalendar
.. _workdays documentation: https://peopledoc.github.io/workalendar/


