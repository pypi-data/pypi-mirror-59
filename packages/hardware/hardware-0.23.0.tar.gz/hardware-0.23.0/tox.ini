[tox]
minversion = 1.6
envlist = py27,py36,py37,py38,pep8,pylint,cover,docs
skipsdist = True

[testenv]
setenv =
    VIRTUAL_ENV={envdir}
    PYTHONDONTWRITEBYTECODE=1
    LANGUAGE=en_US
    TESTS_DIR=./hardware/tests
usedevelop = True
install_command =
    pip install -U {opts} {packages}
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
commands =
    stestr run {posargs}

[testenv:pep8]
basepython = python3
commands = flake8

[testenv:venv]
basepython = python3
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
commands = {posargs}

[testenv:cover]
basepython = python3
setenv =
    VIRTUAL_ENV={envdir}
    PYTHON=coverage run --source hardware --omit='*tests*' --parallel-mode
commands =
    coverage erase
    stestr run {posargs}
    coverage combine
    coverage report --omit='*tests*'
    coverage html -d cover --omit='*tests*'
    coverage xml -o cover/coverage.xml --omit='*tests*'

[testenv:pylint]
basepython = python3
whitelist_externals =
    /bin/sh
    /bin/bash
    /usr/bin/bash
commands = bash -c "{toxinidir}/tools/check-pylint-score.sh 8.91 -j $(nproc) --rcfile {toxinidir}/tools/pylintrc $(find {toxinidir}/hardware -name '*.py'|grep -v '^{toxinidir}/hardware/tests')"

[testenv:docs]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -b html -W doc/source doc/build/html

[flake8]
# H803 skipped on purpose per list discussion.
# E123, E125 skipped as they are invalid PEP-8.

show-source = True
ignore = E123,E125,H803,H302
builtins = _
exclude=.venv,.git,.tox,dist,doc,*openstack/common*,*lib/python*,*egg,build
