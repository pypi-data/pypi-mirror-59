
'''
This is auto-generated file,
which includes metadata for module Cisco_IOS_XR_ptp_cfg
'''

from ydk._core._dm_meta_info import _MetaInfoClassMember, _MetaInfoClass, _MetaInfoEnum
from ydk._core._dm_meta_info import ATTRIBUTE, REFERENCE_LIST, REFERENCE_LEAFLIST, REFERENCE_BITS, REFERENCE_UNION
from ydk._core._dm_meta_info import REFERENCE_CLASS, REFERENCE_IDENTITY_CLASS, REFERENCE_ENUM_CLASS, ANYXML_CLASS
from ydk._core._importer import _yang_ns

_meta_table = {
    'Ptp.Clock.Profile' : {
        'meta_info' : _MetaInfoClass('Ptp.Clock.Profile', REFERENCE_CLASS,
            '''Local clock PTP profile''',
            False, 
            [
            _MetaInfoClassMember('clock-profile', REFERENCE_ENUM_CLASS, 'PtpClockProfile', 'dt1:Ptp-clock-profile',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpClockProfile',
                [], [],
                '''                Clock profile
                ''',
                'clock_profile',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpClockProfile.default'),
            _MetaInfoClassMember('telecom-clock-type', REFERENCE_ENUM_CLASS, 'PtpTelecomClock', 'dt1:Ptp-telecom-clock',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpTelecomClock',
                [], [],
                '''                Telecom clock type
                ''',
                'telecom_clock_type',
                'Cisco-IOS-XR-ptp-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'profile',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Clock.Identity' : {
        'meta_info' : _MetaInfoClass('Ptp.Clock.Identity', REFERENCE_CLASS,
            '''Local clock identity''',
            False, 
            [
            _MetaInfoClassMember('clock-id-type', REFERENCE_ENUM_CLASS, 'PtpClockId', 'dt1:Ptp-clock-id',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpClockId',
                [], [],
                '''                Clock identity type
                ''',
                'clock_id_type',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpClockId.router_mac'),
            _MetaInfoClassMember('mac-address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                MAC Address
                ''',
                'mac_address',
                'Cisco-IOS-XR-ptp-cfg', False, has_when=True),
            _MetaInfoClassMember('eui', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                EUI-64 number
                ''',
                'eui',
                'Cisco-IOS-XR-ptp-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'identity',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Clock' : {
        'meta_info' : _MetaInfoClass('Ptp.Clock', REFERENCE_CLASS,
            '''PTP local clock configuration''',
            False, 
            [
            _MetaInfoClassMember('profile', REFERENCE_CLASS, 'Profile', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Clock.Profile',
                [], [],
                '''                Local clock PTP profile
                ''',
                'profile',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('identity', REFERENCE_CLASS, 'Identity', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Clock.Identity',
                [], [],
                '''                Local clock identity
                ''',
                'identity',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('timescale', REFERENCE_ENUM_CLASS, 'PtpTimescale', 'dt1:Ptp-timescale',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpTimescale',
                [], [],
                '''                Local clock timescale
                ''',
                'timescale',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('domain', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Local clock domain
                ''',
                'domain',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="0"),
            _MetaInfoClassMember('priority2', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Local clock priority2
                ''',
                'priority2',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="128"),
            _MetaInfoClassMember('time-source', REFERENCE_ENUM_CLASS, 'PtpTimeSource', 'dt1:Ptp-time-source',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpTimeSource',
                [], [],
                '''                Local clock time source
                ''',
                'time_source',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('priority1', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Local clock priority1
                ''',
                'priority1',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="128"),
            _MetaInfoClassMember('clock-class', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Local clock class
                ''',
                'clock_class',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="0"),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'clock',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.AnnounceInterval' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.AnnounceInterval', REFERENCE_CLASS,
            '''Announce interval''',
            False, 
            [
            _MetaInfoClassMember('time-type', REFERENCE_ENUM_CLASS, 'PtpTime', 'dt1:Ptp-time',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpTime',
                [], [],
                '''                Interval or Frequency
                ''',
                'time_type',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpTime.interval'),
            _MetaInfoClassMember('time-period', REFERENCE_ENUM_CLASS, 'PtpTimePeriod', 'dt1:Ptp-time-period',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpTimePeriod',
                [], [],
                '''                Time Period
                ''',
                'time_period',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpTimePeriod.Y_2'),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'announce-interval',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.Interop.EgressConversion.ClockClassMappings.ClockClassMapping' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Interop.EgressConversion.ClockClassMappings.ClockClassMapping', REFERENCE_LIST,
            '''Mapping for a given clock class value''',
            False, 
            [
            _MetaInfoClassMember('clock-class-from', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Clock Class to map from
                ''',
                'clock_class_from',
                'Cisco-IOS-XR-ptp-cfg', True),
            _MetaInfoClassMember('clock-class-to', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Clock class to map to
                ''',
                'clock_class_to',
                'Cisco-IOS-XR-ptp-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'clock-class-mapping',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.Interop.EgressConversion.ClockClassMappings' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Interop.EgressConversion.ClockClassMappings', REFERENCE_CLASS,
            '''Table for specific mappings for given clock
class values''',
            False, 
            [
            _MetaInfoClassMember('clock-class-mapping', REFERENCE_LIST, 'ClockClassMapping', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Interop.EgressConversion.ClockClassMappings.ClockClassMapping',
                [], [],
                '''                Mapping for a given clock class value
                ''',
                'clock_class_mapping',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'clock-class-mappings',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.Interop.EgressConversion' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Interop.EgressConversion', REFERENCE_CLASS,
            '''Iteroperation configuration to be used on
egress''',
            False, 
            [
            _MetaInfoClassMember('clock-class-mappings', REFERENCE_CLASS, 'ClockClassMappings', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Interop.EgressConversion.ClockClassMappings',
                [], [],
                '''                Table for specific mappings for given clock
                class values
                ''',
                'clock_class_mappings',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('clock-accuracy', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '254')], [],
                '''                Clock Accuracy value to use for the peer
                clock
                ''',
                'clock_accuracy',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('priority2', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Priority2 value to use for the peer clock
                ''',
                'priority2',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('clock-class-default', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Default clock class to use when a more
                specific mapping is not available
                ''',
                'clock_class_default',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('offset-scaled-log-variance', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '65535')], [],
                '''                OSLV value to use for the peer clock
                ''',
                'offset_scaled_log_variance',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('priority1', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Priority1 value to use for the peer clock
                ''',
                'priority1',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'egress-conversion',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.Interop.IngressConversion.ClockClassMappings.ClockClassMapping' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Interop.IngressConversion.ClockClassMappings.ClockClassMapping', REFERENCE_LIST,
            '''Mapping for a given clock class value''',
            False, 
            [
            _MetaInfoClassMember('clock-class-from', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Clock Class to map from
                ''',
                'clock_class_from',
                'Cisco-IOS-XR-ptp-cfg', True),
            _MetaInfoClassMember('clock-class-to', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Clock class to map to
                ''',
                'clock_class_to',
                'Cisco-IOS-XR-ptp-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'clock-class-mapping',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.Interop.IngressConversion.ClockClassMappings' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Interop.IngressConversion.ClockClassMappings', REFERENCE_CLASS,
            '''Table for specific mappings for given clock
class values''',
            False, 
            [
            _MetaInfoClassMember('clock-class-mapping', REFERENCE_LIST, 'ClockClassMapping', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Interop.IngressConversion.ClockClassMappings.ClockClassMapping',
                [], [],
                '''                Mapping for a given clock class value
                ''',
                'clock_class_mapping',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'clock-class-mappings',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.Interop.IngressConversion' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Interop.IngressConversion', REFERENCE_CLASS,
            '''Iteroperation configuration to be used on
ingress''',
            False, 
            [
            _MetaInfoClassMember('clock-class-mappings', REFERENCE_CLASS, 'ClockClassMappings', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Interop.IngressConversion.ClockClassMappings',
                [], [],
                '''                Table for specific mappings for given clock
                class values
                ''',
                'clock_class_mappings',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('clock-accuracy', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '254')], [],
                '''                Clock Accuracy value to use for the peer
                clock
                ''',
                'clock_accuracy',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('priority2', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Priority2 value to use for the peer clock
                ''',
                'priority2',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('clock-class-default', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Default clock class to use when a more
                specific mapping is not available
                ''',
                'clock_class_default',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('offset-scaled-log-variance', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '65535')], [],
                '''                OSLV value to use for the peer clock
                ''',
                'offset_scaled_log_variance',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('priority1', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Priority1 value to use for the peer clock
                ''',
                'priority1',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'ingress-conversion',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.Interop' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Interop', REFERENCE_CLASS,
            '''Table for interop configuration''',
            False, 
            [
            _MetaInfoClassMember('egress-conversion', REFERENCE_CLASS, 'EgressConversion', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Interop.EgressConversion',
                [], [],
                '''                Iteroperation configuration to be used on
                egress
                ''',
                'egress_conversion',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('ingress-conversion', REFERENCE_CLASS, 'IngressConversion', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Interop.IngressConversion',
                [], [],
                '''                Iteroperation configuration to be used on
                ingress
                ''',
                'ingress_conversion',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('profile', REFERENCE_ENUM_CLASS, 'PtpClockProfile', 'dt1:Ptp-clock-profile',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpClockProfile',
                [], [],
                '''                Profile to interoperate with
                ''',
                'profile',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('domain', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Domain number of the peer clock
                ''',
                'domain',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'interop',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.SourceIpv4Address' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.SourceIpv4Address', REFERENCE_CLASS,
            '''Source IPv4 Address''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'bool', 'boolean',
                None, None,
                [], [],
                '''                Enable source IP address
                ''',
                'enable',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('source-ip', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Source IP address to use
                ''',
                'source_ip',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'source-ipv4-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.Slaves.Slave.Ethernet' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Slaves.Slave.Ethernet', REFERENCE_LIST,
            '''ethernet''',
            False, 
            [
            _MetaInfoClassMember('slave-mac-address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Slave MAC Address
                ''',
                'slave_mac_address',
                'Cisco-IOS-XR-ptp-cfg', True),
            _MetaInfoClassMember('non-negotiated', ATTRIBUTE, 'bool', 'boolean',
                None, None,
                [], [],
                '''                Enable non-negotiated unicast on this
                interface
                ''',
                'non_negotiated',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'ethernet',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
            has_when=True,
        ),
    },
    'Ptp.Profiles.Profile.Slaves.Slave.Ipv4OrIpv6' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Slaves.Slave.Ipv4OrIpv6', REFERENCE_LIST,
            '''ipv4 or ipv6''',
            False, 
            [
            _MetaInfoClassMember('slave-ip-address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                Slave IP Address
                ''',
                'slave_ip_address',
                'Cisco-IOS-XR-ptp-cfg', True, [
                    _MetaInfoClassMember('slave-ip-address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        Slave IP Address
                        ''',
                        'slave_ip_address',
                        'Cisco-IOS-XR-ptp-cfg', True),
                    _MetaInfoClassMember('slave-ip-address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        Slave IP Address
                        ''',
                        'slave_ip_address',
                        'Cisco-IOS-XR-ptp-cfg', True),
                ]),
            _MetaInfoClassMember('non-negotiated', ATTRIBUTE, 'bool', 'boolean',
                None, None,
                [], [],
                '''                Enable non-negotiated unicast on this
                interface
                ''',
                'non_negotiated',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'ipv4-or-ipv6',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
            has_when=True,
        ),
    },
    'Ptp.Profiles.Profile.Slaves.Slave' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Slaves.Slave', REFERENCE_LIST,
            '''Slave configuration''',
            False, 
            [
            _MetaInfoClassMember('transport', REFERENCE_ENUM_CLASS, 'PtpEncap', 'dt1:Ptp-encap',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpEncap',
                [], [],
                '''                Slave Transport Type
                ''',
                'transport',
                'Cisco-IOS-XR-ptp-cfg', True),
            _MetaInfoClassMember('ethernet', REFERENCE_LIST, 'Ethernet', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Slaves.Slave.Ethernet',
                [], [],
                '''                ethernet
                ''',
                'ethernet',
                'Cisco-IOS-XR-ptp-cfg', False, has_when=True),
            _MetaInfoClassMember('ipv4-or-ipv6', REFERENCE_LIST, 'Ipv4OrIpv6', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Slaves.Slave.Ipv4OrIpv6',
                [], [],
                '''                ipv4 or ipv6
                ''',
                'ipv4_or_ipv6',
                'Cisco-IOS-XR-ptp-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'slave',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
            has_must=True,
        ),
    },
    'Ptp.Profiles.Profile.Slaves' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Slaves', REFERENCE_CLASS,
            '''Table for slave configuration''',
            False, 
            [
            _MetaInfoClassMember('slave', REFERENCE_LIST, 'Slave', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Slaves.Slave',
                [], [],
                '''                Slave configuration
                ''',
                'slave',
                'Cisco-IOS-XR-ptp-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'slaves',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.SyncInterval' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.SyncInterval', REFERENCE_CLASS,
            '''Sync interval''',
            False, 
            [
            _MetaInfoClassMember('time-type', REFERENCE_ENUM_CLASS, 'PtpTime', 'dt1:Ptp-time',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpTime',
                [], [],
                '''                Interval or Frequency
                ''',
                'time_type',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpTime.interval'),
            _MetaInfoClassMember('time-period', REFERENCE_ENUM_CLASS, 'PtpTimePeriod', 'dt1:Ptp-time-period',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpTimePeriod',
                [], [],
                '''                Time Period
                ''',
                'time_period',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpTimePeriod.Y_1'),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'sync-interval',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.Masters.Master.Ethernet.DelayAsymmetry' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Masters.Master.Ethernet.DelayAsymmetry', REFERENCE_CLASS,
            '''The delay asymmetry for this master''',
            False, 
            [
            _MetaInfoClassMember('magnitude', ATTRIBUTE, 'int', 'int32',
                None, None,
                [('-500000000', '500000000')], [],
                '''                How much longer the master to slave path
                takes than the reverse
                ''',
                'magnitude',
                'Cisco-IOS-XR-ptp-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('units', REFERENCE_ENUM_CLASS, 'PtpDelayAsymmetryUnits', 'dt1:Ptp-delay-asymmetry-units',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpDelayAsymmetryUnits',
                [], [],
                '''                The units to use for the delay asymmetry
                ''',
                'units',
                'Cisco-IOS-XR-ptp-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'delay-asymmetry',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
            is_presence=True,
        ),
    },
    'Ptp.Profiles.Profile.Masters.Master.Ethernet' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Masters.Master.Ethernet', REFERENCE_LIST,
            '''ethernet''',
            False, 
            [
            _MetaInfoClassMember('master-mac-address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Master MAC Address - only used if Transport
                is Ethernet
                ''',
                'master_mac_address',
                'Cisco-IOS-XR-ptp-cfg', True),
            _MetaInfoClassMember('delay-asymmetry', REFERENCE_CLASS, 'DelayAsymmetry', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Masters.Master.Ethernet.DelayAsymmetry',
                [], [],
                '''                The delay asymmetry for this master
                ''',
                'delay_asymmetry',
                'Cisco-IOS-XR-ptp-cfg', False, is_presence=True),
            _MetaInfoClassMember('master-clock-class', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Master clock class
                ''',
                'master_clock_class',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('non-negotiated', ATTRIBUTE, 'bool', 'boolean',
                None, None,
                [], [],
                '''                Enable non-negotiated unicast on this
                interface
                ''',
                'non_negotiated',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('priority', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Master priority
                ''',
                'priority',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('communication', REFERENCE_ENUM_CLASS, 'PtpTransport', 'dt1:Ptp-transport',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpTransport',
                [], [],
                '''                Communication Model
                ''',
                'communication',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpTransport.unicast'),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'ethernet',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
            has_when=True,
        ),
    },
    'Ptp.Profiles.Profile.Masters.Master.Ipv4OrIpv6.DelayAsymmetry' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Masters.Master.Ipv4OrIpv6.DelayAsymmetry', REFERENCE_CLASS,
            '''The delay asymmetry for this master''',
            False, 
            [
            _MetaInfoClassMember('magnitude', ATTRIBUTE, 'int', 'int32',
                None, None,
                [('-500000000', '500000000')], [],
                '''                How much longer the master to slave path
                takes than the reverse
                ''',
                'magnitude',
                'Cisco-IOS-XR-ptp-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('units', REFERENCE_ENUM_CLASS, 'PtpDelayAsymmetryUnits', 'dt1:Ptp-delay-asymmetry-units',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpDelayAsymmetryUnits',
                [], [],
                '''                The units to use for the delay asymmetry
                ''',
                'units',
                'Cisco-IOS-XR-ptp-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'delay-asymmetry',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
            is_presence=True,
        ),
    },
    'Ptp.Profiles.Profile.Masters.Master.Ipv4OrIpv6' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Masters.Master.Ipv4OrIpv6', REFERENCE_LIST,
            '''ipv4 or ipv6''',
            False, 
            [
            _MetaInfoClassMember('master-ip-address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                Master IP Address - used if Transport is
                not Ethernet
                ''',
                'master_ip_address',
                'Cisco-IOS-XR-ptp-cfg', True, [
                    _MetaInfoClassMember('master-ip-address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        Master IP Address - used if Transport is
                        not Ethernet
                        ''',
                        'master_ip_address',
                        'Cisco-IOS-XR-ptp-cfg', True),
                    _MetaInfoClassMember('master-ip-address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        Master IP Address - used if Transport is
                        not Ethernet
                        ''',
                        'master_ip_address',
                        'Cisco-IOS-XR-ptp-cfg', True),
                ]),
            _MetaInfoClassMember('delay-asymmetry', REFERENCE_CLASS, 'DelayAsymmetry', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Masters.Master.Ipv4OrIpv6.DelayAsymmetry',
                [], [],
                '''                The delay asymmetry for this master
                ''',
                'delay_asymmetry',
                'Cisco-IOS-XR-ptp-cfg', False, is_presence=True),
            _MetaInfoClassMember('master-clock-class', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Master clock class
                ''',
                'master_clock_class',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('non-negotiated', ATTRIBUTE, 'bool', 'boolean',
                None, None,
                [], [],
                '''                Enable non-negotiated unicast on this
                interface
                ''',
                'non_negotiated',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('priority', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Master priority
                ''',
                'priority',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('communication', REFERENCE_ENUM_CLASS, 'PtpTransport', 'dt1:Ptp-transport',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpTransport',
                [], [],
                '''                Communication Model
                ''',
                'communication',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpTransport.unicast'),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'ipv4-or-ipv6',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
            has_when=True,
        ),
    },
    'Ptp.Profiles.Profile.Masters.Master' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Masters.Master', REFERENCE_LIST,
            '''Master configuration''',
            False, 
            [
            _MetaInfoClassMember('transport', REFERENCE_ENUM_CLASS, 'PtpEncap', 'dt1:Ptp-encap',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpEncap',
                [], [],
                '''                Master Transport Type
                ''',
                'transport',
                'Cisco-IOS-XR-ptp-cfg', True),
            _MetaInfoClassMember('ethernet', REFERENCE_LIST, 'Ethernet', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Masters.Master.Ethernet',
                [], [],
                '''                ethernet
                ''',
                'ethernet',
                'Cisco-IOS-XR-ptp-cfg', False, has_when=True),
            _MetaInfoClassMember('ipv4-or-ipv6', REFERENCE_LIST, 'Ipv4OrIpv6', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Masters.Master.Ipv4OrIpv6',
                [], [],
                '''                ipv4 or ipv6
                ''',
                'ipv4_or_ipv6',
                'Cisco-IOS-XR-ptp-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'master',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
            has_must=True,
        ),
    },
    'Ptp.Profiles.Profile.Masters' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Masters', REFERENCE_CLASS,
            '''Table for master configuration''',
            False, 
            [
            _MetaInfoClassMember('master', REFERENCE_LIST, 'Master', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Masters.Master',
                [], [],
                '''                Master configuration
                ''',
                'master',
                'Cisco-IOS-XR-ptp-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'masters',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.Communication' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.Communication', REFERENCE_CLASS,
            '''Communication model''',
            False, 
            [
            _MetaInfoClassMember('model', REFERENCE_ENUM_CLASS, 'PtpTransport', 'dt1:Ptp-transport',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpTransport',
                [], [],
                '''                Communication Model
                ''',
                'model',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpTransport.unicast'),
            _MetaInfoClassMember('target-address-set', ATTRIBUTE, 'bool', 'boolean',
                None, None,
                [], [],
                '''                Target address set
                ''',
                'target_address_set',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='False'),
            _MetaInfoClassMember('target-address', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Target address
                ''',
                'target_address',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'communication',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.DelayRequestMinimumInterval' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.DelayRequestMinimumInterval', REFERENCE_CLASS,
            '''Minimum delay request interval''',
            False, 
            [
            _MetaInfoClassMember('time-type', REFERENCE_ENUM_CLASS, 'PtpTime', 'dt1:Ptp-time',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpTime',
                [], [],
                '''                Interval or Frequency
                ''',
                'time_type',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpTime.interval'),
            _MetaInfoClassMember('time-period', REFERENCE_ENUM_CLASS, 'PtpTimePeriod', 'dt1:Ptp-time-period',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpTimePeriod',
                [], [],
                '''                Time Period
                ''',
                'time_period',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpTimePeriod.Y_1'),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'delay-request-minimum-interval',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile.SourceIpv6Address' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile.SourceIpv6Address', REFERENCE_CLASS,
            '''Source IPv6 Address''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'bool', 'boolean',
                None, None,
                [], [],
                '''                Enable source IPv6 address
                ''',
                'enable',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('source-ipv6', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                None, None,
                [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                '''                Source IPv6 address to use
                ''',
                'source_ipv6',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'source-ipv6-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles.Profile' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles.Profile', REFERENCE_LIST,
            '''Profile configuration''',
            False, 
            [
            _MetaInfoClassMember('profile-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [], [b'[\\w\\-\\.:,_@#%$\\+=\\|;]+'],
                '''                Profile
                ''',
                'profile_name',
                'Cisco-IOS-XR-ptp-cfg', True),
            _MetaInfoClassMember('announce-interval', REFERENCE_CLASS, 'AnnounceInterval', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.AnnounceInterval',
                [], [],
                '''                Announce interval
                ''',
                'announce_interval',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('interop', REFERENCE_CLASS, 'Interop', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Interop',
                [], [],
                '''                Table for interop configuration
                ''',
                'interop',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('source-ipv4-address', REFERENCE_CLASS, 'SourceIpv4Address', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.SourceIpv4Address',
                [], [],
                '''                Source IPv4 Address
                ''',
                'source_ipv4_address',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('slaves', REFERENCE_CLASS, 'Slaves', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Slaves',
                [], [],
                '''                Table for slave configuration
                ''',
                'slaves',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('sync-interval', REFERENCE_CLASS, 'SyncInterval', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.SyncInterval',
                [], [],
                '''                Sync interval
                ''',
                'sync_interval',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('masters', REFERENCE_CLASS, 'Masters', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Masters',
                [], [],
                '''                Table for master configuration
                ''',
                'masters',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('communication', REFERENCE_CLASS, 'Communication', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.Communication',
                [], [],
                '''                Communication model
                ''',
                'communication',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('delay-request-minimum-interval', REFERENCE_CLASS, 'DelayRequestMinimumInterval', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.DelayRequestMinimumInterval',
                [], [],
                '''                Minimum delay request interval
                ''',
                'delay_request_minimum_interval',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('source-ipv6-address', REFERENCE_CLASS, 'SourceIpv6Address', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile.SourceIpv6Address',
                [], [],
                '''                Source IPv6 Address
                ''',
                'source_ipv6_address',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('sync-grant-duration', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('60', '1000')], [],
                '''                Sync unicast grant duration, in seconds
                ''',
                'sync_grant_duration',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="300"),
            _MetaInfoClassMember('general-cos', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '7')], [],
                '''                General COS
                ''',
                'general_cos',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="6"),
            _MetaInfoClassMember('sync-timeout', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('100', '100000')], [],
                '''                Sync timeout, in milliseconds
                ''',
                'sync_timeout',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="5000"),
            _MetaInfoClassMember('transport', REFERENCE_ENUM_CLASS, 'PtpEncap', 'dt1:Ptp-encap',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpEncap',
                [], [],
                '''                Transport
                ''',
                'transport',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpEncap.ipv4'),
            _MetaInfoClassMember('announce-timeout', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('2', '10')], [],
                '''                Announce Timeout
                ''',
                'announce_timeout',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="3"),
            _MetaInfoClassMember('cos', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '7')], [],
                '''                COS
                ''',
                'cos',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="6"),
            _MetaInfoClassMember('ipv4ttl', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '255')], [],
                '''                IPv4 TTL
                ''',
                'ipv4ttl',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="255"),
            _MetaInfoClassMember('port-state', REFERENCE_ENUM_CLASS, 'PtpPortState', 'dt1:Ptp-port-state',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpPortState',
                [], [],
                '''                Port state restriction
                ''',
                'port_state',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpPortState.any'),
            _MetaInfoClassMember('delay-response-timeout', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('100', '100000')], [],
                '''                Delay-Response timeout, in milliseconds
                ''',
                'delay_response_timeout',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="5000"),
            _MetaInfoClassMember('delay-response-grant-duration', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('60', '1000')], [],
                '''                Delay-Response unicast grant duration, in
                seconds
                ''',
                'delay_response_grant_duration',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="300"),
            _MetaInfoClassMember('event-cos', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '7')], [],
                '''                Event COS
                ''',
                'event_cos',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="6"),
            _MetaInfoClassMember('dscp', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '63')], [],
                '''                DSCP
                ''',
                'dscp',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="46"),
            _MetaInfoClassMember('ipv6-hop-limit', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '255')], [],
                '''                IPv6 Hop Limit
                ''',
                'ipv6_hop_limit',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="255"),
            _MetaInfoClassMember('general-dscp', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '63')], [],
                '''                General DSCP
                ''',
                'general_dscp',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="46"),
            _MetaInfoClassMember('clock-operation', REFERENCE_ENUM_CLASS, 'PtpClockOperation', 'dt1:Ptp-clock-operation',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpClockOperation',
                [], [],
                '''                Clock Operation
                ''',
                'clock_operation',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpClockOperation.two_step'),
            _MetaInfoClassMember('announce-grant-duration', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('60', '1000')], [],
                '''                Announce unicast grant duration, in seconds
                ''',
                'announce_grant_duration',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="300"),
            _MetaInfoClassMember('unicast-grant-invalid-request', REFERENCE_ENUM_CLASS, 'PtpInvalidUnicastGrantRequestResponse', 'dt1:Ptp-invalid-unicast-grant-request-response',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_datatypes', 'PtpInvalidUnicastGrantRequestResponse',
                [], [],
                '''                Invalid unicast grant request response
                ''',
                'unicast_grant_invalid_request',
                'Cisco-IOS-XR-ptp-cfg', False, default_value='Cisco_IOS_XR_ptp_datatypes.PtpInvalidUnicastGrantRequestResponse.reduce'),
            _MetaInfoClassMember('event-dscp', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '63')], [],
                '''                Event DSCP
                ''',
                'event_dscp',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="46"),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'profile',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Profiles' : {
        'meta_info' : _MetaInfoClass('Ptp.Profiles', REFERENCE_CLASS,
            '''Table for profile configuration''',
            False, 
            [
            _MetaInfoClassMember('profile', REFERENCE_LIST, 'Profile', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles.Profile',
                [], [],
                '''                Profile configuration
                ''',
                'profile',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'profiles',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.UtcOffset.LeapSecondFile' : {
        'meta_info' : _MetaInfoClass('Ptp.UtcOffset.LeapSecondFile', REFERENCE_CLASS,
            '''Source file containing leap second information''',
            False, 
            [
            _MetaInfoClassMember('source-url', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                URL of source file
                ''',
                'source_url',
                'Cisco-IOS-XR-ptp-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('polling-frequency', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '365')], [],
                '''                Polling frequency, in days
                ''',
                'polling_frequency',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'leap-second-file',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
            is_presence=True,
        ),
    },
    'Ptp.UtcOffset.ScheduledOffsets.ScheduledOffset' : {
        'meta_info' : _MetaInfoClass('Ptp.UtcOffset.ScheduledOffsets.ScheduledOffset', REFERENCE_LIST,
            '''Scheduled UTC offset configuration''',
            False, 
            [
            _MetaInfoClassMember('date', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [], [b'[\\w\\-\\.:,_@#%$\\+=\\|;]+'],
                '''                Offset application date, in ISO-8601 format
                (YYYY-MM-DD)
                ''',
                'date',
                'Cisco-IOS-XR-ptp-cfg', True),
            _MetaInfoClassMember('offset', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '32767')], [],
                '''                UTC offset, in seconds
                ''',
                'offset',
                'Cisco-IOS-XR-ptp-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'scheduled-offset',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.UtcOffset.ScheduledOffsets' : {
        'meta_info' : _MetaInfoClass('Ptp.UtcOffset.ScheduledOffsets', REFERENCE_CLASS,
            '''Table for scheduled UTC offset configuration''',
            False, 
            [
            _MetaInfoClassMember('scheduled-offset', REFERENCE_LIST, 'ScheduledOffset', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.UtcOffset.ScheduledOffsets.ScheduledOffset',
                [], [],
                '''                Scheduled UTC offset configuration
                ''',
                'scheduled_offset',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'scheduled-offsets',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.UtcOffset' : {
        'meta_info' : _MetaInfoClass('Ptp.UtcOffset', REFERENCE_CLASS,
            '''UTC offset configuration''',
            False, 
            [
            _MetaInfoClassMember('leap-second-file', REFERENCE_CLASS, 'LeapSecondFile', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.UtcOffset.LeapSecondFile',
                [], [],
                '''                Source file containing leap second information
                ''',
                'leap_second_file',
                'Cisco-IOS-XR-ptp-cfg', False, is_presence=True),
            _MetaInfoClassMember('scheduled-offsets', REFERENCE_CLASS, 'ScheduledOffsets', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.UtcOffset.ScheduledOffsets',
                [], [],
                '''                Table for scheduled UTC offset configuration
                ''',
                'scheduled_offsets',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('base-offset', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '32767')], [],
                '''                Base UTC offset configuration
                ''',
                'base_offset',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'utc-offset',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Logging.BestMasterClock' : {
        'meta_info' : _MetaInfoClass('Ptp.Logging.BestMasterClock', REFERENCE_CLASS,
            '''PTP best master clock logging configuration''',
            False, 
            [
            _MetaInfoClassMember('changes', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable best master clock changes logging
                ''',
                'changes',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'best-master-clock',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Logging.Servo' : {
        'meta_info' : _MetaInfoClass('Ptp.Logging.Servo', REFERENCE_CLASS,
            '''PTP PD Servo logging configuration''',
            False, 
            [
            _MetaInfoClassMember('events', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable servo events logging
                ''',
                'events',
                'Cisco-IOS-XR-asr9k-ptp-pd-cfg', False),
            ],
            'Cisco-IOS-XR-asr9k-ptp-pd-cfg',
            'servo',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-asr9k-ptp-pd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.Logging' : {
        'meta_info' : _MetaInfoClass('Ptp.Logging', REFERENCE_CLASS,
            '''PTP logging configuration''',
            False, 
            [
            _MetaInfoClassMember('best-master-clock', REFERENCE_CLASS, 'BestMasterClock', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Logging.BestMasterClock',
                [], [],
                '''                PTP best master clock logging configuration
                ''',
                'best_master_clock',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('servo', REFERENCE_CLASS, 'Servo', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Logging.Servo',
                [], [],
                '''                PTP PD Servo logging configuration
                ''',
                'servo',
                'Cisco-IOS-XR-asr9k-ptp-pd-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'logging',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.UncalibratedClockClass2' : {
        'meta_info' : _MetaInfoClass('Ptp.UncalibratedClockClass2', REFERENCE_CLASS,
            '''Clock class to be used while acquiring
phase-lock to a parent clock.''',
            False, 
            [
            _MetaInfoClassMember('clock-class', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Clock Class
                ''',
                'clock_class',
                'Cisco-IOS-XR-ptp-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('unless-from-holdover', ATTRIBUTE, 'bool', 'boolean',
                None, None,
                [], [],
                '''                Unless from holdover flag
                ''',
                'unless_from_holdover',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'uncalibrated-clock-class2',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
            is_presence=True,
        ),
    },
    'Ptp.TransparentClock.Domains.Domain' : {
        'meta_info' : _MetaInfoClass('Ptp.TransparentClock.Domains.Domain', REFERENCE_LIST,
            '''Transparent clock domain configuration''',
            False, 
            [
            _MetaInfoClassMember('domain', ATTRIBUTE, 'str', 'dt1:Transparent-clock-domain',
                None, None,
                [], [b'(all)'],
                '''                Domain
                ''',
                'domain',
                'Cisco-IOS-XR-ptp-cfg', True),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'domain',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.TransparentClock.Domains' : {
        'meta_info' : _MetaInfoClass('Ptp.TransparentClock.Domains', REFERENCE_CLASS,
            '''Table of domains containing transparent clock
configuration''',
            False, 
            [
            _MetaInfoClassMember('domain', REFERENCE_LIST, 'Domain', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.TransparentClock.Domains.Domain',
                [], [],
                '''                Transparent clock domain configuration
                ''',
                'domain',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'domains',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.TransparentClock' : {
        'meta_info' : _MetaInfoClass('Ptp.TransparentClock', REFERENCE_CLASS,
            '''Transparent clock configuration''',
            False, 
            [
            _MetaInfoClassMember('domains', REFERENCE_CLASS, 'Domains', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.TransparentClock.Domains',
                [], [],
                '''                Table of domains containing transparent clock
                configuration
                ''',
                'domains',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'transparent-clock',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp.VirtualPort' : {
        'meta_info' : _MetaInfoClass('Ptp.VirtualPort', REFERENCE_CLASS,
            '''PTP virtual port configuration''',
            False, 
            [
            _MetaInfoClassMember('clock-accuracy', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '254')], [],
                '''                Virtual port clock accuracy
                ''',
                'clock_accuracy',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable the PTP Virtual Port
                ''',
                'enable',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('priority2', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Virtual port priority2
                ''',
                'priority2',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('local-priority', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '255')], [],
                '''                Virtual port local priority
                ''',
                'local_priority',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('offset-scaled-log-variance', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '65535')], [],
                '''                Virtual port OSLV
                ''',
                'offset_scaled_log_variance',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('priority1', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Virtual port priority1
                ''',
                'priority1',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('clock-class', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Virtual port clock class
                ''',
                'clock_class',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'virtual-port',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
    'Ptp' : {
        'meta_info' : _MetaInfoClass('Ptp', REFERENCE_CLASS,
            '''PTP global configuration''',
            False, 
            [
            _MetaInfoClassMember('clock', REFERENCE_CLASS, 'Clock', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Clock',
                [], [],
                '''                PTP local clock configuration
                ''',
                'clock',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('profiles', REFERENCE_CLASS, 'Profiles', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Profiles',
                [], [],
                '''                Table for profile configuration
                ''',
                'profiles',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('utc-offset', REFERENCE_CLASS, 'UtcOffset', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.UtcOffset',
                [], [],
                '''                UTC offset configuration
                ''',
                'utc_offset',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('logging', REFERENCE_CLASS, 'Logging', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.Logging',
                [], [],
                '''                PTP logging configuration
                ''',
                'logging',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('uncalibrated-clock-class', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Clock class to be used while acquiring
                phase-lock to a parent clock. Note that
                this is deprecated and should not be
                used.
                ''',
                'uncalibrated_clock_class',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('uncalibrated-clock-class2', REFERENCE_CLASS, 'UncalibratedClockClass2', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.UncalibratedClockClass2',
                [], [],
                '''                Clock class to be used while acquiring
                phase-lock to a parent clock.
                ''',
                'uncalibrated_clock_class2',
                'Cisco-IOS-XR-ptp-cfg', False, is_presence=True),
            _MetaInfoClassMember('transparent-clock', REFERENCE_CLASS, 'TransparentClock', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.TransparentClock',
                [], [],
                '''                Transparent clock configuration
                ''',
                'transparent_clock',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('virtual-port', REFERENCE_CLASS, 'VirtualPort', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg', 'Ptp.VirtualPort',
                [], [],
                '''                PTP virtual port configuration
                ''',
                'virtual_port',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('time-of-day-priority', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '254')], [],
                '''                Time-of-day priority
                ''',
                'time_of_day_priority',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="100"),
            _MetaInfoClassMember('frequency-priority', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '254')], [],
                '''                Frequency priority
                ''',
                'frequency_priority',
                'Cisco-IOS-XR-ptp-cfg', False, default_value="254"),
            _MetaInfoClassMember('startup-clock-class', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Startup clock class value
                ''',
                'startup_clock_class',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable the precision time protocol
                ''',
                'enable',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('min-clock-class', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Clocks with a clock-class higher than the
                minimum clock class will not be considered for
                selection as a parent clock.
                ''',
                'min_clock_class',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('physical-layer-frequency', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable PTP as a source for frequency as only
                physical layer frequency sources are used
                ''',
                'physical_layer_frequency',
                'Cisco-IOS-XR-ptp-cfg', False),
            _MetaInfoClassMember('freerun-clock-class', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '255')], [],
                '''                Freerun clock class value
                ''',
                'freerun_clock_class',
                'Cisco-IOS-XR-ptp-cfg', False),
            ],
            'Cisco-IOS-XR-ptp-cfg',
            'ptp',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ptp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ptp_cfg',
        ),
    },
}
_meta_table['Ptp.Clock.Profile']['meta_info'].parent =_meta_table['Ptp.Clock']['meta_info']
_meta_table['Ptp.Clock.Identity']['meta_info'].parent =_meta_table['Ptp.Clock']['meta_info']
_meta_table['Ptp.Profiles.Profile.Interop.EgressConversion.ClockClassMappings.ClockClassMapping']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Interop.EgressConversion.ClockClassMappings']['meta_info']
_meta_table['Ptp.Profiles.Profile.Interop.EgressConversion.ClockClassMappings']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Interop.EgressConversion']['meta_info']
_meta_table['Ptp.Profiles.Profile.Interop.IngressConversion.ClockClassMappings.ClockClassMapping']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Interop.IngressConversion.ClockClassMappings']['meta_info']
_meta_table['Ptp.Profiles.Profile.Interop.IngressConversion.ClockClassMappings']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Interop.IngressConversion']['meta_info']
_meta_table['Ptp.Profiles.Profile.Interop.EgressConversion']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Interop']['meta_info']
_meta_table['Ptp.Profiles.Profile.Interop.IngressConversion']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Interop']['meta_info']
_meta_table['Ptp.Profiles.Profile.Slaves.Slave.Ethernet']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Slaves.Slave']['meta_info']
_meta_table['Ptp.Profiles.Profile.Slaves.Slave.Ipv4OrIpv6']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Slaves.Slave']['meta_info']
_meta_table['Ptp.Profiles.Profile.Slaves.Slave']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Slaves']['meta_info']
_meta_table['Ptp.Profiles.Profile.Masters.Master.Ethernet.DelayAsymmetry']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Masters.Master.Ethernet']['meta_info']
_meta_table['Ptp.Profiles.Profile.Masters.Master.Ipv4OrIpv6.DelayAsymmetry']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Masters.Master.Ipv4OrIpv6']['meta_info']
_meta_table['Ptp.Profiles.Profile.Masters.Master.Ethernet']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Masters.Master']['meta_info']
_meta_table['Ptp.Profiles.Profile.Masters.Master.Ipv4OrIpv6']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Masters.Master']['meta_info']
_meta_table['Ptp.Profiles.Profile.Masters.Master']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile.Masters']['meta_info']
_meta_table['Ptp.Profiles.Profile.AnnounceInterval']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile']['meta_info']
_meta_table['Ptp.Profiles.Profile.Interop']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile']['meta_info']
_meta_table['Ptp.Profiles.Profile.SourceIpv4Address']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile']['meta_info']
_meta_table['Ptp.Profiles.Profile.Slaves']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile']['meta_info']
_meta_table['Ptp.Profiles.Profile.SyncInterval']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile']['meta_info']
_meta_table['Ptp.Profiles.Profile.Masters']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile']['meta_info']
_meta_table['Ptp.Profiles.Profile.Communication']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile']['meta_info']
_meta_table['Ptp.Profiles.Profile.DelayRequestMinimumInterval']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile']['meta_info']
_meta_table['Ptp.Profiles.Profile.SourceIpv6Address']['meta_info'].parent =_meta_table['Ptp.Profiles.Profile']['meta_info']
_meta_table['Ptp.Profiles.Profile']['meta_info'].parent =_meta_table['Ptp.Profiles']['meta_info']
_meta_table['Ptp.UtcOffset.ScheduledOffsets.ScheduledOffset']['meta_info'].parent =_meta_table['Ptp.UtcOffset.ScheduledOffsets']['meta_info']
_meta_table['Ptp.UtcOffset.LeapSecondFile']['meta_info'].parent =_meta_table['Ptp.UtcOffset']['meta_info']
_meta_table['Ptp.UtcOffset.ScheduledOffsets']['meta_info'].parent =_meta_table['Ptp.UtcOffset']['meta_info']
_meta_table['Ptp.Logging.BestMasterClock']['meta_info'].parent =_meta_table['Ptp.Logging']['meta_info']
_meta_table['Ptp.Logging.Servo']['meta_info'].parent =_meta_table['Ptp.Logging']['meta_info']
_meta_table['Ptp.TransparentClock.Domains.Domain']['meta_info'].parent =_meta_table['Ptp.TransparentClock.Domains']['meta_info']
_meta_table['Ptp.TransparentClock.Domains']['meta_info'].parent =_meta_table['Ptp.TransparentClock']['meta_info']
_meta_table['Ptp.Clock']['meta_info'].parent =_meta_table['Ptp']['meta_info']
_meta_table['Ptp.Profiles']['meta_info'].parent =_meta_table['Ptp']['meta_info']
_meta_table['Ptp.UtcOffset']['meta_info'].parent =_meta_table['Ptp']['meta_info']
_meta_table['Ptp.Logging']['meta_info'].parent =_meta_table['Ptp']['meta_info']
_meta_table['Ptp.UncalibratedClockClass2']['meta_info'].parent =_meta_table['Ptp']['meta_info']
_meta_table['Ptp.TransparentClock']['meta_info'].parent =_meta_table['Ptp']['meta_info']
_meta_table['Ptp.VirtualPort']['meta_info'].parent =_meta_table['Ptp']['meta_info']
