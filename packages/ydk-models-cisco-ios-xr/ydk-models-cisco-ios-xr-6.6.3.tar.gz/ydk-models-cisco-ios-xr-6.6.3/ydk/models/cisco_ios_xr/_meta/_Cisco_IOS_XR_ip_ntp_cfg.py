
'''
This is auto-generated file,
which includes metadata for module Cisco_IOS_XR_ip_ntp_cfg
'''

from ydk._core._dm_meta_info import _MetaInfoClassMember, _MetaInfoClass, _MetaInfoEnum
from ydk._core._dm_meta_info import ATTRIBUTE, REFERENCE_LIST, REFERENCE_LEAFLIST, REFERENCE_BITS, REFERENCE_UNION
from ydk._core._dm_meta_info import REFERENCE_CLASS, REFERENCE_IDENTITY_CLASS, REFERENCE_ENUM_CLASS, ANYXML_CLASS
from ydk._core._importer import _yang_ns

_meta_table = {
    'Ntpdscp' : _MetaInfoEnum('Ntpdscp',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntpdscp',
        '''Ntpdscp''',
        {
            'ntp-precedence':'ntp_precedence',
            'ntpdscp':'ntpdscp',
        }, 'Cisco-IOS-XR-ip-ntp-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg']),
    'NtpPeer' : _MetaInfoEnum('NtpPeer',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'NtpPeer',
        '''Ntp peer''',
        {
            'peer':'peer',
            'server':'server',
        }, 'Cisco-IOS-XR-ip-ntp-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg']),
    'NtpAccessAf' : _MetaInfoEnum('NtpAccessAf',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'NtpAccessAf',
        '''Ntp access af''',
        {
            'ipv4':'ipv4',
            'ipv6':'ipv6',
        }, 'Cisco-IOS-XR-ip-ntp-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg']),
    'NtpAccess' : _MetaInfoEnum('NtpAccess',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'NtpAccess',
        '''Ntp access''',
        {
            'peer':'peer',
            'serve':'serve',
            'serve-only':'serve_only',
            'query-only':'query_only',
        }, 'Cisco-IOS-XR-ip-ntp-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg']),
    'Ntp.AdminTypes.AdminType' : {
        'meta_info' : _MetaInfoClass('Ntp.AdminTypes.AdminType', REFERENCE_LIST,
            '''Configure NTP server admin plane''',
            False, 
            [
            _MetaInfoClassMember('peer-type', REFERENCE_ENUM_CLASS, 'NtpPeer', 'Ntp-peer',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'NtpPeer',
                [], [],
                '''                Peer or Server
                ''',
                'peer_type',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('ntp-version', ATTRIBUTE, 'int', 'Ntp-version',
                None, None,
                [('2', '4')], [],
                '''                NTP version
                ''',
                'ntp_version',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('authentication-key', ATTRIBUTE, 'int', 'Ntp-key-number',
                None, None,
                [('1', '65535')], [],
                '''                Authentication Key
                ''',
                'authentication_key',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('min-poll', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('4', '17')], [],
                '''                Minimum poll interval
                ''',
                'min_poll',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('max-poll', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('4', '17')], [],
                '''                Maxinum poll interval
                ''',
                'max_poll',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('preferred-peer', ATTRIBUTE, 'Empty', 'Ntp-prefer-peer',
                None, None,
                [], [],
                '''                Preferred peer
                ''',
                'preferred_peer',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('burst', ATTRIBUTE, 'Empty', 'Ntp-burst',
                None, None,
                [], [],
                '''                Use burst mode
                ''',
                'burst',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('iburst', ATTRIBUTE, 'Empty', 'Ntpi-burst',
                None, None,
                [], [],
                '''                Use iburst mode
                ''',
                'iburst',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'admin-type',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.AdminTypes' : {
        'meta_info' : _MetaInfoClass('Ntp.AdminTypes', REFERENCE_CLASS,
            '''Configure NTP server admin-plane''',
            False, 
            [
            _MetaInfoClassMember('admin-type', REFERENCE_LIST, 'AdminType', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.AdminTypes.AdminType',
                [], [],
                '''                Configure NTP server admin plane
                ''',
                'admin_type',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'admin-types',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.PeerVrfs.PeerVrf.PeerIpv4s.PeerIpv4.PeerTypeIpv4' : {
        'meta_info' : _MetaInfoClass('Ntp.PeerVrfs.PeerVrf.PeerIpv4s.PeerIpv4.PeerTypeIpv4', REFERENCE_LIST,
            '''Configure an IPv4 NTP server or peer''',
            False, 
            [
            _MetaInfoClassMember('peer-type', REFERENCE_ENUM_CLASS, 'NtpPeer', 'Ntp-peer',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'NtpPeer',
                [], [],
                '''                Peer or Server
                ''',
                'peer_type',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('ntp-version', ATTRIBUTE, 'int', 'Ntp-version',
                None, None,
                [('2', '4')], [],
                '''                NTP version
                ''',
                'ntp_version',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('authentication-key', ATTRIBUTE, 'int', 'Ntp-key-number',
                None, None,
                [('1', '65535')], [],
                '''                Authentication Key
                ''',
                'authentication_key',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('min-poll', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('4', '17')], [],
                '''                Minimum poll interval
                ''',
                'min_poll',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('max-poll', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('4', '17')], [],
                '''                Maxinum poll interval
                ''',
                'max_poll',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('preferred-peer', ATTRIBUTE, 'Empty', 'Ntp-prefer-peer',
                None, None,
                [], [],
                '''                Preferred peer
                ''',
                'preferred_peer',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('source-interface', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Source interface of this peer
                ''',
                'source_interface',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('burst', ATTRIBUTE, 'Empty', 'Ntp-burst',
                None, None,
                [], [],
                '''                Use burst mode
                ''',
                'burst',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('iburst', ATTRIBUTE, 'Empty', 'Ntpi-burst',
                None, None,
                [], [],
                '''                Use iburst mode
                ''',
                'iburst',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'peer-type-ipv4',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.PeerVrfs.PeerVrf.PeerIpv4s.PeerIpv4' : {
        'meta_info' : _MetaInfoClass('Ntp.PeerVrfs.PeerVrf.PeerIpv4s.PeerIpv4', REFERENCE_LIST,
            '''Configure an IPv4 NTP server or peer''',
            False, 
            [
            _MetaInfoClassMember('address-ipv4', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPv4 Address of a peer
                ''',
                'address_ipv4',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('peer-type-ipv4', REFERENCE_LIST, 'PeerTypeIpv4', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.PeerVrfs.PeerVrf.PeerIpv4s.PeerIpv4.PeerTypeIpv4',
                [], [],
                '''                Configure an IPv4 NTP server or peer
                ''',
                'peer_type_ipv4',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'peer-ipv4',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.PeerVrfs.PeerVrf.PeerIpv4s' : {
        'meta_info' : _MetaInfoClass('Ntp.PeerVrfs.PeerVrf.PeerIpv4s', REFERENCE_CLASS,
            '''Configures IPv4 NTP Peers or Servers''',
            False, 
            [
            _MetaInfoClassMember('peer-ipv4', REFERENCE_LIST, 'PeerIpv4', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.PeerVrfs.PeerVrf.PeerIpv4s.PeerIpv4',
                [], [],
                '''                Configure an IPv4 NTP server or peer
                ''',
                'peer_ipv4',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'peer-ipv4s',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.PeerVrfs.PeerVrf.PeerIpv6s.PeerIpv6.PeerTypeIpv6' : {
        'meta_info' : _MetaInfoClass('Ntp.PeerVrfs.PeerVrf.PeerIpv6s.PeerIpv6.PeerTypeIpv6', REFERENCE_LIST,
            '''Configure a NTP server or peer''',
            False, 
            [
            _MetaInfoClassMember('peer-type', REFERENCE_ENUM_CLASS, 'NtpPeer', 'Ntp-peer',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'NtpPeer',
                [], [],
                '''                Peer or Server
                ''',
                'peer_type',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('ntp-version', ATTRIBUTE, 'int', 'Ntp-version',
                None, None,
                [('2', '4')], [],
                '''                NTP version
                ''',
                'ntp_version',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('authentication-key', ATTRIBUTE, 'int', 'Ntp-key-number',
                None, None,
                [('1', '65535')], [],
                '''                Authentication Key
                ''',
                'authentication_key',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('min-poll', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('4', '17')], [],
                '''                Minimum poll interval
                ''',
                'min_poll',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('max-poll', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('4', '17')], [],
                '''                Maxinum poll interval
                ''',
                'max_poll',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('preferred-peer', ATTRIBUTE, 'Empty', 'Ntp-prefer-peer',
                None, None,
                [], [],
                '''                Preferred peer
                ''',
                'preferred_peer',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('source-interface', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Source interface of this peer
                ''',
                'source_interface',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('burst', ATTRIBUTE, 'Empty', 'Ntp-burst',
                None, None,
                [], [],
                '''                Use burst mode
                ''',
                'burst',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('iburst', ATTRIBUTE, 'Empty', 'Ntpi-burst',
                None, None,
                [], [],
                '''                Use iburst mode
                ''',
                'iburst',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('address-ipv6', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                None, None,
                [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                '''                IPv6 address
                ''',
                'address_ipv6',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'peer-type-ipv6',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.PeerVrfs.PeerVrf.PeerIpv6s.PeerIpv6' : {
        'meta_info' : _MetaInfoClass('Ntp.PeerVrfs.PeerVrf.PeerIpv6s.PeerIpv6', REFERENCE_LIST,
            '''Configure a NTP server or peer''',
            False, 
            [
            _MetaInfoClassMember('address-ipv6', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                None, None,
                [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                '''                Address of a peer
                ''',
                'address_ipv6',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('peer-type-ipv6', REFERENCE_LIST, 'PeerTypeIpv6', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.PeerVrfs.PeerVrf.PeerIpv6s.PeerIpv6.PeerTypeIpv6',
                [], [],
                '''                Configure a NTP server or peer
                ''',
                'peer_type_ipv6',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'peer-ipv6',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.PeerVrfs.PeerVrf.PeerIpv6s' : {
        'meta_info' : _MetaInfoClass('Ntp.PeerVrfs.PeerVrf.PeerIpv6s', REFERENCE_CLASS,
            '''Configuration NTP Peers or Servers of IPV6''',
            False, 
            [
            _MetaInfoClassMember('peer-ipv6', REFERENCE_LIST, 'PeerIpv6', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.PeerVrfs.PeerVrf.PeerIpv6s.PeerIpv6',
                [], [],
                '''                Configure a NTP server or peer
                ''',
                'peer_ipv6',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'peer-ipv6s',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.PeerVrfs.PeerVrf' : {
        'meta_info' : _MetaInfoClass('Ntp.PeerVrfs.PeerVrf', REFERENCE_LIST,
            '''Configures NTP Peers or Servers for a single
VRF. The 'default' must also be specified for
default VRF''',
            False, 
            [
            _MetaInfoClassMember('vrf-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [], [b'[\\w\\-\\.:,_@#%$\\+=\\|;]+'],
                '''                VRF name
                ''',
                'vrf_name',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('peer-ipv4s', REFERENCE_CLASS, 'PeerIpv4s', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.PeerVrfs.PeerVrf.PeerIpv4s',
                [], [],
                '''                Configures IPv4 NTP Peers or Servers
                ''',
                'peer_ipv4s',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('peer-ipv6s', REFERENCE_CLASS, 'PeerIpv6s', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.PeerVrfs.PeerVrf.PeerIpv6s',
                [], [],
                '''                Configuration NTP Peers or Servers of IPV6
                ''',
                'peer_ipv6s',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'peer-vrf',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.PeerVrfs' : {
        'meta_info' : _MetaInfoClass('Ntp.PeerVrfs', REFERENCE_CLASS,
            '''Configures NTP Peers or Servers''',
            False, 
            [
            _MetaInfoClassMember('peer-vrf', REFERENCE_LIST, 'PeerVrf', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.PeerVrfs.PeerVrf',
                [], [],
                '''                Configures NTP Peers or Servers for a single
                VRF. The 'default' must also be specified for
                default VRF
                ''',
                'peer_vrf',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'peer-vrfs',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.DscpIpv4' : {
        'meta_info' : _MetaInfoClass('Ntp.DscpIpv4', REFERENCE_CLASS,
            ''' Set IP DSCP value for outgoing NTP IPV4 packets''',
            False, 
            [
            _MetaInfoClassMember('mode', REFERENCE_ENUM_CLASS, 'Ntpdscp', 'Ntpdscp',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntpdscp',
                [], [],
                '''                NTPPRECEDENCE (0) to specify Precedence value
                NTPDSCP (1) to specify DSCP value
                ''',
                'mode',
                'Cisco-IOS-XR-ip-ntp-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('dscp-or-precedence-value', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '63')], [],
                '''                If Mode is set to 'NTPPRECEDENCE(0)' specify
                Precedence value , if Mode is set to
                'NTPDSCP(1)' specify DSCP
                ''',
                'dscp_or_precedence_value',
                'Cisco-IOS-XR-ip-ntp-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'dscp-ipv4',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
            is_presence=True,
        ),
    },
    'Ntp.DscpIpv6' : {
        'meta_info' : _MetaInfoClass('Ntp.DscpIpv6', REFERENCE_CLASS,
            ''' Set IP DSCP value for outgoing NTP IPV6 packets''',
            False, 
            [
            _MetaInfoClassMember('mode', REFERENCE_ENUM_CLASS, 'Ntpdscp', 'Ntpdscp',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntpdscp',
                [], [],
                '''                NTPPRECEDENCE(0) to specify Precedence value
                NTPDSCP(1) to specify DSCP value
                ''',
                'mode',
                'Cisco-IOS-XR-ip-ntp-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('dscp-or-precedence-value', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '63')], [],
                '''                If Mode is set to 'NTPPRECEDENCE(0)' specify
                Precedence value , if Mode is set to
                'NTPDSCP(1)' specify DSCP
                ''',
                'dscp_or_precedence_value',
                'Cisco-IOS-XR-ip-ntp-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'dscp-ipv6',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
            is_presence=True,
        ),
    },
    'Ntp.Sources.Source' : {
        'meta_info' : _MetaInfoClass('Ntp.Sources.Source', REFERENCE_LIST,
            '''Configure  NTP source interface''',
            False, 
            [
            _MetaInfoClassMember('vrf-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [], [b'[\\w\\-\\.:,_@#%$\\+=\\|;]+'],
                '''                VRF name
                ''',
                'vrf_name',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('source-interface', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Source Interface for NTP
                ''',
                'source_interface',
                'Cisco-IOS-XR-ip-ntp-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'source',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.Sources' : {
        'meta_info' : _MetaInfoClass('Ntp.Sources', REFERENCE_CLASS,
            '''Configure  NTP source interface''',
            False, 
            [
            _MetaInfoClassMember('source', REFERENCE_LIST, 'Source', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.Sources.Source',
                [], [],
                '''                Configure  NTP source interface
                ''',
                'source',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'sources',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.Drift.File' : {
        'meta_info' : _MetaInfoClass('Ntp.Drift.File', REFERENCE_CLASS,
            '''File containing drift value''',
            False, 
            [
            _MetaInfoClassMember('location', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                disk0 or apphost or config or ftp or harddisk
                or rootfs or tftp. Defaults to PWD if none
                specified
                ''',
                'location',
                'Cisco-IOS-XR-ip-ntp-cfg', False, default_value="'PWD'"),
            _MetaInfoClassMember('filename', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                File containing drift value
                ''',
                'filename',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'file',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.Drift' : {
        'meta_info' : _MetaInfoClass('Ntp.Drift', REFERENCE_CLASS,
            '''NTP drift''',
            False, 
            [
            _MetaInfoClassMember('file', REFERENCE_CLASS, 'File', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.Drift.File',
                [], [],
                '''                File containing drift value
                ''',
                'file',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('aging-time', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '65535')], [],
                '''                Drift Aging Time
                ''',
                'aging_time',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'drift',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.Authentication.Keys.Key' : {
        'meta_info' : _MetaInfoClass('Ntp.Authentication.Keys.Key', REFERENCE_LIST,
            '''Authentication key for trusted time sources''',
            False, 
            [
            _MetaInfoClassMember('key-number', ATTRIBUTE, 'int', 'Ntp-key-number',
                None, None,
                [('1', '65535')], [],
                '''                Authentication Key number
                ''',
                'key_number',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('authentication-key', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Authentication key - maximum 32 characters
                ''',
                'authentication_key',
                'Cisco-IOS-XR-ip-ntp-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'key',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.Authentication.Keys' : {
        'meta_info' : _MetaInfoClass('Ntp.Authentication.Keys', REFERENCE_CLASS,
            '''Authentication Key Table''',
            False, 
            [
            _MetaInfoClassMember('key', REFERENCE_LIST, 'Key', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.Authentication.Keys.Key',
                [], [],
                '''                Authentication key for trusted time sources
                ''',
                'key',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'keys',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.Authentication.TrustedKeys.TrustedKey' : {
        'meta_info' : _MetaInfoClass('Ntp.Authentication.TrustedKeys.TrustedKey', REFERENCE_LIST,
            '''Configure NTP trusted key''',
            False, 
            [
            _MetaInfoClassMember('key-number', ATTRIBUTE, 'int', 'Ntp-key-number',
                None, None,
                [('1', '65535')], [],
                '''                Key number
                ''',
                'key_number',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'trusted-key',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.Authentication.TrustedKeys' : {
        'meta_info' : _MetaInfoClass('Ntp.Authentication.TrustedKeys', REFERENCE_CLASS,
            '''Key numbers for trusted time sources''',
            False, 
            [
            _MetaInfoClassMember('trusted-key', REFERENCE_LIST, 'TrustedKey', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.Authentication.TrustedKeys.TrustedKey',
                [], [],
                '''                Configure NTP trusted key
                ''',
                'trusted_key',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'trusted-keys',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.Authentication' : {
        'meta_info' : _MetaInfoClass('Ntp.Authentication', REFERENCE_CLASS,
            '''Configure NTP Authentication keys''',
            False, 
            [
            _MetaInfoClassMember('keys', REFERENCE_CLASS, 'Keys', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.Authentication.Keys',
                [], [],
                '''                Authentication Key Table
                ''',
                'keys',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('trusted-keys', REFERENCE_CLASS, 'TrustedKeys', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.Authentication.TrustedKeys',
                [], [],
                '''                Key numbers for trusted time sources
                ''',
                'trusted_keys',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable NTP authentication keys
                ''',
                'enable',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'authentication',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.Passive' : {
        'meta_info' : _MetaInfoClass('Ntp.Passive', REFERENCE_CLASS,
            '''Configure NTP passive associations''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable NTP Passive associations
                ''',
                'enable',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'passive',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastClients.MulticastClient' : {
        'meta_info' : _MetaInfoClass('Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastClients.MulticastClient', REFERENCE_LIST,
            '''Listen to NTP multicasts''',
            False, 
            [
            _MetaInfoClassMember('ip-address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                IP address of a multicast group
                ''',
                'ip_address',
                'Cisco-IOS-XR-ip-ntp-cfg', True, [
                    _MetaInfoClassMember('ip-address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        IP address of a multicast group
                        ''',
                        'ip_address',
                        'Cisco-IOS-XR-ip-ntp-cfg', True),
                    _MetaInfoClassMember('ip-address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        IP address of a multicast group
                        ''',
                        'ip_address',
                        'Cisco-IOS-XR-ip-ntp-cfg', True),
                ]),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'multicast-client',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastClients' : {
        'meta_info' : _MetaInfoClass('Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastClients', REFERENCE_CLASS,
            '''Configures multicast client peers''',
            False, 
            [
            _MetaInfoClassMember('multicast-client', REFERENCE_LIST, 'MulticastClient', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastClients.MulticastClient',
                [], [],
                '''                Listen to NTP multicasts
                ''',
                'multicast_client',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'multicast-clients',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastServers.MulticastServer' : {
        'meta_info' : _MetaInfoClass('Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastServers.MulticastServer', REFERENCE_LIST,
            '''Configure NTP multicast group server peer''',
            False, 
            [
            _MetaInfoClassMember('ip-address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                IP address of a multicast group
                ''',
                'ip_address',
                'Cisco-IOS-XR-ip-ntp-cfg', True, [
                    _MetaInfoClassMember('ip-address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        IP address of a multicast group
                        ''',
                        'ip_address',
                        'Cisco-IOS-XR-ip-ntp-cfg', True),
                    _MetaInfoClassMember('ip-address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        IP address of a multicast group
                        ''',
                        'ip_address',
                        'Cisco-IOS-XR-ip-ntp-cfg', True),
                ]),
            _MetaInfoClassMember('authentication-key', ATTRIBUTE, 'int', 'Ntp-key-number',
                None, None,
                [('1', '65535')], [],
                '''                Authentication key
                ''',
                'authentication_key',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('version', ATTRIBUTE, 'int', 'Ntp-version',
                None, None,
                [('2', '4')], [],
                '''                NTP version
                ''',
                'version',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('ttl', ATTRIBUTE, 'int', 'Ntpttl',
                None, None,
                [('1', '255')], [],
                '''                TTL
                ''',
                'ttl',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'multicast-server',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastServers' : {
        'meta_info' : _MetaInfoClass('Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastServers', REFERENCE_CLASS,
            '''Configures multicast server peers''',
            False, 
            [
            _MetaInfoClassMember('multicast-server', REFERENCE_LIST, 'MulticastServer', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastServers.MulticastServer',
                [], [],
                '''                Configure NTP multicast group server peer
                ''',
                'multicast_server',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'multicast-servers',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast' : {
        'meta_info' : _MetaInfoClass('Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast', REFERENCE_CLASS,
            '''Configure NTP multicast service''',
            False, 
            [
            _MetaInfoClassMember('multicast-clients', REFERENCE_CLASS, 'MulticastClients', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastClients',
                [], [],
                '''                Configures multicast client peers
                ''',
                'multicast_clients',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('multicast-servers', REFERENCE_CLASS, 'MulticastServers', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastServers',
                [], [],
                '''                Configures multicast server peers
                ''',
                'multicast_servers',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'interface-multicast',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast.BroadcastServers.BroadcastServer' : {
        'meta_info' : _MetaInfoClass('Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast.BroadcastServers.BroadcastServer', REFERENCE_LIST,
            '''Configure NTP broadcast server''',
            False, 
            [
            _MetaInfoClassMember('broadcast-type', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [], [b'[\\w\\-\\.:,_@#%$\\+=\\|;]+'],
                '''                Broadcast Type
                ''',
                'broadcast_type',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Destination broadcast IPv4 address
                ''',
                'address',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('authentication-key', ATTRIBUTE, 'int', 'Ntp-key-number',
                None, None,
                [('1', '65535')], [],
                '''                Authentication key
                ''',
                'authentication_key',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('ntp-version', ATTRIBUTE, 'int', 'Ntp-version',
                None, None,
                [('2', '4')], [],
                '''                NTP version
                ''',
                'ntp_version',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'broadcast-server',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast.BroadcastServers' : {
        'meta_info' : _MetaInfoClass('Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast.BroadcastServers', REFERENCE_CLASS,
            '''Configure NTP broadcast''',
            False, 
            [
            _MetaInfoClassMember('broadcast-server', REFERENCE_LIST, 'BroadcastServer', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast.BroadcastServers.BroadcastServer',
                [], [],
                '''                Configure NTP broadcast server
                ''',
                'broadcast_server',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'broadcast-servers',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast' : {
        'meta_info' : _MetaInfoClass('Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast', REFERENCE_CLASS,
            '''Configure NTP broadcast service''',
            False, 
            [
            _MetaInfoClassMember('broadcast-servers', REFERENCE_CLASS, 'BroadcastServers', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast.BroadcastServers',
                [], [],
                '''                Configure NTP broadcast
                ''',
                'broadcast_servers',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('broadcast-client', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Listen to NTP broadcasts
                ''',
                'broadcast_client',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'interface-broadcast',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.InterfaceTables.InterfaceTable.Interface' : {
        'meta_info' : _MetaInfoClass('Ntp.InterfaceTables.InterfaceTable.Interface', REFERENCE_LIST,
            '''Name of the interface''',
            False, 
            [
            _MetaInfoClassMember('interface', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                interface
                ''',
                'interface',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('interface-multicast', REFERENCE_CLASS, 'InterfaceMulticast', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast',
                [], [],
                '''                Configure NTP multicast service
                ''',
                'interface_multicast',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('interface-broadcast', REFERENCE_CLASS, 'InterfaceBroadcast', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast',
                [], [],
                '''                Configure NTP broadcast service
                ''',
                'interface_broadcast',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable NTP
                ''',
                'disable',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'interface',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.InterfaceTables.InterfaceTable' : {
        'meta_info' : _MetaInfoClass('Ntp.InterfaceTables.InterfaceTable', REFERENCE_LIST,
            '''NTP per interface configuration''',
            False, 
            [
            _MetaInfoClassMember('vrf-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [], [b'[\\w\\-\\.:,_@#%$\\+=\\|;]+'],
                '''                VRF name
                ''',
                'vrf_name',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('interface', REFERENCE_LIST, 'Interface', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.InterfaceTables.InterfaceTable.Interface',
                [], [],
                '''                Name of the interface
                ''',
                'interface',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'interface-table',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.InterfaceTables' : {
        'meta_info' : _MetaInfoClass('Ntp.InterfaceTables', REFERENCE_CLASS,
            '''NTP per interface configuration''',
            False, 
            [
            _MetaInfoClassMember('interface-table', REFERENCE_LIST, 'InterfaceTable', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.InterfaceTables.InterfaceTable',
                [], [],
                '''                NTP per interface configuration
                ''',
                'interface_table',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'interface-tables',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.AccessGroupTables.AccessGroupTable.AccessGroupAfTable.AccessGroup' : {
        'meta_info' : _MetaInfoClass('Ntp.AccessGroupTables.AccessGroupTable.AccessGroupAfTable.AccessGroup', REFERENCE_LIST,
            '''Configure NTP access group''',
            False, 
            [
            _MetaInfoClassMember('access-group-type', REFERENCE_ENUM_CLASS, 'NtpAccess', 'Ntp-access',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'NtpAccess',
                [], [],
                '''                Access group type
                ''',
                'access_group_type',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('access-list-name', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Access list name - maximum 32 characters
                ''',
                'access_list_name',
                'Cisco-IOS-XR-ip-ntp-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'access-group',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.AccessGroupTables.AccessGroupTable.AccessGroupAfTable' : {
        'meta_info' : _MetaInfoClass('Ntp.AccessGroupTables.AccessGroupTable.AccessGroupAfTable', REFERENCE_LIST,
            '''Configure NTP access address family''',
            False, 
            [
            _MetaInfoClassMember('af', REFERENCE_ENUM_CLASS, 'NtpAccessAf', 'Ntp-access-af',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'NtpAccessAf',
                [], [],
                '''                Address family
                ''',
                'af',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('access-group', REFERENCE_LIST, 'AccessGroup', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.AccessGroupTables.AccessGroupTable.AccessGroupAfTable.AccessGroup',
                [], [],
                '''                Configure NTP access group
                ''',
                'access_group',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'access-group-af-table',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.AccessGroupTables.AccessGroupTable' : {
        'meta_info' : _MetaInfoClass('Ntp.AccessGroupTables.AccessGroupTable', REFERENCE_LIST,
            '''Control NTP access''',
            False, 
            [
            _MetaInfoClassMember('vrf-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [], [b'[\\w\\-\\.:,_@#%$\\+=\\|;]+'],
                '''                VRF name
                ''',
                'vrf_name',
                'Cisco-IOS-XR-ip-ntp-cfg', True),
            _MetaInfoClassMember('access-group-af-table', REFERENCE_LIST, 'AccessGroupAfTable', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.AccessGroupTables.AccessGroupTable.AccessGroupAfTable',
                [], [],
                '''                Configure NTP access address family
                ''',
                'access_group_af_table',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'access-group-table',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp.AccessGroupTables' : {
        'meta_info' : _MetaInfoClass('Ntp.AccessGroupTables', REFERENCE_CLASS,
            '''Control NTP access''',
            False, 
            [
            _MetaInfoClassMember('access-group-table', REFERENCE_LIST, 'AccessGroupTable', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.AccessGroupTables.AccessGroupTable',
                [], [],
                '''                Control NTP access
                ''',
                'access_group_table',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'access-group-tables',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
    'Ntp' : {
        'meta_info' : _MetaInfoClass('Ntp', REFERENCE_CLASS,
            '''NTP configuration''',
            False, 
            [
            _MetaInfoClassMember('admin-types', REFERENCE_CLASS, 'AdminTypes', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.AdminTypes',
                [], [],
                '''                Configure NTP server admin-plane
                ''',
                'admin_types',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('peer-vrfs', REFERENCE_CLASS, 'PeerVrfs', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.PeerVrfs',
                [], [],
                '''                Configures NTP Peers or Servers
                ''',
                'peer_vrfs',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('dscp-ipv4', REFERENCE_CLASS, 'DscpIpv4', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.DscpIpv4',
                [], [],
                '''                 Set IP DSCP value for outgoing NTP IPV4 packets
                ''',
                'dscp_ipv4',
                'Cisco-IOS-XR-ip-ntp-cfg', False, is_presence=True),
            _MetaInfoClassMember('dscp-ipv6', REFERENCE_CLASS, 'DscpIpv6', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.DscpIpv6',
                [], [],
                '''                 Set IP DSCP value for outgoing NTP IPV6 packets
                ''',
                'dscp_ipv6',
                'Cisco-IOS-XR-ip-ntp-cfg', False, is_presence=True),
            _MetaInfoClassMember('sources', REFERENCE_CLASS, 'Sources', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.Sources',
                [], [],
                '''                Configure  NTP source interface
                ''',
                'sources',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('drift', REFERENCE_CLASS, 'Drift', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.Drift',
                [], [],
                '''                NTP drift
                ''',
                'drift',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('authentication', REFERENCE_CLASS, 'Authentication', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.Authentication',
                [], [],
                '''                Configure NTP Authentication keys
                ''',
                'authentication',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('passive', REFERENCE_CLASS, 'Passive', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.Passive',
                [], [],
                '''                Configure NTP passive associations
                ''',
                'passive',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('interface-tables', REFERENCE_CLASS, 'InterfaceTables', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.InterfaceTables',
                [], [],
                '''                NTP per interface configuration
                ''',
                'interface_tables',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('access-group-tables', REFERENCE_CLASS, 'AccessGroupTables', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg', 'Ntp.AccessGroupTables',
                [], [],
                '''                Control NTP access
                ''',
                'access_group_tables',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('max-associations', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Set maximum number of associations
                ''',
                'max_associations',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('master', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '20')], [],
                '''                Act as NTP master clock
                ''',
                'master',
                'Cisco-IOS-XR-ip-ntp-cfg', False, default_value="8"),
            _MetaInfoClassMember('broadcast-delay', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '999999')], [],
                '''                Estimated round-trip delay
                ''',
                'broadcast_delay',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('log-internal-sync', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                To enable logging internal sync conflicts
                ''',
                'log_internal_sync',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            _MetaInfoClassMember('update-calendar', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                To enable calendar update with NTP time
                ''',
                'update_calendar',
                'Cisco-IOS-XR-ip-ntp-cfg', False),
            ],
            'Cisco-IOS-XR-ip-ntp-cfg',
            'ntp',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ip-ntp-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ip_ntp_cfg',
        ),
    },
}
_meta_table['Ntp.AdminTypes.AdminType']['meta_info'].parent =_meta_table['Ntp.AdminTypes']['meta_info']
_meta_table['Ntp.PeerVrfs.PeerVrf.PeerIpv4s.PeerIpv4.PeerTypeIpv4']['meta_info'].parent =_meta_table['Ntp.PeerVrfs.PeerVrf.PeerIpv4s.PeerIpv4']['meta_info']
_meta_table['Ntp.PeerVrfs.PeerVrf.PeerIpv4s.PeerIpv4']['meta_info'].parent =_meta_table['Ntp.PeerVrfs.PeerVrf.PeerIpv4s']['meta_info']
_meta_table['Ntp.PeerVrfs.PeerVrf.PeerIpv6s.PeerIpv6.PeerTypeIpv6']['meta_info'].parent =_meta_table['Ntp.PeerVrfs.PeerVrf.PeerIpv6s.PeerIpv6']['meta_info']
_meta_table['Ntp.PeerVrfs.PeerVrf.PeerIpv6s.PeerIpv6']['meta_info'].parent =_meta_table['Ntp.PeerVrfs.PeerVrf.PeerIpv6s']['meta_info']
_meta_table['Ntp.PeerVrfs.PeerVrf.PeerIpv4s']['meta_info'].parent =_meta_table['Ntp.PeerVrfs.PeerVrf']['meta_info']
_meta_table['Ntp.PeerVrfs.PeerVrf.PeerIpv6s']['meta_info'].parent =_meta_table['Ntp.PeerVrfs.PeerVrf']['meta_info']
_meta_table['Ntp.PeerVrfs.PeerVrf']['meta_info'].parent =_meta_table['Ntp.PeerVrfs']['meta_info']
_meta_table['Ntp.Sources.Source']['meta_info'].parent =_meta_table['Ntp.Sources']['meta_info']
_meta_table['Ntp.Drift.File']['meta_info'].parent =_meta_table['Ntp.Drift']['meta_info']
_meta_table['Ntp.Authentication.Keys.Key']['meta_info'].parent =_meta_table['Ntp.Authentication.Keys']['meta_info']
_meta_table['Ntp.Authentication.TrustedKeys.TrustedKey']['meta_info'].parent =_meta_table['Ntp.Authentication.TrustedKeys']['meta_info']
_meta_table['Ntp.Authentication.Keys']['meta_info'].parent =_meta_table['Ntp.Authentication']['meta_info']
_meta_table['Ntp.Authentication.TrustedKeys']['meta_info'].parent =_meta_table['Ntp.Authentication']['meta_info']
_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastClients.MulticastClient']['meta_info'].parent =_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastClients']['meta_info']
_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastServers.MulticastServer']['meta_info'].parent =_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastServers']['meta_info']
_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastClients']['meta_info'].parent =_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast']['meta_info']
_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast.MulticastServers']['meta_info'].parent =_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast']['meta_info']
_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast.BroadcastServers.BroadcastServer']['meta_info'].parent =_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast.BroadcastServers']['meta_info']
_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast.BroadcastServers']['meta_info'].parent =_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast']['meta_info']
_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceMulticast']['meta_info'].parent =_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface']['meta_info']
_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface.InterfaceBroadcast']['meta_info'].parent =_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface']['meta_info']
_meta_table['Ntp.InterfaceTables.InterfaceTable.Interface']['meta_info'].parent =_meta_table['Ntp.InterfaceTables.InterfaceTable']['meta_info']
_meta_table['Ntp.InterfaceTables.InterfaceTable']['meta_info'].parent =_meta_table['Ntp.InterfaceTables']['meta_info']
_meta_table['Ntp.AccessGroupTables.AccessGroupTable.AccessGroupAfTable.AccessGroup']['meta_info'].parent =_meta_table['Ntp.AccessGroupTables.AccessGroupTable.AccessGroupAfTable']['meta_info']
_meta_table['Ntp.AccessGroupTables.AccessGroupTable.AccessGroupAfTable']['meta_info'].parent =_meta_table['Ntp.AccessGroupTables.AccessGroupTable']['meta_info']
_meta_table['Ntp.AccessGroupTables.AccessGroupTable']['meta_info'].parent =_meta_table['Ntp.AccessGroupTables']['meta_info']
_meta_table['Ntp.AdminTypes']['meta_info'].parent =_meta_table['Ntp']['meta_info']
_meta_table['Ntp.PeerVrfs']['meta_info'].parent =_meta_table['Ntp']['meta_info']
_meta_table['Ntp.DscpIpv4']['meta_info'].parent =_meta_table['Ntp']['meta_info']
_meta_table['Ntp.DscpIpv6']['meta_info'].parent =_meta_table['Ntp']['meta_info']
_meta_table['Ntp.Sources']['meta_info'].parent =_meta_table['Ntp']['meta_info']
_meta_table['Ntp.Drift']['meta_info'].parent =_meta_table['Ntp']['meta_info']
_meta_table['Ntp.Authentication']['meta_info'].parent =_meta_table['Ntp']['meta_info']
_meta_table['Ntp.Passive']['meta_info'].parent =_meta_table['Ntp']['meta_info']
_meta_table['Ntp.InterfaceTables']['meta_info'].parent =_meta_table['Ntp']['meta_info']
_meta_table['Ntp.AccessGroupTables']['meta_info'].parent =_meta_table['Ntp']['meta_info']
