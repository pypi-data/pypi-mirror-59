
'''
This is auto-generated file,
which includes metadata for module Cisco_IOS_XR_ipv4_mfwd_cfg
'''

from ydk._core._dm_meta_info import _MetaInfoClassMember, _MetaInfoClass, _MetaInfoEnum
from ydk._core._dm_meta_info import ATTRIBUTE, REFERENCE_LIST, REFERENCE_LEAFLIST, REFERENCE_BITS, REFERENCE_UNION
from ydk._core._dm_meta_info import REFERENCE_CLASS, REFERENCE_IDENTITY_CLASS, REFERENCE_ENUM_CLASS, ANYXML_CLASS
from ydk._core._importer import _yang_ns

_meta_table = {
    'AccountingMode' : _MetaInfoEnum('AccountingMode',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'AccountingMode',
        '''Accounting mode''',
        {
            'enable':'enable',
            'forward-only-enable':'forward_only_enable',
        }, 'Cisco-IOS-XR-ipv4-mfwd-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg']),
    'Mfwd.DefaultContext.Ipv6.StaticRpfRules.StaticRpfRule' : {
        'meta_info' : _MetaInfoClass('Mfwd.DefaultContext.Ipv6.StaticRpfRules.StaticRpfRule', REFERENCE_LIST,
            '''RPF prefix address and mask''',
            False, 
            [
            _MetaInfoClassMember('address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                IP address of the RPF prefix
                ''',
                'address',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', True, [
                    _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        IP address of the RPF prefix
                        ''',
                        'address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
                    _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        IP address of the RPF prefix
                        ''',
                        'address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
                ]),
            _MetaInfoClassMember('prefix-mask', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '128')], [],
                '''                Prefix mask of the RPF Prefix
                ''',
                'prefix_mask',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
            _MetaInfoClassMember('neighbor-address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                Neighbor address of the RPF Prefix
                ''',
                'neighbor_address',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False, [
                    _MetaInfoClassMember('neighbor-address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        Neighbor address of the RPF Prefix
                        ''',
                        'neighbor_address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', False, is_mandatory=True),
                    _MetaInfoClassMember('neighbor-address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        Neighbor address of the RPF Prefix
                        ''',
                        'neighbor_address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', False, is_mandatory=True),
                ], is_mandatory=True),
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                The name of the RPF interface
                ''',
                'interface_name',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'static-rpf-rule',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.DefaultContext.Ipv6.StaticRpfRules' : {
        'meta_info' : _MetaInfoClass('Mfwd.DefaultContext.Ipv6.StaticRpfRules', REFERENCE_CLASS,
            '''Configure a static RPF rule for a given prefix''',
            False, 
            [
            _MetaInfoClassMember('static-rpf-rule', REFERENCE_LIST, 'StaticRpfRule', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.DefaultContext.Ipv6.StaticRpfRules.StaticRpfRule',
                [], [],
                '''                RPF prefix address and mask
                ''',
                'static_rpf_rule',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'static-rpf-rules',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.DefaultContext.Ipv6.Interfaces.Interface' : {
        'meta_info' : _MetaInfoClass('Mfwd.DefaultContext.Ipv6.Interfaces.Interface', REFERENCE_LIST,
            '''The name of the interface''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Interface name
                ''',
                'interface_name',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
            _MetaInfoClassMember('ttl-threshold', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '255')], [],
                '''                TTL threshold for multicast packets
                ''',
                'ttl_threshold',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('enable-on-interface', ATTRIBUTE, 'bool', 'boolean',
                None, None,
                [], [],
                '''                Enable or disable IP multicast on the
                interface
                ''',
                'enable_on_interface',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('boundary', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 64)], [],
                '''                Boundary for administratively scoped multicast
                addresses
                ''',
                'boundary',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'interface',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.DefaultContext.Ipv6.Interfaces' : {
        'meta_info' : _MetaInfoClass('Mfwd.DefaultContext.Ipv6.Interfaces', REFERENCE_CLASS,
            '''Interface-level Configuration''',
            False, 
            [
            _MetaInfoClassMember('interface', REFERENCE_LIST, 'Interface', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.DefaultContext.Ipv6.Interfaces.Interface',
                [], [],
                '''                The name of the interface
                ''',
                'interface',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'interfaces',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.DefaultContext.Ipv6' : {
        'meta_info' : _MetaInfoClass('Mfwd.DefaultContext.Ipv6', REFERENCE_CLASS,
            '''IPV6 commands in the default context''',
            False, 
            [
            _MetaInfoClassMember('enable-on-all-interfaces', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Configure all interfaces for multicast routing
                and forwarding
                ''',
                'enable_on_all_interfaces',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('maximum-checking-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable state limit maximum checking
                ''',
                'maximum_checking_disable',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('rate-per-route', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable per (S,G) rate calculation
                ''',
                'rate_per_route',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('interface-inheritance-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable interface inheritance configuration
                ''',
                'interface_inheritance_disable',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('static-rpf-rules', REFERENCE_CLASS, 'StaticRpfRules', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.DefaultContext.Ipv6.StaticRpfRules',
                [], [],
                '''                Configure a static RPF rule for a given prefix
                ''',
                'static_rpf_rules',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('mofrr-lockout-timer-config', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '3600')], [],
                '''                Mofrr Lockout timer value
                ''',
                'mofrr_lockout_timer_config',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('forwarding-latency', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('5', '500')], [],
                '''                Knob to delay traffic being forwarded on a route
                ''',
                'forwarding_latency',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('mofrr-loss-detection-timer-config', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '3600')], [],
                '''                Mofrr Loss Detection timer value
                ''',
                'mofrr_loss_detection_timer_config',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('interfaces', REFERENCE_CLASS, 'Interfaces', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.DefaultContext.Ipv6.Interfaces',
                [], [],
                '''                Interface-level Configuration
                ''',
                'interfaces',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('multicast-forwarding', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IP multicast routing and forwarding
                ''',
                'multicast_forwarding',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('log-traps', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable logging trap event
                ''',
                'log_traps',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('accounting', REFERENCE_ENUM_CLASS, 'AccountingMode', 'Accounting-mode',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'AccountingMode',
                [], [],
                '''                Per-prefix accounting mode
                ''',
                'accounting',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'ipv6',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.DefaultContext.Ipv4.StaticRpfRules.StaticRpfRule' : {
        'meta_info' : _MetaInfoClass('Mfwd.DefaultContext.Ipv4.StaticRpfRules.StaticRpfRule', REFERENCE_LIST,
            '''RPF prefix address and mask''',
            False, 
            [
            _MetaInfoClassMember('address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                IP address of the RPF prefix
                ''',
                'address',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', True, [
                    _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        IP address of the RPF prefix
                        ''',
                        'address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
                    _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        IP address of the RPF prefix
                        ''',
                        'address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
                ]),
            _MetaInfoClassMember('prefix-mask', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '128')], [],
                '''                Prefix mask of the RPF Prefix
                ''',
                'prefix_mask',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
            _MetaInfoClassMember('neighbor-address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                Neighbor address of the RPF Prefix
                ''',
                'neighbor_address',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False, [
                    _MetaInfoClassMember('neighbor-address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        Neighbor address of the RPF Prefix
                        ''',
                        'neighbor_address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', False, is_mandatory=True),
                    _MetaInfoClassMember('neighbor-address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        Neighbor address of the RPF Prefix
                        ''',
                        'neighbor_address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', False, is_mandatory=True),
                ], is_mandatory=True),
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                The name of the RPF interface
                ''',
                'interface_name',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'static-rpf-rule',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.DefaultContext.Ipv4.StaticRpfRules' : {
        'meta_info' : _MetaInfoClass('Mfwd.DefaultContext.Ipv4.StaticRpfRules', REFERENCE_CLASS,
            '''Configure a static RPF rule for a given prefix''',
            False, 
            [
            _MetaInfoClassMember('static-rpf-rule', REFERENCE_LIST, 'StaticRpfRule', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.DefaultContext.Ipv4.StaticRpfRules.StaticRpfRule',
                [], [],
                '''                RPF prefix address and mask
                ''',
                'static_rpf_rule',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'static-rpf-rules',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.DefaultContext.Ipv4.Interfaces.Interface' : {
        'meta_info' : _MetaInfoClass('Mfwd.DefaultContext.Ipv4.Interfaces.Interface', REFERENCE_LIST,
            '''The name of the interface''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Interface name
                ''',
                'interface_name',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
            _MetaInfoClassMember('ttl-threshold', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '255')], [],
                '''                TTL threshold for multicast packets
                ''',
                'ttl_threshold',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('enable-on-interface', ATTRIBUTE, 'bool', 'boolean',
                None, None,
                [], [],
                '''                Enable or disable IP multicast on the
                interface
                ''',
                'enable_on_interface',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('boundary', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 64)], [],
                '''                Boundary for administratively scoped multicast
                addresses
                ''',
                'boundary',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'interface',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.DefaultContext.Ipv4.Interfaces' : {
        'meta_info' : _MetaInfoClass('Mfwd.DefaultContext.Ipv4.Interfaces', REFERENCE_CLASS,
            '''Interface-level Configuration''',
            False, 
            [
            _MetaInfoClassMember('interface', REFERENCE_LIST, 'Interface', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.DefaultContext.Ipv4.Interfaces.Interface',
                [], [],
                '''                The name of the interface
                ''',
                'interface',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'interfaces',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.DefaultContext.Ipv4' : {
        'meta_info' : _MetaInfoClass('Mfwd.DefaultContext.Ipv4', REFERENCE_CLASS,
            '''IPV4 commands in the default context''',
            False, 
            [
            _MetaInfoClassMember('out-of-memory-handling', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable out-of-memory handling
                ''',
                'out_of_memory_handling',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('enable-on-all-interfaces', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Configure all interfaces for multicast routing
                and forwarding
                ''',
                'enable_on_all_interfaces',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('maximum-checking-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable state limit maximum checking
                ''',
                'maximum_checking_disable',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('rate-per-route', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable per (S,G) rate calculation
                ''',
                'rate_per_route',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('interface-inheritance-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable interface inheritance configuration
                ''',
                'interface_inheritance_disable',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('static-rpf-rules', REFERENCE_CLASS, 'StaticRpfRules', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.DefaultContext.Ipv4.StaticRpfRules',
                [], [],
                '''                Configure a static RPF rule for a given prefix
                ''',
                'static_rpf_rules',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('mofrr-lockout-timer-config', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '3600')], [],
                '''                Mofrr Lockout timer value
                ''',
                'mofrr_lockout_timer_config',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('forwarding-latency', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('5', '500')], [],
                '''                Knob to delay traffic being forwarded on a route
                ''',
                'forwarding_latency',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('mofrr-loss-detection-timer-config', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '3600')], [],
                '''                Mofrr Loss Detection timer value
                ''',
                'mofrr_loss_detection_timer_config',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('interfaces', REFERENCE_CLASS, 'Interfaces', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.DefaultContext.Ipv4.Interfaces',
                [], [],
                '''                Interface-level Configuration
                ''',
                'interfaces',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('multicast-forwarding', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IP multicast routing and forwarding
                ''',
                'multicast_forwarding',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('log-traps', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable logging trap event
                ''',
                'log_traps',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('accounting', REFERENCE_ENUM_CLASS, 'AccountingMode', 'Accounting-mode',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'AccountingMode',
                [], [],
                '''                Per-prefix accounting mode
                ''',
                'accounting',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'ipv4',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.DefaultContext' : {
        'meta_info' : _MetaInfoClass('Mfwd.DefaultContext', REFERENCE_CLASS,
            '''Default Context''',
            False, 
            [
            _MetaInfoClassMember('ipv6', REFERENCE_CLASS, 'Ipv6', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.DefaultContext.Ipv6',
                [], [],
                '''                IPV6 commands in the default context
                ''',
                'ipv6',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('ipv4', REFERENCE_CLASS, 'Ipv4', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.DefaultContext.Ipv4',
                [], [],
                '''                IPV4 commands in the default context
                ''',
                'ipv4',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'default-context',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.Vrfs.Vrf.Ipv6.StaticRpfRules.StaticRpfRule' : {
        'meta_info' : _MetaInfoClass('Mfwd.Vrfs.Vrf.Ipv6.StaticRpfRules.StaticRpfRule', REFERENCE_LIST,
            '''RPF prefix address and mask''',
            False, 
            [
            _MetaInfoClassMember('address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                IP address of the RPF prefix
                ''',
                'address',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', True, [
                    _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        IP address of the RPF prefix
                        ''',
                        'address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
                    _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        IP address of the RPF prefix
                        ''',
                        'address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
                ]),
            _MetaInfoClassMember('prefix-mask', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '128')], [],
                '''                Prefix mask of the RPF Prefix
                ''',
                'prefix_mask',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
            _MetaInfoClassMember('neighbor-address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                Neighbor address of the RPF Prefix
                ''',
                'neighbor_address',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False, [
                    _MetaInfoClassMember('neighbor-address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        Neighbor address of the RPF Prefix
                        ''',
                        'neighbor_address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', False, is_mandatory=True),
                    _MetaInfoClassMember('neighbor-address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        Neighbor address of the RPF Prefix
                        ''',
                        'neighbor_address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', False, is_mandatory=True),
                ], is_mandatory=True),
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                The name of the RPF interface
                ''',
                'interface_name',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'static-rpf-rule',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.Vrfs.Vrf.Ipv6.StaticRpfRules' : {
        'meta_info' : _MetaInfoClass('Mfwd.Vrfs.Vrf.Ipv6.StaticRpfRules', REFERENCE_CLASS,
            '''Configure a static RPF rule for a given prefix''',
            False, 
            [
            _MetaInfoClassMember('static-rpf-rule', REFERENCE_LIST, 'StaticRpfRule', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.Vrfs.Vrf.Ipv6.StaticRpfRules.StaticRpfRule',
                [], [],
                '''                RPF prefix address and mask
                ''',
                'static_rpf_rule',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'static-rpf-rules',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.Vrfs.Vrf.Ipv6.Interfaces.Interface' : {
        'meta_info' : _MetaInfoClass('Mfwd.Vrfs.Vrf.Ipv6.Interfaces.Interface', REFERENCE_LIST,
            '''The name of the interface''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Interface name
                ''',
                'interface_name',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
            _MetaInfoClassMember('ttl-threshold', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '255')], [],
                '''                TTL threshold for multicast packets
                ''',
                'ttl_threshold',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('enable-on-interface', ATTRIBUTE, 'bool', 'boolean',
                None, None,
                [], [],
                '''                Enable or disable IP multicast on the
                interface
                ''',
                'enable_on_interface',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('boundary', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 64)], [],
                '''                Boundary for administratively scoped multicast
                addresses
                ''',
                'boundary',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'interface',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.Vrfs.Vrf.Ipv6.Interfaces' : {
        'meta_info' : _MetaInfoClass('Mfwd.Vrfs.Vrf.Ipv6.Interfaces', REFERENCE_CLASS,
            '''Interface-level Configuration''',
            False, 
            [
            _MetaInfoClassMember('interface', REFERENCE_LIST, 'Interface', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.Vrfs.Vrf.Ipv6.Interfaces.Interface',
                [], [],
                '''                The name of the interface
                ''',
                'interface',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'interfaces',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.Vrfs.Vrf.Ipv6' : {
        'meta_info' : _MetaInfoClass('Mfwd.Vrfs.Vrf.Ipv6', REFERENCE_CLASS,
            '''VRF table for IPV6 commands''',
            False, 
            [
            _MetaInfoClassMember('enable-on-all-interfaces', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Configure all interfaces for multicast routing
                and forwarding
                ''',
                'enable_on_all_interfaces',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('rate-per-route', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable per (S,G) rate calculation
                ''',
                'rate_per_route',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('static-rpf-rules', REFERENCE_CLASS, 'StaticRpfRules', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.Vrfs.Vrf.Ipv6.StaticRpfRules',
                [], [],
                '''                Configure a static RPF rule for a given prefix
                ''',
                'static_rpf_rules',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('interfaces', REFERENCE_CLASS, 'Interfaces', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.Vrfs.Vrf.Ipv6.Interfaces',
                [], [],
                '''                Interface-level Configuration
                ''',
                'interfaces',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('multicast-forwarding', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IP multicast routing and forwarding
                ''',
                'multicast_forwarding',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('log-traps', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable logging trap event
                ''',
                'log_traps',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('accounting', REFERENCE_ENUM_CLASS, 'AccountingMode', 'Accounting-mode',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'AccountingMode',
                [], [],
                '''                Per-prefix accounting mode
                ''',
                'accounting',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'ipv6',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.Vrfs.Vrf.Ipv4.StaticRpfRules.StaticRpfRule' : {
        'meta_info' : _MetaInfoClass('Mfwd.Vrfs.Vrf.Ipv4.StaticRpfRules.StaticRpfRule', REFERENCE_LIST,
            '''RPF prefix address and mask''',
            False, 
            [
            _MetaInfoClassMember('address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                IP address of the RPF prefix
                ''',
                'address',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', True, [
                    _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        IP address of the RPF prefix
                        ''',
                        'address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
                    _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        IP address of the RPF prefix
                        ''',
                        'address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
                ]),
            _MetaInfoClassMember('prefix-mask', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '128')], [],
                '''                Prefix mask of the RPF Prefix
                ''',
                'prefix_mask',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
            _MetaInfoClassMember('neighbor-address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                Neighbor address of the RPF Prefix
                ''',
                'neighbor_address',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False, [
                    _MetaInfoClassMember('neighbor-address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        Neighbor address of the RPF Prefix
                        ''',
                        'neighbor_address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', False, is_mandatory=True),
                    _MetaInfoClassMember('neighbor-address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        Neighbor address of the RPF Prefix
                        ''',
                        'neighbor_address',
                        'Cisco-IOS-XR-ipv4-mfwd-cfg', False, is_mandatory=True),
                ], is_mandatory=True),
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                The name of the RPF interface
                ''',
                'interface_name',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'static-rpf-rule',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.Vrfs.Vrf.Ipv4.StaticRpfRules' : {
        'meta_info' : _MetaInfoClass('Mfwd.Vrfs.Vrf.Ipv4.StaticRpfRules', REFERENCE_CLASS,
            '''Configure a static RPF rule for a given prefix''',
            False, 
            [
            _MetaInfoClassMember('static-rpf-rule', REFERENCE_LIST, 'StaticRpfRule', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.Vrfs.Vrf.Ipv4.StaticRpfRules.StaticRpfRule',
                [], [],
                '''                RPF prefix address and mask
                ''',
                'static_rpf_rule',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'static-rpf-rules',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.Vrfs.Vrf.Ipv4.Interfaces.Interface' : {
        'meta_info' : _MetaInfoClass('Mfwd.Vrfs.Vrf.Ipv4.Interfaces.Interface', REFERENCE_LIST,
            '''The name of the interface''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Interface name
                ''',
                'interface_name',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
            _MetaInfoClassMember('ttl-threshold', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '255')], [],
                '''                TTL threshold for multicast packets
                ''',
                'ttl_threshold',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('enable-on-interface', ATTRIBUTE, 'bool', 'boolean',
                None, None,
                [], [],
                '''                Enable or disable IP multicast on the
                interface
                ''',
                'enable_on_interface',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('boundary', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 64)], [],
                '''                Boundary for administratively scoped multicast
                addresses
                ''',
                'boundary',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'interface',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.Vrfs.Vrf.Ipv4.Interfaces' : {
        'meta_info' : _MetaInfoClass('Mfwd.Vrfs.Vrf.Ipv4.Interfaces', REFERENCE_CLASS,
            '''Interface-level Configuration''',
            False, 
            [
            _MetaInfoClassMember('interface', REFERENCE_LIST, 'Interface', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.Vrfs.Vrf.Ipv4.Interfaces.Interface',
                [], [],
                '''                The name of the interface
                ''',
                'interface',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'interfaces',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.Vrfs.Vrf.Ipv4' : {
        'meta_info' : _MetaInfoClass('Mfwd.Vrfs.Vrf.Ipv4', REFERENCE_CLASS,
            '''VRF table for IPV4 commands''',
            False, 
            [
            _MetaInfoClassMember('enable-on-all-interfaces', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Configure all interfaces for multicast routing
                and forwarding
                ''',
                'enable_on_all_interfaces',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('rate-per-route', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable per (S,G) rate calculation
                ''',
                'rate_per_route',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('static-rpf-rules', REFERENCE_CLASS, 'StaticRpfRules', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.Vrfs.Vrf.Ipv4.StaticRpfRules',
                [], [],
                '''                Configure a static RPF rule for a given prefix
                ''',
                'static_rpf_rules',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('interfaces', REFERENCE_CLASS, 'Interfaces', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.Vrfs.Vrf.Ipv4.Interfaces',
                [], [],
                '''                Interface-level Configuration
                ''',
                'interfaces',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('multicast-forwarding', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IP multicast routing and forwarding
                ''',
                'multicast_forwarding',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('log-traps', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable logging trap event
                ''',
                'log_traps',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('accounting', REFERENCE_ENUM_CLASS, 'AccountingMode', 'Accounting-mode',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'AccountingMode',
                [], [],
                '''                Per-prefix accounting mode
                ''',
                'accounting',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'ipv4',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.Vrfs.Vrf' : {
        'meta_info' : _MetaInfoClass('Mfwd.Vrfs.Vrf', REFERENCE_LIST,
            '''VRF table names''',
            False, 
            [
            _MetaInfoClassMember('vrf-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                VRF Name
                ''',
                'vrf_name',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', True),
            _MetaInfoClassMember('ipv6', REFERENCE_CLASS, 'Ipv6', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.Vrfs.Vrf.Ipv6',
                [], [],
                '''                VRF table for IPV6 commands
                ''',
                'ipv6',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('ipv4', REFERENCE_CLASS, 'Ipv4', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.Vrfs.Vrf.Ipv4',
                [], [],
                '''                VRF table for IPV4 commands
                ''',
                'ipv4',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'vrf',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd.Vrfs' : {
        'meta_info' : _MetaInfoClass('Mfwd.Vrfs', REFERENCE_CLASS,
            '''VRF Table''',
            False, 
            [
            _MetaInfoClassMember('vrf', REFERENCE_LIST, 'Vrf', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.Vrfs.Vrf',
                [], [],
                '''                VRF table names
                ''',
                'vrf',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'vrfs',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
    'Mfwd' : {
        'meta_info' : _MetaInfoClass('Mfwd', REFERENCE_CLASS,
            '''Multicast routing configuration''',
            False, 
            [
            _MetaInfoClassMember('default-context', REFERENCE_CLASS, 'DefaultContext', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.DefaultContext',
                [], [],
                '''                Default Context
                ''',
                'default_context',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            _MetaInfoClassMember('vrfs', REFERENCE_CLASS, 'Vrfs', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg', 'Mfwd.Vrfs',
                [], [],
                '''                VRF Table
                ''',
                'vrfs',
                'Cisco-IOS-XR-ipv4-mfwd-cfg', False),
            ],
            'Cisco-IOS-XR-ipv4-mfwd-cfg',
            'mfwd',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-ipv4-mfwd-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_ipv4_mfwd_cfg',
        ),
    },
}
_meta_table['Mfwd.DefaultContext.Ipv6.StaticRpfRules.StaticRpfRule']['meta_info'].parent =_meta_table['Mfwd.DefaultContext.Ipv6.StaticRpfRules']['meta_info']
_meta_table['Mfwd.DefaultContext.Ipv6.Interfaces.Interface']['meta_info'].parent =_meta_table['Mfwd.DefaultContext.Ipv6.Interfaces']['meta_info']
_meta_table['Mfwd.DefaultContext.Ipv6.StaticRpfRules']['meta_info'].parent =_meta_table['Mfwd.DefaultContext.Ipv6']['meta_info']
_meta_table['Mfwd.DefaultContext.Ipv6.Interfaces']['meta_info'].parent =_meta_table['Mfwd.DefaultContext.Ipv6']['meta_info']
_meta_table['Mfwd.DefaultContext.Ipv4.StaticRpfRules.StaticRpfRule']['meta_info'].parent =_meta_table['Mfwd.DefaultContext.Ipv4.StaticRpfRules']['meta_info']
_meta_table['Mfwd.DefaultContext.Ipv4.Interfaces.Interface']['meta_info'].parent =_meta_table['Mfwd.DefaultContext.Ipv4.Interfaces']['meta_info']
_meta_table['Mfwd.DefaultContext.Ipv4.StaticRpfRules']['meta_info'].parent =_meta_table['Mfwd.DefaultContext.Ipv4']['meta_info']
_meta_table['Mfwd.DefaultContext.Ipv4.Interfaces']['meta_info'].parent =_meta_table['Mfwd.DefaultContext.Ipv4']['meta_info']
_meta_table['Mfwd.DefaultContext.Ipv6']['meta_info'].parent =_meta_table['Mfwd.DefaultContext']['meta_info']
_meta_table['Mfwd.DefaultContext.Ipv4']['meta_info'].parent =_meta_table['Mfwd.DefaultContext']['meta_info']
_meta_table['Mfwd.Vrfs.Vrf.Ipv6.StaticRpfRules.StaticRpfRule']['meta_info'].parent =_meta_table['Mfwd.Vrfs.Vrf.Ipv6.StaticRpfRules']['meta_info']
_meta_table['Mfwd.Vrfs.Vrf.Ipv6.Interfaces.Interface']['meta_info'].parent =_meta_table['Mfwd.Vrfs.Vrf.Ipv6.Interfaces']['meta_info']
_meta_table['Mfwd.Vrfs.Vrf.Ipv6.StaticRpfRules']['meta_info'].parent =_meta_table['Mfwd.Vrfs.Vrf.Ipv6']['meta_info']
_meta_table['Mfwd.Vrfs.Vrf.Ipv6.Interfaces']['meta_info'].parent =_meta_table['Mfwd.Vrfs.Vrf.Ipv6']['meta_info']
_meta_table['Mfwd.Vrfs.Vrf.Ipv4.StaticRpfRules.StaticRpfRule']['meta_info'].parent =_meta_table['Mfwd.Vrfs.Vrf.Ipv4.StaticRpfRules']['meta_info']
_meta_table['Mfwd.Vrfs.Vrf.Ipv4.Interfaces.Interface']['meta_info'].parent =_meta_table['Mfwd.Vrfs.Vrf.Ipv4.Interfaces']['meta_info']
_meta_table['Mfwd.Vrfs.Vrf.Ipv4.StaticRpfRules']['meta_info'].parent =_meta_table['Mfwd.Vrfs.Vrf.Ipv4']['meta_info']
_meta_table['Mfwd.Vrfs.Vrf.Ipv4.Interfaces']['meta_info'].parent =_meta_table['Mfwd.Vrfs.Vrf.Ipv4']['meta_info']
_meta_table['Mfwd.Vrfs.Vrf.Ipv6']['meta_info'].parent =_meta_table['Mfwd.Vrfs.Vrf']['meta_info']
_meta_table['Mfwd.Vrfs.Vrf.Ipv4']['meta_info'].parent =_meta_table['Mfwd.Vrfs.Vrf']['meta_info']
_meta_table['Mfwd.Vrfs.Vrf']['meta_info'].parent =_meta_table['Mfwd.Vrfs']['meta_info']
_meta_table['Mfwd.DefaultContext']['meta_info'].parent =_meta_table['Mfwd']['meta_info']
_meta_table['Mfwd.Vrfs']['meta_info'].parent =_meta_table['Mfwd']['meta_info']
