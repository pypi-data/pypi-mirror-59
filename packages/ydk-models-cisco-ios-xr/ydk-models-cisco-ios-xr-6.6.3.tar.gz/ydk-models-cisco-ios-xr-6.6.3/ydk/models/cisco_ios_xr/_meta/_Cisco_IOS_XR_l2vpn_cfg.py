
'''
This is auto-generated file,
which includes metadata for module Cisco_IOS_XR_l2vpn_cfg
'''

from ydk._core._dm_meta_info import _MetaInfoClassMember, _MetaInfoClass, _MetaInfoEnum
from ydk._core._dm_meta_info import ATTRIBUTE, REFERENCE_LIST, REFERENCE_LEAFLIST, REFERENCE_BITS, REFERENCE_UNION
from ydk._core._dm_meta_info import REFERENCE_CLASS, REFERENCE_IDENTITY_CLASS, REFERENCE_ENUM_CLASS, ANYXML_CLASS
from ydk._core._importer import _yang_ns

_meta_table = {
    'EvpnEncapsulation' : _MetaInfoEnum('EvpnEncapsulation',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EvpnEncapsulation',
        '''Evpn encapsulation''',
        {
            'evpn-encapsulationvxlan':'evpn_encapsulationvxlan',
            'evpn-encapsulation-mpls':'evpn_encapsulation_mpls',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'Interworking' : _MetaInfoEnum('Interworking',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Interworking',
        '''Interworking''',
        {
            'ethernet':'ethernet',
            'ipv4':'ipv4',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'L2vpnCapabilityMode' : _MetaInfoEnum('L2vpnCapabilityMode',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnCapabilityMode',
        '''L2vpn capability mode''',
        {
            'high-mode':'high_mode',
            'single-mode':'single_mode',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'EvpnSide' : _MetaInfoEnum('EvpnSide',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EvpnSide',
        '''Evpn side''',
        {
            'evpn-side-regular':'evpn_side_regular',
            'evpn-side-stitching':'evpn_side_stitching',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'BridgeDomainTransportMode' : _MetaInfoEnum('BridgeDomainTransportMode',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BridgeDomainTransportMode',
        '''Bridge domain transport mode''',
        {
            'vlan-passthrough':'vlan_passthrough',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'PreferredPath' : _MetaInfoEnum('PreferredPath',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'PreferredPath',
        '''Preferred path''',
        {
            'te-tunnel':'te_tunnel',
            'ip-tunnel':'ip_tunnel',
            'tp-tunnel':'tp_tunnel',
            'sr-te-policy':'sr_te_policy',
            'named-te-tunnel':'named_te_tunnel',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'VccvVerification' : _MetaInfoEnum('VccvVerification',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'VccvVerification',
        '''Vccv verification''',
        {
            'none':'none',
            'lsp-ping':'lsp_ping',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'MacWithdrawBehavior' : _MetaInfoEnum('MacWithdrawBehavior',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacWithdrawBehavior',
        '''Mac withdraw behavior''',
        {
            'legacy':'legacy',
            'optimized':'optimized',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'PortDownFlush' : _MetaInfoEnum('PortDownFlush',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'PortDownFlush',
        '''Port down flush''',
        {
            'port-down-flush':'port_down_flush',
            'enable-port-down-flush':'enable_port_down_flush',
            'disable-port-down-flush':'disable_port_down_flush',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'TypeOfServiceMode' : _MetaInfoEnum('TypeOfServiceMode',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'TypeOfServiceMode',
        '''Type of service mode''',
        {
            'none':'none',
            'reflect':'reflect',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'EthernetSegmentLoadBalance' : _MetaInfoEnum('EthernetSegmentLoadBalance',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentLoadBalance',
        '''Ethernet segment load balance''',
        {
            'single-active':'single_active',
            'port-active':'port_active',
            'single-flow-active':'single_flow_active',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'MplsSignalingProtocol' : _MetaInfoEnum('MplsSignalingProtocol',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MplsSignalingProtocol',
        '''Mpls signaling protocol''',
        {
            'none':'none',
            'ldp':'ldp',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'Erpaps' : _MetaInfoEnum('Erpaps',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Erpaps',
        '''Erpaps''',
        {
            'interface':'interface',
            'bridge-domain':'bridge_domain',
            'xconnect':'xconnect',
            'none':'none',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'MacSecureAction' : _MetaInfoEnum('MacSecureAction',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacSecureAction',
        '''Mac secure action''',
        {
            'restrict':'restrict',
            'none':'none',
            'shutdown':'shutdown',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'ErpPort' : _MetaInfoEnum('ErpPort',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'ErpPort',
        '''Erp port''',
        {
            'none':'none',
            'virtual':'virtual',
            'interface':'interface',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'BgpRouteTargetRole' : _MetaInfoEnum('BgpRouteTargetRole',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetRole',
        '''Bgp route target role''',
        {
            'both':'both',
            'import':'import_',
            'export':'export',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'BackupDisable' : _MetaInfoEnum('BackupDisable',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BackupDisable',
        '''Backup disable''',
        {
            'never':'never',
            'delay':'delay',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'TransportMode' : _MetaInfoEnum('TransportMode',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'TransportMode',
        '''Transport mode''',
        {
            'ethernet':'ethernet',
            'vlan':'vlan',
            'vlan-passthrough':'vlan_passthrough',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'FlowLabelTlvCode' : _MetaInfoEnum('FlowLabelTlvCode',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'FlowLabelTlvCode',
        '''Flow label tlv code''',
        {
            '17':'Y_17',
            'disable':'disable',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'BgpRouteTarget' : _MetaInfoEnum('BgpRouteTarget',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTarget',
        '''Bgp route target''',
        {
            'no-stitching':'no_stitching',
            'stitching':'stitching',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'InterfaceProfile' : _MetaInfoEnum('InterfaceProfile',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceProfile',
        '''Interface profile''',
        {
            'snoop':'snoop',
            'dhcp-protocol':'dhcp_protocol',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'EthernetSegmentIdentifier' : _MetaInfoEnum('EthernetSegmentIdentifier',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentIdentifier',
        '''Ethernet segment identifier''',
        {
            'type0':'type0',
            'legacy':'legacy',
            'override':'override',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'RplRole' : _MetaInfoEnum('RplRole',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'RplRole',
        '''Rpl role''',
        {
            'owner':'owner',
            'neighbor':'neighbor',
            'next-neighbor':'next_neighbor',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'PwSwitchingPointTlv' : _MetaInfoEnum('PwSwitchingPointTlv',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'PwSwitchingPointTlv',
        '''Pw switching point tlv''',
        {
            'hide':'hide',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'StormControl' : _MetaInfoEnum('StormControl',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'StormControl',
        '''Storm control''',
        {
            'unicast':'unicast',
            'multicast':'multicast',
            'broadcast':'broadcast',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'EthernetSegmentServiceCarving' : _MetaInfoEnum('EthernetSegmentServiceCarving',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentServiceCarving',
        '''Ethernet segment service carving''',
        {
            'mod-n':'mod_n',
            'manual':'manual',
            'hrw':'hrw',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'MacLearn' : _MetaInfoEnum('MacLearn',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLearn',
        '''Mac learn''',
        {
            'default-learning':'default_learning',
            'enable-learning':'enable_learning',
            'disable-learning':'disable_learning',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'L2tpv3Sequencing' : _MetaInfoEnum('L2tpv3Sequencing',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2tpv3Sequencing',
        '''L2tpv3 sequencing''',
        {
            'off':'off',
            'both':'both',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'LoadBalance' : _MetaInfoEnum('LoadBalance',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'LoadBalance',
        '''Load balance''',
        {
            'source-dest-mac':'source_dest_mac',
            'source-dest-ip':'source_dest_ip',
            'pseudowire-label':'pseudowire_label',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'L2tpSignalingProtocol' : _MetaInfoEnum('L2tpSignalingProtocol',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2tpSignalingProtocol',
        '''L2tp signaling protocol''',
        {
            'none':'none',
            'l2tpv3':'l2tpv3',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'BdmacLearn' : _MetaInfoEnum('BdmacLearn',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BdmacLearn',
        '''Bdmac learn''',
        {
            'disable-learning':'disable_learning',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'L2mcSrcTrafficEnabled' : _MetaInfoEnum('L2mcSrcTrafficEnabled',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2mcSrcTrafficEnabled',
        '''L2mc src traffic enabled''',
        {
            'l2mc-none':'l2mc_none',
            'l2mc-ipv4':'l2mc_ipv4',
            'l2mc-ipv6':'l2mc_ipv6',
            'l2mc-ipv4-ipv6':'l2mc_ipv4_ipv6',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'L2vpnVerification' : _MetaInfoEnum('L2vpnVerification',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnVerification',
        '''L2vpn verification''',
        {
            'enable':'enable',
            'disable':'disable',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'InterfaceTrafficFlood' : _MetaInfoEnum('InterfaceTrafficFlood',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceTrafficFlood',
        '''Interface traffic flood''',
        {
            'traffic-flooding':'traffic_flooding',
            'enable-flooding':'enable_flooding',
            'disable-flooding':'disable_flooding',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'L2Encapsulation' : _MetaInfoEnum('L2Encapsulation',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2Encapsulation',
        '''L2 encapsulation''',
        {
            'vlan':'vlan',
            'ethernet':'ethernet',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'L2vpnLogging' : _MetaInfoEnum('L2vpnLogging',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
        '''L2vpn logging''',
        {
            'enable':'enable',
            'disable':'disable',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'MacFlushMode' : _MetaInfoEnum('MacFlushMode',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacFlushMode',
        '''Mac flush mode''',
        {
            'mvrp':'mvrp',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'L2tpCookieSize' : _MetaInfoEnum('L2tpCookieSize',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2tpCookieSize',
        '''L2tp cookie size''',
        {
            'zero':'zero',
            'four':'four',
            'eight':'eight',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'MplsSequencing' : _MetaInfoEnum('MplsSequencing',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MplsSequencing',
        '''Mpls sequencing''',
        {
            'off':'off',
            'transmit':'transmit',
            'receive':'receive',
            'both':'both',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'EthernetSegmentServiceCarvingMcast' : _MetaInfoEnum('EthernetSegmentServiceCarvingMcast',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentServiceCarvingMcast',
        '''Ethernet segment service carving mcast''',
        {
            'disabled':'disabled',
            'hrw-s-g':'hrw_s_g',
            'hrw-g':'hrw_g',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'MacLimitAction' : _MetaInfoEnum('MacLimitAction',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLimitAction',
        '''Mac limit action''',
        {
            'none':'none',
            'flood':'flood',
            'no-flood':'no_flood',
            'shutdown':'shutdown',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'ErpPort1' : _MetaInfoEnum('ErpPort1',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'ErpPort1',
        '''Erp port1''',
        {
            'port0':'port0',
            'port1':'port1',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'MacNotification' : _MetaInfoEnum('MacNotification',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacNotification',
        '''Mac notification''',
        {
            'no-notif':'no_notif',
            'syslog':'syslog',
            'trap':'trap',
            'syslog-snmp':'syslog_snmp',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'ControlWord' : _MetaInfoEnum('ControlWord',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'ControlWord',
        '''Control word''',
        {
            'enable':'enable',
            'disable':'disable',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'BgpRouteDistinguisher' : _MetaInfoEnum('BgpRouteDistinguisher',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteDistinguisher',
        '''Bgp route distinguisher''',
        {
            'auto':'auto',
            'two-byte-as':'two_byte_as',
            'four-byte-as':'four_byte_as',
            'ipv4-address':'ipv4_address',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'BgpRouteTargetFormat' : _MetaInfoEnum('BgpRouteTargetFormat',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetFormat',
        '''Bgp route target format''',
        {
            'none':'none',
            'two-byte-as':'two_byte_as',
            'four-byte-as':'four_byte_as',
            'ipv4-address':'ipv4_address',
            'es-import':'es_import',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'LdpVplsId' : _MetaInfoEnum('LdpVplsId',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'LdpVplsId',
        '''Ldp vpls id''',
        {
            'two-byte-as':'two_byte_as',
            'ipv4-address':'ipv4_address',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'MacAging' : _MetaInfoEnum('MacAging',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacAging',
        '''Mac aging''',
        {
            'absolute':'absolute',
            'inactivity':'inactivity',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'FlowLabelLoadBalance' : _MetaInfoEnum('FlowLabelLoadBalance',
        'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'FlowLabelLoadBalance',
        '''Flow label load balance''',
        {
            'off':'off',
            'receive':'receive',
            'transmit':'transmit',
            'both':'both',
        }, 'Cisco-IOS-XR-l2vpn-cfg', _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg']),
    'L2vpn.PwRouting.PwRoutingBgp.EvpnRouteDistinguisher' : {
        'meta_info' : _MetaInfoClass('L2vpn.PwRouting.PwRoutingBgp.EvpnRouteDistinguisher', REFERENCE_CLASS,
            '''Route Distinguisher''',
            False, 
            [
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'BgpRouteDistinguisher', 'Bgp-route-distinguisher',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteDistinguisher',
                [], [],
                '''                Router Distinguisher Type
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Rdas-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Two byte or 4 byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Rdas-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS:nn (hex or decimal format)
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('addr-index', ATTRIBUTE, 'int', 'Rd-addr-index',
                None, None,
                [('0', '65535')], [],
                '''                Addr index
                ''',
                'addr_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-route-distinguisher',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.PwRouting.PwRoutingBgp' : {
        'meta_info' : _MetaInfoClass('L2vpn.PwRouting.PwRoutingBgp', REFERENCE_CLASS,
            '''Enable Autodiscovery BGP Pseudowire-routing BGP''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Autodiscovery BGP
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-route-distinguisher', REFERENCE_CLASS, 'EvpnRouteDistinguisher', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.PwRouting.PwRoutingBgp.EvpnRouteDistinguisher',
                [], [],
                '''                Route Distinguisher
                ''',
                'evpn_route_distinguisher',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pw-routing-bgp',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.PwRouting' : {
        'meta_info' : _MetaInfoClass('L2vpn.PwRouting', REFERENCE_CLASS,
            '''Pseudowire-routing attributes''',
            False, 
            [
            _MetaInfoClassMember('pw-routing-bgp', REFERENCE_CLASS, 'PwRoutingBgp', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.PwRouting.PwRoutingBgp',
                [], [],
                '''                Enable Autodiscovery BGP Pseudowire-routing BGP
                ''',
                'pw_routing_bgp',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pw-routing-global-id', ATTRIBUTE, 'int', 'Pseudowire-gbl-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Pseudowire-routing Global ID
                ''',
                'pw_routing_global_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pw-routing',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Neighbor' : {
        'meta_info' : _MetaInfoClass('L2vpn.Neighbor', REFERENCE_CLASS,
            '''L2VPN neighbor submode''',
            False, 
            [
            _MetaInfoClassMember('ldp-flap', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable targetted LDP session flap action
                ''',
                'ldp_flap',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'neighbor',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.G8032Rings.G8032Ring.ErpPort0s.ErpPort0' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.G8032Rings.G8032Ring.ErpPort0s.ErpPort0', REFERENCE_LIST,
            '''Configure ERP main port0''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Port0 interface
                ''',
                'interface_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('monitor', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Ethernet ring protection port0 monitor
                ''',
                'monitor',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'erp-port0',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.G8032Rings.G8032Ring.ErpPort0s' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.G8032Rings.G8032Ring.ErpPort0s', REFERENCE_CLASS,
            '''Ethernet ring protection port0''',
            False, 
            [
            _MetaInfoClassMember('erp-port0', REFERENCE_LIST, 'ErpPort0', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.G8032Rings.G8032Ring.ErpPort0s.ErpPort0',
                [], [],
                '''                Configure ERP main port0
                ''',
                'erp_port0',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'erp-port0s',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance.Rpl' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance.Rpl', REFERENCE_CLASS,
            '''Ring protection link''',
            False, 
            [
            _MetaInfoClassMember('port', REFERENCE_ENUM_CLASS, 'ErpPort1', 'Erp-port1',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'ErpPort1',
                [], [],
                '''                ERP main port number
                ''',
                'port',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('role', REFERENCE_ENUM_CLASS, 'RplRole', 'Rpl-role',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'RplRole',
                [], [],
                '''                RPL role
                ''',
                'role',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'rpl',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance.Aps.Port1' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance.Aps.Port1', REFERENCE_CLASS,
            '''APS channel for ERP port1''',
            False, 
            [
            _MetaInfoClassMember('aps-type', REFERENCE_ENUM_CLASS, 'Erpaps', 'Erpaps',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Erpaps',
                [], [],
                '''                Port1 APS type
                ''',
                'aps_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('aps-channel', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Port1 APS channel in the format of
                InterfaceName, BDName or XconnectName
                ''',
                'aps_channel',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'port1',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance.Aps' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance.Aps', REFERENCE_CLASS,
            '''Automatic protection switching''',
            False, 
            [
            _MetaInfoClassMember('port1', REFERENCE_CLASS, 'Port1', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance.Aps.Port1',
                [], [],
                '''                APS channel for ERP port1
                ''',
                'port1',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('port0', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Port0 APS channel in the format of
                InterfaceName
                ''',
                'port0',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable automatic protection switching
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('level', ATTRIBUTE, 'int', 'Erpaps-level-range',
                None, None,
                [('0', '7')], [],
                '''                Automatic protection switching level
                ''',
                'level',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'aps',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance', REFERENCE_LIST,
            '''Ethernet ring protection instance''',
            False, 
            [
            _MetaInfoClassMember('erp-instance-id', ATTRIBUTE, 'int', 'Erp-instance-range',
                None, None,
                [('1', '2')], [],
                '''                ERP instance number
                ''',
                'erp_instance_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('rpl', REFERENCE_CLASS, 'Rpl', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance.Rpl',
                [], [],
                '''                Ring protection link
                ''',
                'rpl',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('aps', REFERENCE_CLASS, 'Aps', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance.Aps',
                [], [],
                '''                Automatic protection switching
                ''',
                'aps',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('description', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 32)], [],
                '''                Ethernet ring protection instance
                description
                ''',
                'description',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('inclusion-list', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Associates a set of VLAN IDs with the G
                .8032 instance
                ''',
                'inclusion_list',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('profile', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 32)], [],
                '''                Ethernet ring protection instance profile
                ''',
                'profile',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'erp-instance',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.G8032Rings.G8032Ring.ErpInstances' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.G8032Rings.G8032Ring.ErpInstances', REFERENCE_CLASS,
            '''List of ethernet ring protection instance''',
            False, 
            [
            _MetaInfoClassMember('erp-instance', REFERENCE_LIST, 'ErpInstance', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance',
                [], [],
                '''                Ethernet ring protection instance
                ''',
                'erp_instance',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'erp-instances',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1.NoneOrVirtual' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1.NoneOrVirtual', REFERENCE_CLASS,
            '''none or virtual''',
            False, 
            [
            _MetaInfoClassMember('monitor', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Ethernet ring protection port1 monitor
                ''',
                'monitor',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'none-or-virtual',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            is_presence=True,
            has_when=True,
        ),
    },
    'L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1.Interface' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1.Interface', REFERENCE_LIST,
            '''interface''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Port1 interface
                ''',
                'interface_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('monitor', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Ethernet ring protection port1 monitor
                ''',
                'monitor',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_when=True,
        ),
    },
    'L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1', REFERENCE_LIST,
            '''Ethernet ring protection port1''',
            False, 
            [
            _MetaInfoClassMember('erp-port-type', REFERENCE_ENUM_CLASS, 'ErpPort', 'Erp-port',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'ErpPort',
                [], [],
                '''                Port1 type
                ''',
                'erp_port_type',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('none-or-virtual', REFERENCE_CLASS, 'NoneOrVirtual', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1.NoneOrVirtual',
                [], [],
                '''                none or virtual
                ''',
                'none_or_virtual',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_presence=True, has_when=True),
            _MetaInfoClassMember('interface', REFERENCE_LIST, 'Interface', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1.Interface',
                [], [],
                '''                interface
                ''',
                'interface',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'erp-port1',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s', REFERENCE_CLASS,
            '''Ethernet ring protection port0''',
            False, 
            [
            _MetaInfoClassMember('erp-port1', REFERENCE_LIST, 'ErpPort1', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1',
                [], [],
                '''                Ethernet ring protection port1
                ''',
                'erp_port1',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'erp-port1s',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.G8032Rings.G8032Ring' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.G8032Rings.G8032Ring', REFERENCE_LIST,
            '''G8032 Ring''',
            False, 
            [
            _MetaInfoClassMember('g8032-ring-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the G8032 ring
                ''',
                'g8032_ring_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('erp-port0s', REFERENCE_CLASS, 'ErpPort0s', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.G8032Rings.G8032Ring.ErpPort0s',
                [], [],
                '''                Ethernet ring protection port0
                ''',
                'erp_port0s',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('erp-instances', REFERENCE_CLASS, 'ErpInstances', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.G8032Rings.G8032Ring.ErpInstances',
                [], [],
                '''                List of ethernet ring protection instance
                ''',
                'erp_instances',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('erp-port1s', REFERENCE_CLASS, 'ErpPort1s', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s',
                [], [],
                '''                Ethernet ring protection port0
                ''',
                'erp_port1s',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('open-ring', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Specify the G.8032 instance as open ring
                ''',
                'open_ring',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('exclusion-list', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Vlan IDs in the format of a-b,c,d,e-f,g
                ,untagged
                ''',
                'exclusion_list',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('erp-provider-bridge', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Ethernet ring protection provider bridge
                ''',
                'erp_provider_bridge',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'g8032-ring',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.G8032Rings' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.G8032Rings', REFERENCE_CLASS,
            '''List of G8032 Ring''',
            False, 
            [
            _MetaInfoClassMember('g8032-ring', REFERENCE_LIST, 'G8032Ring', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.G8032Rings.G8032Ring',
                [], [],
                '''                G8032 Ring
                ''',
                'g8032_ring',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'g8032-rings',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.BackupAttachmentCircuits.BackupAttachmentCircuit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.BackupAttachmentCircuits.BackupAttachmentCircuit', REFERENCE_LIST,
            '''Backup attachment circuit''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Name of the attachment circuit interface
                ''',
                'interface_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'backup-attachment-circuit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.BackupAttachmentCircuits' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.BackupAttachmentCircuits', REFERENCE_CLASS,
            '''List of backup attachment circuits''',
            False, 
            [
            _MetaInfoClassMember('backup-attachment-circuit', REFERENCE_LIST, 'BackupAttachmentCircuit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.BackupAttachmentCircuits.BackupAttachmentCircuit',
                [], [],
                '''                Backup attachment circuit
                ''',
                'backup_attachment_circuit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'backup-attachment-circuits',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireEvpns.PseudowireEvpn' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireEvpns.PseudowireEvpn', REFERENCE_LIST,
            '''EVPN P2P Service Configuration''',
            False, 
            [
            _MetaInfoClassMember('eviid', ATTRIBUTE, 'int', 'Evpnvpnid-range',
                None, None,
                [('1', '65534')], [],
                '''                Ethernet VPN ID
                ''',
                'eviid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('remote-acid', ATTRIBUTE, 'int', 'Pseudowire-evpnacid-range',
                None, None,
                [('1', '16777215')], [],
                '''                Remote AC ID
                ''',
                'remote_acid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('source-acid', ATTRIBUTE, 'int', 'Pseudowire-evpnacid-range',
                None, None,
                [('1', '16777215')], [],
                '''                Source AC ID
                ''',
                'source_acid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the pseudowire class
                ''',
                'class_',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-evpn',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireEvpns' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireEvpns', REFERENCE_CLASS,
            '''List of EVPN Services''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-evpn', REFERENCE_LIST, 'PseudowireEvpn', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireEvpns.PseudowireEvpn',
                [], [],
                '''                EVPN P2P Service Configuration
                ''',
                'pseudowire_evpn',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-evpns',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.MplsStaticLabels' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.MplsStaticLabels', REFERENCE_CLASS,
            '''MPLS static labels''',
            False, 
            [
            _MetaInfoClassMember('local-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire local static label
                ''',
                'local_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('remote-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire remote static label
                ''',
                'remote_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mpls-static-labels',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires.BackupPseudowire.BackupMplsStaticLabels' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires.BackupPseudowire.BackupMplsStaticLabels', REFERENCE_CLASS,
            '''MPLS static labels''',
            False, 
            [
            _MetaInfoClassMember('local-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire local static label
                ''',
                'local_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('remote-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire remote static label
                ''',
                'remote_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'backup-mpls-static-labels',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires.BackupPseudowire' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires.BackupPseudowire', REFERENCE_LIST,
            '''Backup pseudowire for the cross connect''',
            False, 
            [
            _MetaInfoClassMember('neighbor', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Neighbor IP address
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pseudowire-id', ATTRIBUTE, 'int', 'Pseudowire-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Pseudowire ID
                ''',
                'pseudowire_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('backup-mpls-static-labels', REFERENCE_CLASS, 'BackupMplsStaticLabels', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires.BackupPseudowire.BackupMplsStaticLabels',
                [], [],
                '''                MPLS static labels
                ''',
                'backup_mpls_static_labels',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('backup-pw-class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                PW class template name to use for the
                backup PW
                ''',
                'backup_pw_class',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'backup-pseudowire',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires', REFERENCE_CLASS,
            '''List of pseudowires''',
            False, 
            [
            _MetaInfoClassMember('backup-pseudowire', REFERENCE_LIST, 'BackupPseudowire', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires.BackupPseudowire',
                [], [],
                '''                Backup pseudowire for the cross connect
                ''',
                'backup_pseudowire',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'backup-pseudowires',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes.L2tpRemoteCookie' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes.L2tpRemoteCookie', REFERENCE_CLASS,
            '''L2TP remote cookie''',
            False, 
            [
            _MetaInfoClassMember('size', REFERENCE_ENUM_CLASS, 'L2tpCookieSize', 'L2tp-cookie-size',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2tpCookieSize',
                [], [],
                '''                Remote cookie size
                ''',
                'size',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('lower-value', ATTRIBUTE, 'int', 'L2tp-cookie-value-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Lower remote cookie value
                ''',
                'lower_value',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('higher-value', ATTRIBUTE, 'int', 'L2tp-cookie-value-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Higher remote cookie value
                ''',
                'higher_value',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'l2tp-remote-cookie',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes.L2tpSecondaryLocalCookie' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes.L2tpSecondaryLocalCookie', REFERENCE_CLASS,
            '''L2TP secondary local cookie''',
            False, 
            [
            _MetaInfoClassMember('size', REFERENCE_ENUM_CLASS, 'L2tpCookieSize', 'L2tp-cookie-size',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2tpCookieSize',
                [], [],
                '''                Local cookie size
                ''',
                'size',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('lower-value', ATTRIBUTE, 'int', 'L2tp-cookie-value-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Lower local cookie value
                ''',
                'lower_value',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('higher-value', ATTRIBUTE, 'int', 'L2tp-cookie-value-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Higher local cookie value
                ''',
                'higher_value',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'l2tp-secondary-local-cookie',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes.L2tpLocalCookie' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes.L2tpLocalCookie', REFERENCE_CLASS,
            '''L2TP local cookie''',
            False, 
            [
            _MetaInfoClassMember('size', REFERENCE_ENUM_CLASS, 'L2tpCookieSize', 'L2tp-cookie-size',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2tpCookieSize',
                [], [],
                '''                Local cookie size
                ''',
                'size',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('lower-value', ATTRIBUTE, 'int', 'L2tp-cookie-value-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Lower local cookie value
                ''',
                'lower_value',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('higher-value', ATTRIBUTE, 'int', 'L2tp-cookie-value-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Higher local cookie value
                ''',
                'higher_value',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'l2tp-local-cookie',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes', REFERENCE_CLASS,
            '''L2TP Static Attributes''',
            False, 
            [
            _MetaInfoClassMember('l2tp-remote-cookie', REFERENCE_CLASS, 'L2tpRemoteCookie', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes.L2tpRemoteCookie',
                [], [],
                '''                L2TP remote cookie
                ''',
                'l2tp_remote_cookie',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2tp-secondary-local-cookie', REFERENCE_CLASS, 'L2tpSecondaryLocalCookie', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes.L2tpSecondaryLocalCookie',
                [], [],
                '''                L2TP secondary local cookie
                ''',
                'l2tp_secondary_local_cookie',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2tp-local-cookie', REFERENCE_CLASS, 'L2tpLocalCookie', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes.L2tpLocalCookie',
                [], [],
                '''                L2TP local cookie
                ''',
                'l2tp_local_cookie',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2tp-remote-session-id', ATTRIBUTE, 'int', 'L2tp-session-id-range',
                None, None,
                [('1', '65535')], [],
                '''                L2TP remote session ID
                ''',
                'l2tp_remote_session_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2tp-local-session-id', ATTRIBUTE, 'int', 'L2tp-session-id-range',
                None, None,
                [('1', '65535')], [],
                '''                L2TP local session ID
                ''',
                'l2tp_local_session_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'l2tp-static-attributes',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStatic' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStatic', REFERENCE_CLASS,
            '''Pseudowire L2TPv3 static configuration''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable pseudowire L2TPv3 static
                configuration
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'l2tp-static',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor', REFERENCE_LIST,
            '''keys: neighbor''',
            False, 
            [
            _MetaInfoClassMember('neighbor', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Pseudowire IPv4 address
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('mpls-static-labels', REFERENCE_CLASS, 'MplsStaticLabels', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.MplsStaticLabels',
                [], [],
                '''                MPLS static labels
                ''',
                'mpls_static_labels',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('backup-pseudowires', REFERENCE_CLASS, 'BackupPseudowires', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires',
                [], [],
                '''                List of pseudowires
                ''',
                'backup_pseudowires',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2tp-static-attributes', REFERENCE_CLASS, 'L2tpStaticAttributes', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes',
                [], [],
                '''                L2TP Static Attributes
                ''',
                'l2tp_static_attributes',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2tp-static', REFERENCE_CLASS, 'L2tpStatic', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStatic',
                [], [],
                '''                Pseudowire L2TPv3 static configuration
                ''',
                'l2tp_static',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('tag-impose', ATTRIBUTE, 'int', 'Pseudowire-tag-range',
                None, None,
                [('1', '4094')], [],
                '''                Tag Impose vlan tagged mode
                ''',
                'tag_impose',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the pseudowire class
                ''',
                'class_',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('source-address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                Value of the Pseudowire source address.
                Must be IPv6 only.
                ''',
                'source_address',
                'Cisco-IOS-XR-l2vpn-cfg', False, [
                    _MetaInfoClassMember('source-address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        Value of the Pseudowire source address.
                        Must be IPv6 only.
                        ''',
                        'source_address',
                        'Cisco-IOS-XR-l2vpn-cfg', False),
                    _MetaInfoClassMember('source-address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        Value of the Pseudowire source address.
                        Must be IPv6 only.
                        ''',
                        'source_address',
                        'Cisco-IOS-XR-l2vpn-cfg', False),
                ]),
            _MetaInfoClassMember('bandwidth', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Pseudowire Bandwidth
                ''',
                'bandwidth',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'neighbor',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.MplsStaticLabels' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.MplsStaticLabels', REFERENCE_CLASS,
            '''MPLS static labels''',
            False, 
            [
            _MetaInfoClassMember('local-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire local static label
                ''',
                'local_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('remote-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire remote static label
                ''',
                'remote_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mpls-static-labels',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires.BackupPseudowire.BackupMplsStaticLabels' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires.BackupPseudowire.BackupMplsStaticLabels', REFERENCE_CLASS,
            '''MPLS static labels''',
            False, 
            [
            _MetaInfoClassMember('local-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire local static label
                ''',
                'local_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('remote-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire remote static label
                ''',
                'remote_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'backup-mpls-static-labels',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires.BackupPseudowire' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires.BackupPseudowire', REFERENCE_LIST,
            '''Backup pseudowire for the cross connect''',
            False, 
            [
            _MetaInfoClassMember('neighbor', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Neighbor IP address
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pseudowire-id', ATTRIBUTE, 'int', 'Pseudowire-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Pseudowire ID
                ''',
                'pseudowire_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('backup-mpls-static-labels', REFERENCE_CLASS, 'BackupMplsStaticLabels', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires.BackupPseudowire.BackupMplsStaticLabels',
                [], [],
                '''                MPLS static labels
                ''',
                'backup_mpls_static_labels',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('backup-pw-class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                PW class template name to use for the
                backup PW
                ''',
                'backup_pw_class',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'backup-pseudowire',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires', REFERENCE_CLASS,
            '''List of pseudowires''',
            False, 
            [
            _MetaInfoClassMember('backup-pseudowire', REFERENCE_LIST, 'BackupPseudowire', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires.BackupPseudowire',
                [], [],
                '''                Backup pseudowire for the cross connect
                ''',
                'backup_pseudowire',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'backup-pseudowires',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes.L2tpRemoteCookie' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes.L2tpRemoteCookie', REFERENCE_CLASS,
            '''L2TP remote cookie''',
            False, 
            [
            _MetaInfoClassMember('size', REFERENCE_ENUM_CLASS, 'L2tpCookieSize', 'L2tp-cookie-size',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2tpCookieSize',
                [], [],
                '''                Remote cookie size
                ''',
                'size',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('lower-value', ATTRIBUTE, 'int', 'L2tp-cookie-value-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Lower remote cookie value
                ''',
                'lower_value',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('higher-value', ATTRIBUTE, 'int', 'L2tp-cookie-value-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Higher remote cookie value
                ''',
                'higher_value',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'l2tp-remote-cookie',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes.L2tpSecondaryLocalCookie' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes.L2tpSecondaryLocalCookie', REFERENCE_CLASS,
            '''L2TP secondary local cookie''',
            False, 
            [
            _MetaInfoClassMember('size', REFERENCE_ENUM_CLASS, 'L2tpCookieSize', 'L2tp-cookie-size',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2tpCookieSize',
                [], [],
                '''                Local cookie size
                ''',
                'size',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('lower-value', ATTRIBUTE, 'int', 'L2tp-cookie-value-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Lower local cookie value
                ''',
                'lower_value',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('higher-value', ATTRIBUTE, 'int', 'L2tp-cookie-value-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Higher local cookie value
                ''',
                'higher_value',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'l2tp-secondary-local-cookie',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes.L2tpLocalCookie' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes.L2tpLocalCookie', REFERENCE_CLASS,
            '''L2TP local cookie''',
            False, 
            [
            _MetaInfoClassMember('size', REFERENCE_ENUM_CLASS, 'L2tpCookieSize', 'L2tp-cookie-size',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2tpCookieSize',
                [], [],
                '''                Local cookie size
                ''',
                'size',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('lower-value', ATTRIBUTE, 'int', 'L2tp-cookie-value-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Lower local cookie value
                ''',
                'lower_value',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('higher-value', ATTRIBUTE, 'int', 'L2tp-cookie-value-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Higher local cookie value
                ''',
                'higher_value',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'l2tp-local-cookie',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes', REFERENCE_CLASS,
            '''L2TP Static Attributes''',
            False, 
            [
            _MetaInfoClassMember('l2tp-remote-cookie', REFERENCE_CLASS, 'L2tpRemoteCookie', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes.L2tpRemoteCookie',
                [], [],
                '''                L2TP remote cookie
                ''',
                'l2tp_remote_cookie',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2tp-secondary-local-cookie', REFERENCE_CLASS, 'L2tpSecondaryLocalCookie', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes.L2tpSecondaryLocalCookie',
                [], [],
                '''                L2TP secondary local cookie
                ''',
                'l2tp_secondary_local_cookie',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2tp-local-cookie', REFERENCE_CLASS, 'L2tpLocalCookie', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes.L2tpLocalCookie',
                [], [],
                '''                L2TP local cookie
                ''',
                'l2tp_local_cookie',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2tp-remote-session-id', ATTRIBUTE, 'int', 'L2tp-session-id-range',
                None, None,
                [('1', '65535')], [],
                '''                L2TP remote session ID
                ''',
                'l2tp_remote_session_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2tp-local-session-id', ATTRIBUTE, 'int', 'L2tp-session-id-range',
                None, None,
                [('1', '65535')], [],
                '''                L2TP local session ID
                ''',
                'l2tp_local_session_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'l2tp-static-attributes',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStatic' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStatic', REFERENCE_CLASS,
            '''Pseudowire L2TPv3 static configuration''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable pseudowire L2TPv3 static
                configuration
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'l2tp-static',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress', REFERENCE_LIST,
            '''keys: pseudowire-address''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                None, None,
                [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                '''                Pseudowire IPv6 address. A pseudowire
                can have only one address: IPv4 or IPv6
                ''',
                'pseudowire_address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('mpls-static-labels', REFERENCE_CLASS, 'MplsStaticLabels', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.MplsStaticLabels',
                [], [],
                '''                MPLS static labels
                ''',
                'mpls_static_labels',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('backup-pseudowires', REFERENCE_CLASS, 'BackupPseudowires', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires',
                [], [],
                '''                List of pseudowires
                ''',
                'backup_pseudowires',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2tp-static-attributes', REFERENCE_CLASS, 'L2tpStaticAttributes', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes',
                [], [],
                '''                L2TP Static Attributes
                ''',
                'l2tp_static_attributes',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2tp-static', REFERENCE_CLASS, 'L2tpStatic', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStatic',
                [], [],
                '''                Pseudowire L2TPv3 static configuration
                ''',
                'l2tp_static',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('tag-impose', ATTRIBUTE, 'int', 'Pseudowire-tag-range',
                None, None,
                [('1', '4094')], [],
                '''                Tag Impose vlan tagged mode
                ''',
                'tag_impose',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the pseudowire class
                ''',
                'class_',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('source-address', REFERENCE_UNION, 'str', 'inet:ip-address-no-zone',
                None, None,
                [], [],
                '''                Value of the Pseudowire source address.
                Must be IPv6 only.
                ''',
                'source_address',
                'Cisco-IOS-XR-l2vpn-cfg', False, [
                    _MetaInfoClassMember('source-address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                        None, None,
                        [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                        '''                        Value of the Pseudowire source address.
                        Must be IPv6 only.
                        ''',
                        'source_address',
                        'Cisco-IOS-XR-l2vpn-cfg', False),
                    _MetaInfoClassMember('source-address', ATTRIBUTE, 'str', 'inet:ipv6-address-no-zone',
                        None, None,
                        [], [b'((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(%[\\p{N}\\p{L}]+)?'],
                        '''                        Value of the Pseudowire source address.
                        Must be IPv6 only.
                        ''',
                        'source_address',
                        'Cisco-IOS-XR-l2vpn-cfg', False),
                ]),
            _MetaInfoClassMember('bandwidth', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Pseudowire Bandwidth
                ''',
                'bandwidth',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire', REFERENCE_LIST,
            '''Pseudowire configuration''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-id', ATTRIBUTE, 'int', 'Pseudowire-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Pseudowire ID
                ''',
                'pseudowire_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('neighbor', REFERENCE_LIST, 'Neighbor', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor',
                [], [],
                '''                keys: neighbor
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-address', REFERENCE_LIST, 'PseudowireAddress', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress',
                [], [],
                '''                keys: pseudowire-address
                ''',
                'pseudowire_address',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires', REFERENCE_CLASS,
            '''List of pseudowires''',
            False, 
            [
            _MetaInfoClassMember('pseudowire', REFERENCE_LIST, 'Pseudowire', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire',
                [], [],
                '''                Pseudowire configuration
                ''',
                'pseudowire',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowires',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.MonitorSessions.MonitorSession' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.MonitorSessions.MonitorSession', REFERENCE_LIST,
            '''Monitor session segment''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 64)], [],
                '''                Name of the monitor session
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable monitor session segment 
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'monitor-session',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.MonitorSessions' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.MonitorSessions', REFERENCE_CLASS,
            '''List of Monitor session segments''',
            False, 
            [
            _MetaInfoClassMember('monitor-session', REFERENCE_LIST, 'MonitorSession', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.MonitorSessions.MonitorSession',
                [], [],
                '''                Monitor session segment
                ''',
                'monitor_session',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'monitor-sessions',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireRouteds.PseudowireRouted' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireRouteds.PseudowireRouted', REFERENCE_LIST,
            '''Pseudowire configuration''',
            False, 
            [
            _MetaInfoClassMember('global-id', ATTRIBUTE, 'int', 'Pseudowire-gbl-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Target Global ID
                ''',
                'global_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('prefix', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Target Prefix
                ''',
                'prefix',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('acid', ATTRIBUTE, 'int', 'Pseudowire-acid-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Target AC ID
                ''',
                'acid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('sacid', ATTRIBUTE, 'int', 'Pseudowire-acid-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Source AC ID
                ''',
                'sacid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('tag-impose', ATTRIBUTE, 'int', 'Pseudowire-tag-range',
                None, None,
                [('1', '4094')], [],
                '''                Tag Impose vlan tagged mode
                ''',
                'tag_impose',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the pseudowire class
                ''',
                'class_',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-routed',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireRouteds' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireRouteds', REFERENCE_CLASS,
            '''List of pseudowire-routed''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-routed', REFERENCE_LIST, 'PseudowireRouted', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireRouteds.PseudowireRouted',
                [], [],
                '''                Pseudowire configuration
                ''',
                'pseudowire_routed',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-routeds',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.AttachmentCircuits.AttachmentCircuit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.AttachmentCircuits.AttachmentCircuit', REFERENCE_LIST,
            '''Attachment circuit interface''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Name of the attachment circuit interface
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable attachment circuit interface
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'attachment-circuit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.AttachmentCircuits' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.AttachmentCircuits', REFERENCE_CLASS,
            '''List of attachment circuits''',
            False, 
            [
            _MetaInfoClassMember('attachment-circuit', REFERENCE_LIST, 'AttachmentCircuit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.AttachmentCircuits.AttachmentCircuit',
                [], [],
                '''                Attachment circuit interface
                ''',
                'attachment_circuit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'attachment-circuits',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect', REFERENCE_LIST,
            '''Point to point xconnect''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 38)], [],
                '''                Name of the point to point xconnect
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('backup-attachment-circuits', REFERENCE_CLASS, 'BackupAttachmentCircuits', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.BackupAttachmentCircuits',
                [], [],
                '''                List of backup attachment circuits
                ''',
                'backup_attachment_circuits',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-evpns', REFERENCE_CLASS, 'PseudowireEvpns', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireEvpns',
                [], [],
                '''                List of EVPN Services
                ''',
                'pseudowire_evpns',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowires', REFERENCE_CLASS, 'Pseudowires', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires',
                [], [],
                '''                List of pseudowires
                ''',
                'pseudowires',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('monitor-sessions', REFERENCE_CLASS, 'MonitorSessions', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.MonitorSessions',
                [], [],
                '''                List of Monitor session segments
                ''',
                'monitor_sessions',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-routeds', REFERENCE_CLASS, 'PseudowireRouteds', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireRouteds',
                [], [],
                '''                List of pseudowire-routed
                ''',
                'pseudowire_routeds',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('attachment-circuits', REFERENCE_CLASS, 'AttachmentCircuits', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.AttachmentCircuits',
                [], [],
                '''                List of attachment circuits
                ''',
                'attachment_circuits',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('p2p-description', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 64)], [],
                '''                cross connect description Name
                ''',
                'p2p_description',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interworking', REFERENCE_ENUM_CLASS, 'Interworking', 'Interworking',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Interworking',
                [], [],
                '''                Interworking
                ''',
                'interworking',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'p2p-xconnect',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects', REFERENCE_CLASS,
            '''List of point to point xconnects''',
            False, 
            [
            _MetaInfoClassMember('p2p-xconnect', REFERENCE_LIST, 'P2pXconnect', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect',
                [], [],
                '''                Point to point xconnect
                ''',
                'p2p_xconnect',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'p2p-xconnects',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.RouteDistinguisher' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.RouteDistinguisher', REFERENCE_CLASS,
            '''Route Distinguisher''',
            False, 
            [
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'BgpRouteDistinguisher', 'Bgp-route-distinguisher',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteDistinguisher',
                [], [],
                '''                Router distinguisher type
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Rdas-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Two byte or 4 byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Rdas-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS:nn (hex or decimal format)
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('addr-index', ATTRIBUTE, 'int', 'Rd-addr-index',
                None, None,
                [('0', '65535')], [],
                '''                Addr index
                ''',
                'addr_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'route-distinguisher',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRoutePolicy' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRoutePolicy', REFERENCE_CLASS,
            '''Route policy''',
            False, 
            [
            _MetaInfoClassMember('export', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Export route policy
                ''',
                'export',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mp2mp-route-policy',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget.TwoByteAsOrFourByteAs' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget.TwoByteAsOrFourByteAs', REFERENCE_LIST,
            '''two byte as or four byte as''',
            False, 
            [
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Rdas-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Two byte or 4 byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Rdas-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS:nn (hex or decimal format)
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'two-byte-as-or-four-byte-as',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_when=True,
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget.Ipv4Address' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget.Ipv4Address', REFERENCE_LIST,
            '''ipv4 address''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('addr-index', ATTRIBUTE, 'int', 'Rd-addr-index',
                None, None,
                [('0', '65535')], [],
                '''                Addr index
                ''',
                'addr_index',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'ipv4-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_when=True,
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget', REFERENCE_LIST,
            '''Name of the Route Target''',
            False, 
            [
            _MetaInfoClassMember('role', REFERENCE_ENUM_CLASS, 'BgpRouteTargetRole', 'Bgp-route-target-role',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetRole',
                [], [],
                '''                Role of the router target type
                ''',
                'role',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('format', REFERENCE_ENUM_CLASS, 'BgpRouteTargetFormat', 'Bgp-route-target-format',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetFormat',
                [], [],
                '''                Format of the route target
                ''',
                'format',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('two-byte-as-or-four-byte-as', REFERENCE_LIST, 'TwoByteAsOrFourByteAs', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget.TwoByteAsOrFourByteAs',
                [], [],
                '''                two byte as or four byte as
                ''',
                'two_byte_as_or_four_byte_as',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('ipv4-address', REFERENCE_LIST, 'Ipv4Address', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget.Ipv4Address',
                [], [],
                '''                ipv4 address
                ''',
                'ipv4_address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mp2mp-route-target',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets', REFERENCE_CLASS,
            '''Route Target''',
            False, 
            [
            _MetaInfoClassMember('mp2mp-route-target', REFERENCE_LIST, 'Mp2mpRouteTarget', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget',
                [], [],
                '''                Name of the Route Target
                ''',
                'mp2mp_route_target',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mp2mp-route-targets',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.FlowLabelLoadBalance' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.FlowLabelLoadBalance', REFERENCE_CLASS,
            '''Enable Flow Label based load balancing''',
            False, 
            [
            _MetaInfoClassMember('flow-label', REFERENCE_ENUM_CLASS, 'FlowLabelLoadBalance', 'Flow-label-load-balance',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'FlowLabelLoadBalance',
                [], [],
                '''                Flow Label load balance type
                ''',
                'flow_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('static', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Static Flow Label
                ''',
                'static',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'flow-label-load-balance',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid.RemoteCeidAttachmentCircuits.RemoteCeidAttachmentCircuit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid.RemoteCeidAttachmentCircuits.RemoteCeidAttachmentCircuit', REFERENCE_LIST,
            '''AC And Remote Customer Edge Identifier''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                The name of the Attachment Circuit
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('remote-ce-id', ATTRIBUTE, 'int', 'Ce-id-range',
                None, None,
                [('1', '16384')], [],
                '''                Remote Customer Edge Identifier
                ''',
                'remote_ce_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'remote-ceid-attachment-circuit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid.RemoteCeidAttachmentCircuits' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid.RemoteCeidAttachmentCircuits', REFERENCE_CLASS,
            '''AC And Remote Customer Edge Identifier
Table''',
            False, 
            [
            _MetaInfoClassMember('remote-ceid-attachment-circuit', REFERENCE_LIST, 'RemoteCeidAttachmentCircuit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid.RemoteCeidAttachmentCircuits.RemoteCeidAttachmentCircuit',
                [], [],
                '''                AC And Remote Customer Edge Identifier
                ''',
                'remote_ceid_attachment_circuit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'remote-ceid-attachment-circuits',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid', REFERENCE_LIST,
            '''Local Customer Edge Identifier ''',
            False, 
            [
            _MetaInfoClassMember('ce-id', ATTRIBUTE, 'int', 'Ce-id-range',
                None, None,
                [('1', '16384')], [],
                '''                Local Customer Edge Identifier
                ''',
                'ce_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('remote-ceid-attachment-circuits', REFERENCE_CLASS, 'RemoteCeidAttachmentCircuits', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid.RemoteCeidAttachmentCircuits',
                [], [],
                '''                AC And Remote Customer Edge Identifier
                Table
                ''',
                'remote_ceid_attachment_circuits',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'ceid',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids', REFERENCE_CLASS,
            '''Local Customer Edge Identifier Table''',
            False, 
            [
            _MetaInfoClassMember('ceid', REFERENCE_LIST, 'Ceid', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid',
                [], [],
                '''                Local Customer Edge Identifier 
                ''',
                'ceid',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'ceids',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol', REFERENCE_CLASS,
            '''signaling protocol in this MP2MP''',
            False, 
            [
            _MetaInfoClassMember('flow-label-load-balance', REFERENCE_CLASS, 'FlowLabelLoadBalance', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.FlowLabelLoadBalance',
                [], [],
                '''                Enable Flow Label based load balancing
                ''',
                'flow_label_load_balance',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('ceids', REFERENCE_CLASS, 'Ceids', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids',
                [], [],
                '''                Local Customer Edge Identifier Table
                ''',
                'ceids',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('ce-range', ATTRIBUTE, 'int', 'Cedge-range',
                None, None,
                [('11', '100')], [],
                '''                Local Customer Edge Identifier
                ''',
                'ce_range',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable signaling protocol
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mp2mp-signaling-protocol',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery', REFERENCE_CLASS,
            '''auto-discovery in this MP2MP''',
            False, 
            [
            _MetaInfoClassMember('route-distinguisher', REFERENCE_CLASS, 'RouteDistinguisher', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.RouteDistinguisher',
                [], [],
                '''                Route Distinguisher
                ''',
                'route_distinguisher',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mp2mp-route-policy', REFERENCE_CLASS, 'Mp2mpRoutePolicy', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRoutePolicy',
                [], [],
                '''                Route policy
                ''',
                'mp2mp_route_policy',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mp2mp-route-targets', REFERENCE_CLASS, 'Mp2mpRouteTargets', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets',
                [], [],
                '''                Route Target
                ''',
                'mp2mp_route_targets',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mp2mp-signaling-protocol', REFERENCE_CLASS, 'Mp2mpSignalingProtocol', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol',
                [], [],
                '''                signaling protocol in this MP2MP
                ''',
                'mp2mp_signaling_protocol',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable auto-discovery
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mp2mp-auto-discovery',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect', REFERENCE_LIST,
            '''Multi point to multi point xconnect''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 26)], [],
                '''                Name of the multi point to multi point
                xconnect
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('mp2mp-auto-discovery', REFERENCE_CLASS, 'Mp2mpAutoDiscovery', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery',
                [], [],
                '''                auto-discovery in this MP2MP
                ''',
                'mp2mp_auto_discovery',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mp2mpmtu', ATTRIBUTE, 'int', 'L2vpn-mtu-range',
                None, None,
                [('64', '65535')], [],
                '''                Maximum transmission unit for this MP2MP
                VPWS instance
                ''',
                'mp2mpmtu',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mp2mp-control-word', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable control word
                ''',
                'mp2mp_control_word',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mp2mpl2-encapsulation', REFERENCE_ENUM_CLASS, 'L2Encapsulation', 'L2-encapsulation',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2Encapsulation',
                [], [],
                '''                Configure Layer 2 Encapsulation
                ''',
                'mp2mpl2_encapsulation',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mp2mp-interworking', REFERENCE_ENUM_CLASS, 'Interworking', 'Interworking',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Interworking',
                [], [],
                '''                Interworking
                ''',
                'mp2mp_interworking',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mp2mp-shutdown', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                shutdown this MP2MP VPWS instance
                ''',
                'mp2mp_shutdown',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mp2mpvpn-id', ATTRIBUTE, 'int', 'Vpnid-range',
                None, None,
                [('1', '4294967295')], [],
                '''                VPN Identifier
                ''',
                'mp2mpvpn_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mp2mp-xconnect',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects', REFERENCE_CLASS,
            '''List of multi point to multi point xconnects''',
            False, 
            [
            _MetaInfoClassMember('mp2mp-xconnect', REFERENCE_LIST, 'Mp2mpXconnect', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect',
                [], [],
                '''                Multi point to multi point xconnect
                ''',
                'mp2mp_xconnect',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mp2mp-xconnects',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups.XconnectGroup' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups.XconnectGroup', REFERENCE_LIST,
            '''Xconnect group''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the xconnect group
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('p2p-xconnects', REFERENCE_CLASS, 'P2pXconnects', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects',
                [], [],
                '''                List of point to point xconnects
                ''',
                'p2p_xconnects',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mp2mp-xconnects', REFERENCE_CLASS, 'Mp2mpXconnects', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects',
                [], [],
                '''                List of multi point to multi point xconnects
                ''',
                'mp2mp_xconnects',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'xconnect-group',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.XconnectGroups' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.XconnectGroups', REFERENCE_CLASS,
            '''List of xconnect groups''',
            False, 
            [
            _MetaInfoClassMember('xconnect-group', REFERENCE_LIST, 'XconnectGroup', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups.XconnectGroup',
                [], [],
                '''                Xconnect group
                ''',
                'xconnect_group',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'xconnect-groups',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl.StormControlUnit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl.StormControlUnit', REFERENCE_CLASS,
            '''Specify units for Storm Control Configuration''',
            False, 
            [
            _MetaInfoClassMember('kbits-per-sec', ATTRIBUTE, 'int', 'Storm-control-kbps-range',
                None, None,
                [('64', '1280000')], [],
                '''                Kilobits Per Second, PktsPerSec and KbitsPerSec
                cannot be configured together
                ''',
                'kbits_per_sec',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pkts-per-sec', ATTRIBUTE, 'int', 'Storm-control-pps-range',
                None, None,
                [('1', '160000')], [],
                '''                Packets Per Second, PktsPerSec and KbitsPerSec
                cannot be configured together
                ''',
                'pkts_per_sec',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'storm-control-unit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl', REFERENCE_LIST,
            '''Storm Control Type''',
            False, 
            [
            _MetaInfoClassMember('sctype', REFERENCE_ENUM_CLASS, 'StormControl', 'Storm-control',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'StormControl',
                [], [],
                '''                Storm Control Type
                ''',
                'sctype',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('storm-control-unit', REFERENCE_CLASS, 'StormControlUnit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl.StormControlUnit',
                [], [],
                '''                Specify units for Storm Control Configuration
                ''',
                'storm_control_unit',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-storm-control',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls', REFERENCE_CLASS,
            '''Storm Control''',
            False, 
            [
            _MetaInfoClassMember('bd-storm-control', REFERENCE_LIST, 'BdStormControl', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl',
                [], [],
                '''                Storm Control Type
                ''',
                'bd_storm_control',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-storm-controls',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses.MemberVniStaticMacAddress' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses.MemberVniStaticMacAddress', REFERENCE_LIST,
            '''Static Mac Address Configuration''',
            False, 
            [
            _MetaInfoClassMember('mac-address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'mac_address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('next-hop-ip', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Enable Static Mac Address Configuration
                ''',
                'next_hop_ip',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'member-vni-static-mac-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses', REFERENCE_CLASS,
            '''Static Mac Address Table''',
            False, 
            [
            _MetaInfoClassMember('member-vni-static-mac-address', REFERENCE_LIST, 'MemberVniStaticMacAddress', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses.MemberVniStaticMacAddress',
                [], [],
                '''                Static Mac Address Configuration
                ''',
                'member_vni_static_mac_address',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'member-vni-static-mac-addresses',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni', REFERENCE_LIST,
            '''Bridge Domain Member VxLAN Network Identifier''',
            False, 
            [
            _MetaInfoClassMember('vni', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '16777215')], [],
                '''                VxLAN Network Identifier number
                ''',
                'vni',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('member-vni-static-mac-addresses', REFERENCE_CLASS, 'MemberVniStaticMacAddresses', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses',
                [], [],
                '''                Static Mac Address Table
                ''',
                'member_vni_static_mac_addresses',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'member-vni',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis', REFERENCE_CLASS,
            '''Bridge Domain VxLAN Network Identifier Table''',
            False, 
            [
            _MetaInfoClassMember('member-vni', REFERENCE_LIST, 'MemberVni', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni',
                [], [],
                '''                Bridge Domain Member VxLAN Network Identifier
                ''',
                'member_vni',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'member-vnis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacLimit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacLimit', REFERENCE_CLASS,
            '''MAC-Limit configuration commands''',
            False, 
            [
            _MetaInfoClassMember('bd-mac-limit-action', REFERENCE_ENUM_CLASS, 'MacLimitAction', 'Mac-limit-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLimitAction',
                [], [],
                '''                MAC address limit enforcement action
                ''',
                'bd_mac_limit_action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-limit-notif', REFERENCE_ENUM_CLASS, 'MacNotification', 'Mac-notification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacNotification',
                [], [],
                '''                Mac Address Limit Notification
                ''',
                'bd_mac_limit_notif',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-limit-max', ATTRIBUTE, 'int', 'Mac-limit-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Number of MAC addresses after which MAC
                limit action is taken
                ''',
                'bd_mac_limit_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-mac-limit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters.BdMacFilter' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters.BdMacFilter', REFERENCE_LIST,
            '''Static MAC address''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('drop', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                MAC address for filtering
                ''',
                'drop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-mac-filter',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters', REFERENCE_CLASS,
            '''Filter Mac Address''',
            False, 
            [
            _MetaInfoClassMember('bd-mac-filter', REFERENCE_LIST, 'BdMacFilter', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters.BdMacFilter',
                [], [],
                '''                Static MAC address
                ''',
                'bd_mac_filter',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-mac-filters',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.MacSecure' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.MacSecure', REFERENCE_CLASS,
            '''MAC Secure''',
            False, 
            [
            _MetaInfoClassMember('logging', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                MAC Secure Logging
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable MAC Secure
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('threshold', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                MAC Secure Threshold
                ''',
                'threshold',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('action', REFERENCE_ENUM_CLASS, 'MacSecureAction', 'Mac-secure-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacSecureAction',
                [], [],
                '''                MAC secure enforcement action
                ''',
                'action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('shutdown-recovery-timer', ATTRIBUTE, 'int', 'Mac-secure-shutdown-recovery-time-range',
                None, None,
                [('10', '3600')], [],
                '''                MAC Secure Shutdown Recovery Timer
                ''',
                'shutdown_recovery_timer',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mac-secure',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacAging' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacAging', REFERENCE_CLASS,
            '''MAC-Aging configuration commands''',
            False, 
            [
            _MetaInfoClassMember('bd-mac-aging-type', REFERENCE_ENUM_CLASS, 'MacAging', 'Mac-aging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacAging',
                [], [],
                '''                MAC address aging type
                ''',
                'bd_mac_aging_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-aging-time', ATTRIBUTE, 'int', 'Mac-aging-range',
                None, None,
                [('300', '30000')], [],
                '''                Mac Aging Time
                ''',
                'bd_mac_aging_time',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-mac-aging',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac', REFERENCE_CLASS,
            '''MAC configuration commands''',
            False, 
            [
            _MetaInfoClassMember('bd-mac-limit', REFERENCE_CLASS, 'BdMacLimit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacLimit',
                [], [],
                '''                MAC-Limit configuration commands
                ''',
                'bd_mac_limit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-filters', REFERENCE_CLASS, 'BdMacFilters', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters',
                [], [],
                '''                Filter Mac Address
                ''',
                'bd_mac_filters',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mac-secure', REFERENCE_CLASS, 'MacSecure', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.MacSecure',
                [], [],
                '''                MAC Secure
                ''',
                'mac_secure',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-aging', REFERENCE_CLASS, 'BdMacAging', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacAging',
                [], [],
                '''                MAC-Aging configuration commands
                ''',
                'bd_mac_aging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-withdraw-relay', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Mac withdraw sent from access PW to access PW
                ''',
                'bd_mac_withdraw_relay',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-withdraw-access-pw-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                MAC withdraw on Access PW
                ''',
                'bd_mac_withdraw_access_pw_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-port-down-flush', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable MAC Flush when Port goes Down
                ''',
                'bd_mac_port_down_flush',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-withdraw', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable Mac Withdraw
                ''',
                'bd_mac_withdraw',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-withdraw-behavior', REFERENCE_ENUM_CLASS, 'MacWithdrawBehavior', 'Mac-withdraw-behavior',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacWithdrawBehavior',
                [], [],
                '''                MAC withdraw sent on bridge port down
                ''',
                'bd_mac_withdraw_behavior',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-learn', REFERENCE_ENUM_CLASS, 'BdmacLearn', 'Bdmac-learn',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BdmacLearn',
                [], [],
                '''                Mac Learning Type
                ''',
                'bd_mac_learn',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-mac',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.NvSatellite' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.NvSatellite', REFERENCE_CLASS,
            '''nV Satellite''',
            False, 
            [
            _MetaInfoClassMember('offload-ipv4-multicast-enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IPv4 Multicast Offload to Satellite
                Nodes
                ''',
                'offload_ipv4_multicast_enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable nV Satellite Settings
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'nv-satellite',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeSplitHorizonGroup' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeSplitHorizonGroup', REFERENCE_CLASS,
            '''Split Horizon Group''',
            False, 
            [
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable split horizon group
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge-split-horizon-group',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings.PbbStaticMacMapping' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings.PbbStaticMacMapping', REFERENCE_LIST,
            '''PBB Static Mac Address Mapping
Configuration''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pbb-static-mac-mapping-bmac', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static backbone MAC address to map with
                ''',
                'pbb_static_mac_mapping_bmac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-static-mac-mapping',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings', REFERENCE_CLASS,
            '''PBB Static Mac Address Mapping Table''',
            False, 
            [
            _MetaInfoClassMember('pbb-static-mac-mapping', REFERENCE_LIST, 'PbbStaticMacMapping', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings.PbbStaticMacMapping',
                [], [],
                '''                PBB Static Mac Address Mapping
                Configuration
                ''',
                'pbb_static_mac_mapping',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-static-mac-mappings',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeDhcpProfile' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeDhcpProfile', REFERENCE_CLASS,
            '''Attach a DHCP profile''',
            False, 
            [
            _MetaInfoClassMember('profile-id', REFERENCE_ENUM_CLASS, 'InterfaceProfile', 'Interface-profile',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceProfile',
                [], [],
                '''                Set the snooping profile
                ''',
                'profile_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dhcp-snooping-id', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Disable DHCP snooping
                ''',
                'dhcp_snooping_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge-dhcp-profile',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacLimit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacLimit', REFERENCE_CLASS,
            '''MAC-Limit configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pbb-edge-mac-limit-action', REFERENCE_ENUM_CLASS, 'MacLimitAction', 'Mac-limit-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLimitAction',
                [], [],
                '''                MAC address limit enforcement action
                ''',
                'pbb_edge_mac_limit_action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac-limit-max', ATTRIBUTE, 'int', 'Mac-limit-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Number of MAC addresses after which MAC
                limit action is taken
                ''',
                'pbb_edge_mac_limit_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac-limit-notif', REFERENCE_ENUM_CLASS, 'MacNotification', 'Mac-notification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacNotification',
                [], [],
                '''                MAC address limit notification action
                ''',
                'pbb_edge_mac_limit_notif',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge-mac-limit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacAging' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacAging', REFERENCE_CLASS,
            '''MAC-Aging configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pbb-edge-mac-aging-type', REFERENCE_ENUM_CLASS, 'MacAging', 'Mac-aging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacAging',
                [], [],
                '''                MAC address aging type
                ''',
                'pbb_edge_mac_aging_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac-aging-time', ATTRIBUTE, 'int', 'Mac-aging-range',
                None, None,
                [('300', '30000')], [],
                '''                Mac Aging Time
                ''',
                'pbb_edge_mac_aging_time',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge-mac-aging',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacSecure' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacSecure', REFERENCE_CLASS,
            '''MAC Secure''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable MAC Secure
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('accept-shutdown', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Accept Virtual instance port to be
                shutdown on mac violation
                ''',
                'accept_shutdown',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                MAC Secure Logging
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable MAC Secure
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('action', REFERENCE_ENUM_CLASS, 'MacSecureAction', 'Mac-secure-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacSecureAction',
                [], [],
                '''                MAC secure enforcement action
                ''',
                'action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge-mac-secure',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac', REFERENCE_CLASS,
            '''MAC configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pbb-edge-mac-limit', REFERENCE_CLASS, 'PbbEdgeMacLimit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacLimit',
                [], [],
                '''                MAC-Limit configuration commands
                ''',
                'pbb_edge_mac_limit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac-aging', REFERENCE_CLASS, 'PbbEdgeMacAging', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacAging',
                [], [],
                '''                MAC-Aging configuration commands
                ''',
                'pbb_edge_mac_aging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac-secure', REFERENCE_CLASS, 'PbbEdgeMacSecure', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacSecure',
                [], [],
                '''                MAC Secure
                ''',
                'pbb_edge_mac_secure',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac-learning', REFERENCE_ENUM_CLASS, 'MacLearn', 'Mac-learn',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLearn',
                [], [],
                '''                Enable Mac Learning
                ''',
                'pbb_edge_mac_learning',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge-mac',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge', REFERENCE_LIST,
            '''Configure BD as PBB Edge with ISID and
associated PBB Core BD''',
            False, 
            [
            _MetaInfoClassMember('isid', ATTRIBUTE, 'int', 'Pbbisid-range',
                None, None,
                [('256', '16777214')], [],
                '''                ISID
                ''',
                'isid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('core-bd-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 27)], [],
                '''                Core BD Name
                ''',
                'core_bd_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pbb-edge-split-horizon-group', REFERENCE_CLASS, 'PbbEdgeSplitHorizonGroup', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeSplitHorizonGroup',
                [], [],
                '''                Split Horizon Group
                ''',
                'pbb_edge_split_horizon_group',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-static-mac-mappings', REFERENCE_CLASS, 'PbbStaticMacMappings', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings',
                [], [],
                '''                PBB Static Mac Address Mapping Table
                ''',
                'pbb_static_mac_mappings',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-dhcp-profile', REFERENCE_CLASS, 'PbbEdgeDhcpProfile', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeDhcpProfile',
                [], [],
                '''                Attach a DHCP profile
                ''',
                'pbb_edge_dhcp_profile',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac', REFERENCE_CLASS, 'PbbEdgeMac', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac',
                [], [],
                '''                MAC configuration commands
                ''',
                'pbb_edge_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-igmp-profile', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a IGMP Snooping profile
                ''',
                'pbb_edge_igmp_profile',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('unknown-unicast-bmac', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Configure Unknown Unicast BMAC address for
                PBB Edge Port
                ''',
                'unknown_unicast_bmac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges', REFERENCE_CLASS,
            '''PBB Edge''',
            False, 
            [
            _MetaInfoClassMember('pbb-edge', REFERENCE_LIST, 'PbbEdge', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge',
                [], [],
                '''                Configure BD as PBB Edge with ISID and
                associated PBB Core BD
                ''',
                'pbb_edge',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edges',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacAging' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacAging', REFERENCE_CLASS,
            '''MAC-Aging configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pbb-core-mac-aging-type', REFERENCE_ENUM_CLASS, 'MacAging', 'Mac-aging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacAging',
                [], [],
                '''                MAC address aging type
                ''',
                'pbb_core_mac_aging_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-mac-aging-time', ATTRIBUTE, 'int', 'Mac-aging-range',
                None, None,
                [('300', '30000')], [],
                '''                Mac Aging Time
                ''',
                'pbb_core_mac_aging_time',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core-mac-aging',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacLimit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacLimit', REFERENCE_CLASS,
            '''MAC-Limit configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pbb-core-mac-limit-max', ATTRIBUTE, 'int', 'Mac-limit-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Number of MAC addresses after which MAC
                limit action is taken
                ''',
                'pbb_core_mac_limit_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-mac-limit-notif', REFERENCE_ENUM_CLASS, 'MacNotification', 'Mac-notification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacNotification',
                [], [],
                '''                MAC address limit notification action
                ''',
                'pbb_core_mac_limit_notif',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-mac-limit-action', REFERENCE_ENUM_CLASS, 'MacLimitAction', 'Mac-limit-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLimitAction',
                [], [],
                '''                MAC address limit enforcement action
                ''',
                'pbb_core_mac_limit_action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core-mac-limit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac', REFERENCE_CLASS,
            '''MAC configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pbb-core-mac-aging', REFERENCE_CLASS, 'PbbCoreMacAging', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacAging',
                [], [],
                '''                MAC-Aging configuration commands
                ''',
                'pbb_core_mac_aging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-mac-limit', REFERENCE_CLASS, 'PbbCoreMacLimit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacLimit',
                [], [],
                '''                MAC-Limit configuration commands
                ''',
                'pbb_core_mac_limit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-mac-learning', REFERENCE_ENUM_CLASS, 'MacLearn', 'Mac-learn',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLearn',
                [], [],
                '''                Enable Mac Learning
                ''',
                'pbb_core_mac_learning',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core-mac',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis.PbbCoreEvi' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis.PbbCoreEvi', REFERENCE_LIST,
            '''PBB Core EVI''',
            False, 
            [
            _MetaInfoClassMember('eviid', ATTRIBUTE, 'int', 'Vpnid-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Ethernet VPN ID
                ''',
                'eviid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core-evi',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis', REFERENCE_CLASS,
            '''PBB Core EVI Table''',
            False, 
            [
            _MetaInfoClassMember('pbb-core-evi', REFERENCE_LIST, 'PbbCoreEvi', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis.PbbCoreEvi',
                [], [],
                '''                PBB Core EVI
                ''',
                'pbb_core_evi',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core-evis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreDhcpProfile' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreDhcpProfile', REFERENCE_CLASS,
            '''Attach a DHCP profile''',
            False, 
            [
            _MetaInfoClassMember('profile-id', REFERENCE_ENUM_CLASS, 'InterfaceProfile', 'Interface-profile',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceProfile',
                [], [],
                '''                Set the snooping profile
                ''',
                'profile_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dhcp-snooping-id', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Disable DHCP snooping
                ''',
                'dhcp_snooping_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core-dhcp-profile',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore', REFERENCE_CLASS,
            '''PBB Core''',
            False, 
            [
            _MetaInfoClassMember('pbb-core-mac', REFERENCE_CLASS, 'PbbCoreMac', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac',
                [], [],
                '''                MAC configuration commands
                ''',
                'pbb_core_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-evis', REFERENCE_CLASS, 'PbbCoreEvis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis',
                [], [],
                '''                PBB Core EVI Table
                ''',
                'pbb_core_evis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-dhcp-profile', REFERENCE_CLASS, 'PbbCoreDhcpProfile', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreDhcpProfile',
                [], [],
                '''                Attach a DHCP profile
                ''',
                'pbb_core_dhcp_profile',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-mmrp-flood-optimization', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enabling MMRP PBB-VPLS Flood Optimization
                ''',
                'pbb_core_mmrp_flood_optimization',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-id', ATTRIBUTE, 'int', 'Pbbvid-range',
                None, None,
                [('1', '4094')], [],
                '''                VLAN ID to push
                ''',
                'vlan_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-igmp-profile', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a IGMP Snooping profile
                ''',
                'pbb_core_igmp_profile',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Bridge Domain PBB Core Configuration
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb', REFERENCE_CLASS,
            '''Bridge Domain PBB''',
            False, 
            [
            _MetaInfoClassMember('pbb-edges', REFERENCE_CLASS, 'PbbEdges', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges',
                [], [],
                '''                PBB Edge
                ''',
                'pbb_edges',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core', REFERENCE_CLASS, 'PbbCore', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore',
                [], [],
                '''                PBB Core
                ''',
                'pbb_core',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-pbb',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainEvis.BridgeDomainEvi' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainEvis.BridgeDomainEvi', REFERENCE_LIST,
            '''Bridge Domain MPLS EVPN''',
            False, 
            [
            _MetaInfoClassMember('vpn-id', ATTRIBUTE, 'int', 'Evpnvpnid-range',
                None, None,
                [('1', '65534')], [],
                '''                MPLS Ethernet VPN-ID
                ''',
                'vpn_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-evi',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainEvis' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainEvis', REFERENCE_CLASS,
            '''Bridge Domain EVI Table''',
            False, 
            [
            _MetaInfoClassMember('bridge-domain-evi', REFERENCE_LIST, 'BridgeDomainEvi', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainEvis.BridgeDomainEvi',
                [], [],
                '''                Bridge Domain MPLS EVPN
                ''',
                'bridge_domain_evi',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-evis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses.AccessVfiPseudowireStaticMacAddress' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses.AccessVfiPseudowireStaticMacAddress', REFERENCE_LIST,
            '''Static Mac Address Configuration''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'access-vfi-pseudowire-static-mac-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses', REFERENCE_CLASS,
            '''Static Mac Address Table''',
            False, 
            [
            _MetaInfoClassMember('access-vfi-pseudowire-static-mac-address', REFERENCE_LIST, 'AccessVfiPseudowireStaticMacAddress', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses.AccessVfiPseudowireStaticMacAddress',
                [], [],
                '''                Static Mac Address Configuration
                ''',
                'access_vfi_pseudowire_static_mac_address',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'access-vfi-pseudowire-static-mac-addresses',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire', REFERENCE_LIST,
            '''Pseudowire configuration''',
            False, 
            [
            _MetaInfoClassMember('neighbor', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Neighbor IP address
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pseudowire-id', ATTRIBUTE, 'int', 'Pseudowire-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Pseudowire ID
                ''',
                'pseudowire_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('access-vfi-pseudowire-static-mac-addresses', REFERENCE_CLASS, 'AccessVfiPseudowireStaticMacAddresses', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses',
                [], [],
                '''                Static Mac Address Table
                ''',
                'access_vfi_pseudowire_static_mac_addresses',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('access-vfi-pw-class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Pseudowire class template name to use for
                this pseudowire
                ''',
                'access_vfi_pw_class',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'access-vfi-pseudowire',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires', REFERENCE_CLASS,
            '''List of pseudowires''',
            False, 
            [
            _MetaInfoClassMember('access-vfi-pseudowire', REFERENCE_LIST, 'AccessVfiPseudowire', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire',
                [], [],
                '''                Pseudowire configuration
                ''',
                'access_vfi_pseudowire',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'access-vfi-pseudowires',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi', REFERENCE_LIST,
            '''Name of the Acess Virtual Forwarding
Interface''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the AccessVirtual Forwarding
                Interface
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('access-vfi-pseudowires', REFERENCE_CLASS, 'AccessVfiPseudowires', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires',
                [], [],
                '''                List of pseudowires
                ''',
                'access_vfi_pseudowires',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('access-vfi-shutdown', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                shutdown the AccessVfi
                ''',
                'access_vfi_shutdown',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'access-vfi',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis', REFERENCE_CLASS,
            '''Specify the access virtual forwarding
interface name''',
            False, 
            [
            _MetaInfoClassMember('access-vfi', REFERENCE_LIST, 'AccessVfi', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi',
                [], [],
                '''                Name of the Acess Virtual Forwarding
                Interface
                ''',
                'access_vfi',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'access-vfis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai.PseudowireDaiAddressValidation' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai.PseudowireDaiAddressValidation', REFERENCE_CLASS,
            '''Address Validation''',
            False, 
            [
            _MetaInfoClassMember('ipv4-verification', REFERENCE_ENUM_CLASS, 'L2vpnVerification', 'L2vpn-verification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnVerification',
                [], [],
                '''                IPv4 Verification
                ''',
                'ipv4_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('destination-mac-verification', REFERENCE_ENUM_CLASS, 'L2vpnVerification', 'L2vpn-verification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnVerification',
                [], [],
                '''                Destination MAC Verification
                ''',
                'destination_mac_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('source-mac-verification', REFERENCE_ENUM_CLASS, 'L2vpnVerification', 'L2vpn-verification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnVerification',
                [], [],
                '''                Source MAC Verification
                ''',
                'source_mac_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-dai-address-validation',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai', REFERENCE_CLASS,
            '''Access Pseudowire Dynamic ARP Inspection''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-dai-address-validation', REFERENCE_CLASS, 'PseudowireDaiAddressValidation', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai.PseudowireDaiAddressValidation',
                [], [],
                '''                Address Validation
                ''',
                'pseudowire_dai_address_validation',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                Logging Type
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable Dynamic ARP Inspection
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Access Pseudowire Dynamic ARP
                Inspection
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-dai',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType.StormControlUnit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType.StormControlUnit', REFERENCE_CLASS,
            '''Specify units for Storm Control Configuration''',
            False, 
            [
            _MetaInfoClassMember('kbits-per-sec', ATTRIBUTE, 'int', 'Storm-control-kbps-range',
                None, None,
                [('64', '1280000')], [],
                '''                Kilobits Per Second, PktsPerSec and KbitsPerSec
                cannot be configured together
                ''',
                'kbits_per_sec',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pkts-per-sec', ATTRIBUTE, 'int', 'Storm-control-pps-range',
                None, None,
                [('1', '160000')], [],
                '''                Packets Per Second, PktsPerSec and KbitsPerSec
                cannot be configured together
                ''',
                'pkts_per_sec',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'storm-control-unit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType', REFERENCE_LIST,
            '''Storm Control Type''',
            False, 
            [
            _MetaInfoClassMember('sctype', REFERENCE_ENUM_CLASS, 'StormControl', 'Storm-control',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'StormControl',
                [], [],
                '''                Storm Control Type
                ''',
                'sctype',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('storm-control-unit', REFERENCE_CLASS, 'StormControlUnit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType.StormControlUnit',
                [], [],
                '''                Specify units for Storm Control Configuration
                ''',
                'storm_control_unit',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bdpw-storm-control-type',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes', REFERENCE_CLASS,
            '''Storm Control''',
            False, 
            [
            _MetaInfoClassMember('bdpw-storm-control-type', REFERENCE_LIST, 'BdpwStormControlType', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType',
                [], [],
                '''                Storm Control Type
                ''',
                'bdpw_storm_control_type',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bdpw-storm-control-types',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireProfile' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireProfile', REFERENCE_CLASS,
            '''Attach a DHCP profile''',
            False, 
            [
            _MetaInfoClassMember('profile-id', REFERENCE_ENUM_CLASS, 'InterfaceProfile', 'Interface-profile',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceProfile',
                [], [],
                '''                Set the snooping profile
                ''',
                'profile_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dhcp-snooping-id', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Disable DHCP snooping
                ''',
                'dhcp_snooping_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-profile',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses.BdPwStaticMacAddress' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses.BdPwStaticMacAddress', REFERENCE_LIST,
            '''Static Mac Address Configuration''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pw-static-mac-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses', REFERENCE_CLASS,
            '''Static Mac Address Table''',
            False, 
            [
            _MetaInfoClassMember('bd-pw-static-mac-address', REFERENCE_LIST, 'BdPwStaticMacAddress', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses.BdPwStaticMacAddress',
                [], [],
                '''                Static Mac Address Configuration
                ''',
                'bd_pw_static_mac_address',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pw-static-mac-addresses',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireIpSourceGuard' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireIpSourceGuard', REFERENCE_CLASS,
            '''IP Source Guard''',
            False, 
            [
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                Logging Type
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable Dynamic IP source guard
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IP Source Guard
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-ip-source-guard',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacSecure' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacSecure', REFERENCE_CLASS,
            '''MAC Secure''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable MAC Secure
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                MAC Secure Logging
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable MAC Secure
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('action', REFERENCE_ENUM_CLASS, 'MacSecureAction', 'Mac-secure-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacSecureAction',
                [], [],
                '''                MAC secure enforcement action
                ''',
                'action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('shutdown-recovery-timer', ATTRIBUTE, 'int', 'Mac-secure-shutdown-recovery-time-range',
                None, None,
                [('10', '3600')], [],
                '''                MAC Secure Shutdown Recovery Timer
                ''',
                'shutdown_recovery_timer',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-mac-secure',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacAging' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacAging', REFERENCE_CLASS,
            '''MAC-Aging configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-mac-aging-type', REFERENCE_ENUM_CLASS, 'MacAging', 'Mac-aging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacAging',
                [], [],
                '''                MAC address aging type
                ''',
                'pseudowire_mac_aging_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-aging-time', ATTRIBUTE, 'int', 'Mac-aging-range',
                None, None,
                [('300', '30000')], [],
                '''                MAC Aging Time
                ''',
                'pseudowire_mac_aging_time',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-mac-aging',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacLimit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacLimit', REFERENCE_CLASS,
            '''MAC-Limit configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-mac-limit-action', REFERENCE_ENUM_CLASS, 'MacLimitAction', 'Mac-limit-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLimitAction',
                [], [],
                '''                Bridge Access Pseudowire MAC address limit
                enforcement action
                ''',
                'pseudowire_mac_limit_action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-limit-notif', REFERENCE_ENUM_CLASS, 'MacNotification', 'Mac-notification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacNotification',
                [], [],
                '''                MAC address limit notification action in a
                Bridge Access Pseudowire
                ''',
                'pseudowire_mac_limit_notif',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-limit-max', ATTRIBUTE, 'int', 'Mac-limit-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Number of MAC addresses on a Bridge Access
                Pseudowire after which MAC limit action is
                taken
                ''',
                'pseudowire_mac_limit_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-mac-limit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac', REFERENCE_CLASS,
            '''Bridge-domain Pseudowire MAC configuration
commands''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-mac-secure', REFERENCE_CLASS, 'PseudowireMacSecure', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacSecure',
                [], [],
                '''                MAC Secure
                ''',
                'pseudowire_mac_secure',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-aging', REFERENCE_CLASS, 'PseudowireMacAging', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacAging',
                [], [],
                '''                MAC-Aging configuration commands
                ''',
                'pseudowire_mac_aging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-limit', REFERENCE_CLASS, 'PseudowireMacLimit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacLimit',
                [], [],
                '''                MAC-Limit configuration commands
                ''',
                'pseudowire_mac_limit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-port-down-flush', REFERENCE_ENUM_CLASS, 'PortDownFlush', 'Port-down-flush',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'PortDownFlush',
                [], [],
                '''                Enable/Disable MAC Flush When Port goes
                down
                ''',
                'pseudowire_mac_port_down_flush',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Bridge-domain Pseudowire MAC configuration
                mode
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-learning', REFERENCE_ENUM_CLASS, 'MacLearn', 'Mac-learn',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLearn',
                [], [],
                '''                Enable MAC Learning
                ''',
                'pseudowire_mac_learning',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-mac',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon.BdPwSplitHorizonGroup' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon.BdPwSplitHorizonGroup', REFERENCE_CLASS,
            '''Split Horizon Group''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable split horizon group
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pw-split-horizon-group',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon', REFERENCE_CLASS,
            '''Split Horizon''',
            False, 
            [
            _MetaInfoClassMember('bd-pw-split-horizon-group', REFERENCE_CLASS, 'BdPwSplitHorizonGroup', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon.BdPwSplitHorizonGroup',
                [], [],
                '''                Split Horizon Group
                ''',
                'bd_pw_split_horizon_group',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pw-split-horizon',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwMplsStaticLabels' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwMplsStaticLabels', REFERENCE_CLASS,
            '''MPLS static labels''',
            False, 
            [
            _MetaInfoClassMember('local-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire local static label
                ''',
                'local_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('remote-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire remote static label
                ''',
                'remote_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pw-mpls-static-labels',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires.BridgeDomainBackupPseudowire' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires.BridgeDomainBackupPseudowire', REFERENCE_LIST,
            '''Backup pseudowire configuration''',
            False, 
            [
            _MetaInfoClassMember('neighbor', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Neighbor IP address
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pseudowire-id', ATTRIBUTE, 'int', 'Pseudowire-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Pseudowire ID
                ''',
                'pseudowire_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('bridge-domain-backup-pw-class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                PW class template name to use for this
                pseudowire
                ''',
                'bridge_domain_backup_pw_class',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-backup-pseudowire',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires', REFERENCE_CLASS,
            '''List of pseudowires''',
            False, 
            [
            _MetaInfoClassMember('bridge-domain-backup-pseudowire', REFERENCE_LIST, 'BridgeDomainBackupPseudowire', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires.BridgeDomainBackupPseudowire',
                [], [],
                '''                Backup pseudowire configuration
                ''',
                'bridge_domain_backup_pseudowire',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-backup-pseudowires',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire', REFERENCE_LIST,
            '''Pseudowire configuration''',
            False, 
            [
            _MetaInfoClassMember('neighbor', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Neighbor IP address
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pseudowire-id', ATTRIBUTE, 'int', 'Pseudowire-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Pseudowire ID
                ''',
                'pseudowire_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pseudowire-dai', REFERENCE_CLASS, 'PseudowireDai', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai',
                [], [],
                '''                Access Pseudowire Dynamic ARP Inspection
                ''',
                'pseudowire_dai',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bdpw-storm-control-types', REFERENCE_CLASS, 'BdpwStormControlTypes', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes',
                [], [],
                '''                Storm Control
                ''',
                'bdpw_storm_control_types',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-profile', REFERENCE_CLASS, 'PseudowireProfile', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireProfile',
                [], [],
                '''                Attach a DHCP profile
                ''',
                'pseudowire_profile',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-pw-static-mac-addresses', REFERENCE_CLASS, 'BdPwStaticMacAddresses', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses',
                [], [],
                '''                Static Mac Address Table
                ''',
                'bd_pw_static_mac_addresses',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-ip-source-guard', REFERENCE_CLASS, 'PseudowireIpSourceGuard', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireIpSourceGuard',
                [], [],
                '''                IP Source Guard
                ''',
                'pseudowire_ip_source_guard',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac', REFERENCE_CLASS, 'PseudowireMac', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac',
                [], [],
                '''                Bridge-domain Pseudowire MAC configuration
                commands
                ''',
                'pseudowire_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-pw-split-horizon', REFERENCE_CLASS, 'BdPwSplitHorizon', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon',
                [], [],
                '''                Split Horizon
                ''',
                'bd_pw_split_horizon',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-pw-mpls-static-labels', REFERENCE_CLASS, 'BdPwMplsStaticLabels', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwMplsStaticLabels',
                [], [],
                '''                MPLS static labels
                ''',
                'bd_pw_mpls_static_labels',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domain-backup-pseudowires', REFERENCE_CLASS, 'BridgeDomainBackupPseudowires', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires',
                [], [],
                '''                List of pseudowires
                ''',
                'bridge_domain_backup_pseudowires',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mld-snoop', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a MLD Snooping profile
                ''',
                'pseudowire_mld_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-igmp-snoop', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a IGMP Snooping profile
                ''',
                'pseudowire_igmp_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-flooding', REFERENCE_ENUM_CLASS, 'InterfaceTrafficFlood', 'Interface-traffic-flood',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceTrafficFlood',
                [], [],
                '''                Bridge-domain Pseudowire flooding
                ''',
                'pseudowire_flooding',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-pw-class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                PW class template name to use for this
                pseudowire
                ''',
                'bd_pw_class',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-flooding-unknown-unicast', REFERENCE_ENUM_CLASS, 'InterfaceTrafficFlood', 'Interface-traffic-flood',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceTrafficFlood',
                [], [],
                '''                Bridge-domain Pseudowire flooding Unknown
                Unicast
                ''',
                'pseudowire_flooding_unknown_unicast',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pseudowire',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires', REFERENCE_CLASS,
            '''List of pseudowires''',
            False, 
            [
            _MetaInfoClassMember('bd-pseudowire', REFERENCE_LIST, 'BdPseudowire', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire',
                [], [],
                '''                Pseudowire configuration
                ''',
                'bd_pseudowire',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pseudowires',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports.Transport' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports.Transport', REFERENCE_LIST,
            '''Multicast P2MP Transport Type''',
            False, 
            [
            _MetaInfoClassMember('transport-name', ATTRIBUTE, 'str', 'Multicast-p2mp-transport',
                None, None,
                [], [b'(RSVP_TE)'],
                '''                Transport Type
                ''',
                'transport_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('attribute-set-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 64)], [],
                '''                Multicast P2MP TE Attribute Set Name
                ''',
                'attribute_set_name',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'transport',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports', REFERENCE_CLASS,
            '''Multicast P2MP Transport''',
            False, 
            [
            _MetaInfoClassMember('transport', REFERENCE_LIST, 'Transport', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports.Transport',
                [], [],
                '''                Multicast P2MP Transport Type
                ''',
                'transport',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'transports',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings.Signaling' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings.Signaling', REFERENCE_LIST,
            '''Multicast P2MP Signaling Type''',
            False, 
            [
            _MetaInfoClassMember('signaling-name', ATTRIBUTE, 'str', 'Multicast-p2mp-signaling',
                None, None,
                [], [b'(BGP)'],
                '''                Signaling Type
                ''',
                'signaling_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'signaling',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings', REFERENCE_CLASS,
            '''Multicast P2MP Signaling Type''',
            False, 
            [
            _MetaInfoClassMember('signaling', REFERENCE_LIST, 'Signaling', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings.Signaling',
                [], [],
                '''                Multicast P2MP Signaling Type
                ''',
                'signaling',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'signalings',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp', REFERENCE_CLASS,
            '''Enable Multicast P2MP in this VFI''',
            False, 
            [
            _MetaInfoClassMember('transports', REFERENCE_CLASS, 'Transports', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports',
                [], [],
                '''                Multicast P2MP Transport
                ''',
                'transports',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('signalings', REFERENCE_CLASS, 'Signalings', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings',
                [], [],
                '''                Multicast P2MP Signaling Type
                ''',
                'signalings',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Autodiscovery P2MP
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'multicast-p2mp',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwDhcpSnoop' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwDhcpSnoop', REFERENCE_CLASS,
            '''Attach a DHCP Snooping profile''',
            False, 
            [
            _MetaInfoClassMember('profile-id', REFERENCE_ENUM_CLASS, 'InterfaceProfile', 'Interface-profile',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceProfile',
                [], [],
                '''                Set the snooping profile
                ''',
                'profile_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dhcp-snooping-id', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Disable DHCP snooping
                ''',
                'dhcp_snooping_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vfi-pw-dhcp-snoop',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwMplsStaticLabels' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwMplsStaticLabels', REFERENCE_CLASS,
            '''MPLS static labels''',
            False, 
            [
            _MetaInfoClassMember('local-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire local static label
                ''',
                'local_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('remote-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire remote static label
                ''',
                'remote_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vfi-pw-mpls-static-labels',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses.PseudowireStaticMacAddress' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses.PseudowireStaticMacAddress', REFERENCE_LIST,
            '''Static Mac Address Configuration''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-static-mac-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses', REFERENCE_CLASS,
            '''Static Mac Address Table''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-static-mac-address', REFERENCE_LIST, 'PseudowireStaticMacAddress', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses.PseudowireStaticMacAddress',
                [], [],
                '''                Static Mac Address Configuration
                ''',
                'pseudowire_static_mac_address',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-static-mac-addresses',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire', REFERENCE_LIST,
            '''Pseudowire configuration''',
            False, 
            [
            _MetaInfoClassMember('neighbor', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Neighbor IP address
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pseudowire-id', ATTRIBUTE, 'int', 'Pseudowire-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Pseudowire ID
                ''',
                'pseudowire_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('vfi-pw-dhcp-snoop', REFERENCE_CLASS, 'VfiPwDhcpSnoop', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwDhcpSnoop',
                [], [],
                '''                Attach a DHCP Snooping profile
                ''',
                'vfi_pw_dhcp_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfi-pw-mpls-static-labels', REFERENCE_CLASS, 'VfiPwMplsStaticLabels', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwMplsStaticLabels',
                [], [],
                '''                MPLS static labels
                ''',
                'vfi_pw_mpls_static_labels',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-static-mac-addresses', REFERENCE_CLASS, 'PseudowireStaticMacAddresses', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses',
                [], [],
                '''                Static Mac Address Table
                ''',
                'pseudowire_static_mac_addresses',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfi-pw-class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                PW class template name to use for this
                pseudowire
                ''',
                'vfi_pw_class',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfi-pw-igmp-snoop', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a IGMP Snooping profile
                ''',
                'vfi_pw_igmp_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfi-pw-mld-snoop', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a MLD Snooping profile
                ''',
                'vfi_pw_mld_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vfi-pseudowire',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires', REFERENCE_CLASS,
            '''List of pseudowires''',
            False, 
            [
            _MetaInfoClassMember('vfi-pseudowire', REFERENCE_LIST, 'VfiPseudowire', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire',
                [], [],
                '''                Pseudowire configuration
                ''',
                'vfi_pseudowire',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vfi-pseudowires',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.VplsId' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.VplsId', REFERENCE_CLASS,
            '''VPLS ID''',
            False, 
            [
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'LdpVplsId', 'Ldp-vpls-id',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'LdpVplsId',
                [], [],
                '''                VPLS-ID Type
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Vpls-id-as-range',
                None, None,
                [('1', '65535')], [],
                '''                Two byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Vpls-id-as-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS index
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('address-index', ATTRIBUTE, 'int', 'Vpls-id-addr-index',
                None, None,
                [('0', '32767')], [],
                '''                Address index
                ''',
                'address_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vpls-id',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.FlowLabelLoadBalance' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.FlowLabelLoadBalance', REFERENCE_CLASS,
            '''Enable Flow Label based load balancing''',
            False, 
            [
            _MetaInfoClassMember('flow-label', REFERENCE_ENUM_CLASS, 'FlowLabelLoadBalance', 'Flow-label-load-balance',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'FlowLabelLoadBalance',
                [], [],
                '''                Flow Label load balance type
                ''',
                'flow_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('static', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Static Flow Label
                ''',
                'static',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'flow-label-load-balance',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol', REFERENCE_CLASS,
            '''Signaling Protocol LDP in this VFI
configuration''',
            False, 
            [
            _MetaInfoClassMember('vpls-id', REFERENCE_CLASS, 'VplsId', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.VplsId',
                [], [],
                '''                VPLS ID
                ''',
                'vpls_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('flow-label-load-balance', REFERENCE_CLASS, 'FlowLabelLoadBalance', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.FlowLabelLoadBalance',
                [], [],
                '''                Enable Flow Label based load balancing
                ''',
                'flow_label_load_balance',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable LDP as Signaling Protocol.Deletion
                of this object also causes deletion of all
                objects under LDPSignalingProtocol.
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'ldp-signaling-protocol',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpRoutePolicy' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpRoutePolicy', REFERENCE_CLASS,
            '''Route policy''',
            False, 
            [
            _MetaInfoClassMember('export', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Export route policy
                ''',
                'export',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bgp-route-policy',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteDistinguisher' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteDistinguisher', REFERENCE_CLASS,
            '''Route Distinguisher''',
            False, 
            [
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'BgpRouteDistinguisher', 'Bgp-route-distinguisher',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteDistinguisher',
                [], [],
                '''                Router Distinguisher Type
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Rdas-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Two byte or 4 byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Rdas-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS:nn (hex or decimal format)
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('addr-index', ATTRIBUTE, 'int', 'Rd-addr-index',
                None, None,
                [('0', '65535')], [],
                '''                Addr index
                ''',
                'addr_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'route-distinguisher',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol.FlowLabelLoadBalance' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol.FlowLabelLoadBalance', REFERENCE_CLASS,
            '''Enable Flow Label based load balancing''',
            False, 
            [
            _MetaInfoClassMember('flow-label', REFERENCE_ENUM_CLASS, 'FlowLabelLoadBalance', 'Flow-label-load-balance',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'FlowLabelLoadBalance',
                [], [],
                '''                Flow Label load balance type
                ''',
                'flow_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('static', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Static Flow Label
                ''',
                'static',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'flow-label-load-balance',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol', REFERENCE_CLASS,
            '''Enable Signaling Protocol BGP in this VFI''',
            False, 
            [
            _MetaInfoClassMember('flow-label-load-balance', REFERENCE_CLASS, 'FlowLabelLoadBalance', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol.FlowLabelLoadBalance',
                [], [],
                '''                Enable Flow Label based load balancing
                ''',
                'flow_label_load_balance',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('ve-range', ATTRIBUTE, 'int', 'Vedge-range',
                None, None,
                [('11', '100')], [],
                '''                Local Virtual Edge Block Configurable
                Range
                ''',
                've_range',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('veid', ATTRIBUTE, 'int', 'Veid-range',
                None, None,
                [('1', '16384')], [],
                '''                Local Virtual Edge Identifier
                ''',
                'veid',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable BGP as Signaling Protocol
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bgp-signaling-protocol',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.TwoByteAsOrFourByteAs' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.TwoByteAsOrFourByteAs', REFERENCE_LIST,
            '''two byte as or four byte as''',
            False, 
            [
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Rdas-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Two byte or 4 byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Rdas-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS:nn (hex or decimal format)
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'two-byte-as-or-four-byte-as',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_when=True,
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.Ipv4Address' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.Ipv4Address', REFERENCE_LIST,
            '''ipv4 address''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('addr-index', ATTRIBUTE, 'int', 'Rd-addr-index',
                None, None,
                [('0', '65535')], [],
                '''                Addr index
                ''',
                'addr_index',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'ipv4-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_when=True,
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget', REFERENCE_LIST,
            '''Name of the Route Target''',
            False, 
            [
            _MetaInfoClassMember('role', REFERENCE_ENUM_CLASS, 'BgpRouteTargetRole', 'Bgp-route-target-role',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetRole',
                [], [],
                '''                Role of the router target type
                ''',
                'role',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('format', REFERENCE_ENUM_CLASS, 'BgpRouteTargetFormat', 'Bgp-route-target-format',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetFormat',
                [], [],
                '''                Format of the route target
                ''',
                'format',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('two-byte-as-or-four-byte-as', REFERENCE_LIST, 'TwoByteAsOrFourByteAs', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.TwoByteAsOrFourByteAs',
                [], [],
                '''                two byte as or four byte as
                ''',
                'two_byte_as_or_four_byte_as',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('ipv4-address', REFERENCE_LIST, 'Ipv4Address', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.Ipv4Address',
                [], [],
                '''                ipv4 address
                ''',
                'ipv4_address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'route-target',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets', REFERENCE_CLASS,
            '''Route Target''',
            False, 
            [
            _MetaInfoClassMember('route-target', REFERENCE_LIST, 'RouteTarget', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget',
                [], [],
                '''                Name of the Route Target
                ''',
                'route_target',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'route-targets',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery', REFERENCE_CLASS,
            '''Enable Autodiscovery BGP in this VFI''',
            False, 
            [
            _MetaInfoClassMember('ldp-signaling-protocol', REFERENCE_CLASS, 'LdpSignalingProtocol', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol',
                [], [],
                '''                Signaling Protocol LDP in this VFI
                configuration
                ''',
                'ldp_signaling_protocol',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bgp-route-policy', REFERENCE_CLASS, 'BgpRoutePolicy', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpRoutePolicy',
                [], [],
                '''                Route policy
                ''',
                'bgp_route_policy',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('route-distinguisher', REFERENCE_CLASS, 'RouteDistinguisher', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteDistinguisher',
                [], [],
                '''                Route Distinguisher
                ''',
                'route_distinguisher',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bgp-signaling-protocol', REFERENCE_CLASS, 'BgpSignalingProtocol', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol',
                [], [],
                '''                Enable Signaling Protocol BGP in this VFI
                ''',
                'bgp_signaling_protocol',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('route-targets', REFERENCE_CLASS, 'RouteTargets', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets',
                [], [],
                '''                Route Target
                ''',
                'route_targets',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('table-policy', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Table Policy for installation of forwarding
                data to L2FIB
                ''',
                'table_policy',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('ad-control-word', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable control-word for this VFI
                ''',
                'ad_control_word',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Autodiscovery BGP
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bgp-auto-discovery',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi', REFERENCE_LIST,
            '''Name of the Virtual Forwarding Interface''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the Virtual Forwarding Interface
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('multicast-p2mp', REFERENCE_CLASS, 'MulticastP2mp', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp',
                [], [],
                '''                Enable Multicast P2MP in this VFI
                ''',
                'multicast_p2mp',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfi-pseudowires', REFERENCE_CLASS, 'VfiPseudowires', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires',
                [], [],
                '''                List of pseudowires
                ''',
                'vfi_pseudowires',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bgp-auto-discovery', REFERENCE_CLASS, 'BgpAutoDiscovery', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery',
                [], [],
                '''                Enable Autodiscovery BGP in this VFI
                ''',
                'bgp_auto_discovery',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfi-shutdown', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enabling Shutdown
                ''',
                'vfi_shutdown',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vpnid', ATTRIBUTE, 'int', 'Vpnid-range',
                None, None,
                [('1', '4294967295')], [],
                '''                VPN Identifier
                ''',
                'vpnid',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vfi',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis', REFERENCE_CLASS,
            '''Specify the virtual forwarding interface name''',
            False, 
            [
            _MetaInfoClassMember('vfi', REFERENCE_LIST, 'Vfi', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi',
                [], [],
                '''                Name of the Virtual Forwarding Interface
                ''',
                'vfi',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vfis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainvnis.BridgeDomainvni' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainvnis.BridgeDomainvni', REFERENCE_LIST,
            '''Bridge Domain VxLAN EVPN''',
            False, 
            [
            _MetaInfoClassMember('vpn-id', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '16777215')], [],
                '''                VxLAN Ethernet VPN-ID
                ''',
                'vpn_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domainvni',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainvnis' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainvnis', REFERENCE_CLASS,
            '''Bridge Domain EVPN VxLAN Network Identifier
Table''',
            False, 
            [
            _MetaInfoClassMember('bridge-domainvni', REFERENCE_LIST, 'BridgeDomainvni', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainvnis.BridgeDomainvni',
                [], [],
                '''                Bridge Domain VxLAN EVPN
                ''',
                'bridge_domainvni',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domainvnis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceIpSourceGuard' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceIpSourceGuard', REFERENCE_CLASS,
            '''IP Source Guard''',
            False, 
            [
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                Logging Type
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable L2 Interface Dynamic IP source
                guard
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IP Source Guard
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-ip-source-guard',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai.InterfaceDaiAddressValidation' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai.InterfaceDaiAddressValidation', REFERENCE_CLASS,
            '''Address Validation''',
            False, 
            [
            _MetaInfoClassMember('ipv4-verification', REFERENCE_ENUM_CLASS, 'L2vpnVerification', 'L2vpn-verification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnVerification',
                [], [],
                '''                IPv4 Verification
                ''',
                'ipv4_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('destination-mac-verification', REFERENCE_ENUM_CLASS, 'L2vpnVerification', 'L2vpn-verification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnVerification',
                [], [],
                '''                Destination MAC Verification
                ''',
                'destination_mac_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('source-mac-verification', REFERENCE_ENUM_CLASS, 'L2vpnVerification', 'L2vpn-verification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnVerification',
                [], [],
                '''                Source MAC Verification
                ''',
                'source_mac_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Address Validation
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-dai-address-validation',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai', REFERENCE_CLASS,
            '''L2 Interface Dynamic ARP Inspection''',
            False, 
            [
            _MetaInfoClassMember('interface-dai-address-validation', REFERENCE_CLASS, 'InterfaceDaiAddressValidation', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai.InterfaceDaiAddressValidation',
                [], [],
                '''                Address Validation
                ''',
                'interface_dai_address_validation',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                Logging Type
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable L2 Interface Dynamic ARP Inspection
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable L2 Interface Dynamic ARP Inspection
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-dai',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceProfile' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceProfile', REFERENCE_CLASS,
            '''Attach a DHCP profile''',
            False, 
            [
            _MetaInfoClassMember('profile-id', REFERENCE_ENUM_CLASS, 'InterfaceProfile', 'Interface-profile',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceProfile',
                [], [],
                '''                Set the snooping profile
                ''',
                'profile_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dhcp-snooping-id', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Disable DHCP snooping
                ''',
                'dhcp_snooping_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-profile',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType.StormControlUnit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType.StormControlUnit', REFERENCE_CLASS,
            '''Specify units for Storm Control Configuration''',
            False, 
            [
            _MetaInfoClassMember('kbits-per-sec', ATTRIBUTE, 'int', 'Storm-control-kbps-range',
                None, None,
                [('64', '1280000')], [],
                '''                Kilobits Per Second, PktsPerSec and KbitsPerSec
                cannot be configured together
                ''',
                'kbits_per_sec',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pkts-per-sec', ATTRIBUTE, 'int', 'Storm-control-pps-range',
                None, None,
                [('1', '160000')], [],
                '''                Packets Per Second, PktsPerSec and KbitsPerSec
                cannot be configured together
                ''',
                'pkts_per_sec',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'storm-control-unit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType', REFERENCE_LIST,
            '''Storm Control Type''',
            False, 
            [
            _MetaInfoClassMember('sctype', REFERENCE_ENUM_CLASS, 'StormControl', 'Storm-control',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'StormControl',
                [], [],
                '''                Storm Control Type
                ''',
                'sctype',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('storm-control-unit', REFERENCE_CLASS, 'StormControlUnit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType.StormControlUnit',
                [], [],
                '''                Specify units for Storm Control Configuration
                ''',
                'storm_control_unit',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bdac-storm-control-type',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes', REFERENCE_CLASS,
            '''Storm Control''',
            False, 
            [
            _MetaInfoClassMember('bdac-storm-control-type', REFERENCE_LIST, 'BdacStormControlType', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType',
                [], [],
                '''                Storm Control Type
                ''',
                'bdac_storm_control_type',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bdac-storm-control-types',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon.SplitHorizonGroupId' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon.SplitHorizonGroupId', REFERENCE_CLASS,
            '''Split Horizon Group ID''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable split horizon group
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'split-horizon-group-id',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon', REFERENCE_CLASS,
            '''Split Horizon''',
            False, 
            [
            _MetaInfoClassMember('split-horizon-group-id', REFERENCE_CLASS, 'SplitHorizonGroupId', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon.SplitHorizonGroupId',
                [], [],
                '''                Split Horizon Group ID
                ''',
                'split_horizon_group_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'split-horizon',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses.StaticMacAddress' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses.StaticMacAddress', REFERENCE_LIST,
            '''Static Mac Address Configuration''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'static-mac-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses', REFERENCE_CLASS,
            '''Static Mac Address Table''',
            False, 
            [
            _MetaInfoClassMember('static-mac-address', REFERENCE_LIST, 'StaticMacAddress', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses.StaticMacAddress',
                [], [],
                '''                Static Mac Address Configuration
                ''',
                'static_mac_address',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'static-mac-addresses',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacAging' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacAging', REFERENCE_CLASS,
            '''MAC-Aging configuration commands''',
            False, 
            [
            _MetaInfoClassMember('interface-mac-aging-time', ATTRIBUTE, 'int', 'Mac-aging-range',
                None, None,
                [('300', '30000')], [],
                '''                Mac Aging Time
                ''',
                'interface_mac_aging_time',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-aging-type', REFERENCE_ENUM_CLASS, 'MacAging', 'Mac-aging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacAging',
                [], [],
                '''                MAC address aging type
                ''',
                'interface_mac_aging_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-mac-aging',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacSecure' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacSecure', REFERENCE_CLASS,
            '''MAC Secure''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable MAC Secure
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                MAC Secure Logging
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable MAC Secure
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('action', REFERENCE_ENUM_CLASS, 'MacSecureAction', 'Mac-secure-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacSecureAction',
                [], [],
                '''                MAC secure enforcement action
                ''',
                'action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('shutdown-recovery-timer', ATTRIBUTE, 'int', 'Mac-secure-shutdown-recovery-time-range',
                None, None,
                [('10', '3600')], [],
                '''                MAC Secure Shutdown Recovery Timer
                ''',
                'shutdown_recovery_timer',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-mac-secure',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacLimit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacLimit', REFERENCE_CLASS,
            '''MAC-Limit configuration commands''',
            False, 
            [
            _MetaInfoClassMember('interface-mac-limit-max', ATTRIBUTE, 'int', 'Mac-limit-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Number of MAC addresses on an Interface
                after which MAC limit action is taken
                ''',
                'interface_mac_limit_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-limit-notif', REFERENCE_ENUM_CLASS, 'MacNotification', 'Mac-notification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacNotification',
                [], [],
                '''                MAC address limit notification action in a
                Interface
                ''',
                'interface_mac_limit_notif',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-limit-action', REFERENCE_ENUM_CLASS, 'MacLimitAction', 'Mac-limit-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLimitAction',
                [], [],
                '''                Interface MAC address limit enforcement
                action
                ''',
                'interface_mac_limit_action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-mac-limit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac', REFERENCE_CLASS,
            '''MAC configuration commands''',
            False, 
            [
            _MetaInfoClassMember('interface-mac-aging', REFERENCE_CLASS, 'InterfaceMacAging', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacAging',
                [], [],
                '''                MAC-Aging configuration commands
                ''',
                'interface_mac_aging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-secure', REFERENCE_CLASS, 'InterfaceMacSecure', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacSecure',
                [], [],
                '''                MAC Secure
                ''',
                'interface_mac_secure',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-limit', REFERENCE_CLASS, 'InterfaceMacLimit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacLimit',
                [], [],
                '''                MAC-Limit configuration commands
                ''',
                'interface_mac_limit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-port-down-flush', REFERENCE_ENUM_CLASS, 'PortDownFlush', 'Port-down-flush',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'PortDownFlush',
                [], [],
                '''                Enable/Disable MAC Flush When Port goes
                down
                ''',
                'interface_mac_port_down_flush',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-learning', REFERENCE_ENUM_CLASS, 'MacLearn', 'Mac-learn',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLearn',
                [], [],
                '''                Enable Mac Learning
                ''',
                'interface_mac_learning',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-mac',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit', REFERENCE_LIST,
            '''Name of the Attachment Circuit''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                The name of the Attachment Circuit
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('interface-ip-source-guard', REFERENCE_CLASS, 'InterfaceIpSourceGuard', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceIpSourceGuard',
                [], [],
                '''                IP Source Guard
                ''',
                'interface_ip_source_guard',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-dai', REFERENCE_CLASS, 'InterfaceDai', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai',
                [], [],
                '''                L2 Interface Dynamic ARP Inspection
                ''',
                'interface_dai',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-profile', REFERENCE_CLASS, 'InterfaceProfile', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceProfile',
                [], [],
                '''                Attach a DHCP profile
                ''',
                'interface_profile',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bdac-storm-control-types', REFERENCE_CLASS, 'BdacStormControlTypes', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes',
                [], [],
                '''                Storm Control
                ''',
                'bdac_storm_control_types',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('split-horizon', REFERENCE_CLASS, 'SplitHorizon', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon',
                [], [],
                '''                Split Horizon
                ''',
                'split_horizon',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('static-mac-addresses', REFERENCE_CLASS, 'StaticMacAddresses', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses',
                [], [],
                '''                Static Mac Address Table
                ''',
                'static_mac_addresses',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac', REFERENCE_CLASS, 'InterfaceMac', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac',
                [], [],
                '''                MAC configuration commands
                ''',
                'interface_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-flooding', REFERENCE_ENUM_CLASS, 'InterfaceTrafficFlood', 'Interface-traffic-flood',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceTrafficFlood',
                [], [],
                '''                Enable or Disable Flooding
                ''',
                'interface_flooding',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-igmp-snoop', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a IGMP Snooping profile
                ''',
                'interface_igmp_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-flooding-unknown-unicast', REFERENCE_ENUM_CLASS, 'InterfaceTrafficFlood', 'Interface-traffic-flood',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceTrafficFlood',
                [], [],
                '''                Enable or Disable Unknown Unicast Flooding
                ''',
                'interface_flooding_unknown_unicast',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mld-snoop', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a MLD Snooping profile
                ''',
                'interface_mld_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-attachment-circuit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits', REFERENCE_CLASS,
            '''Attachment Circuit table''',
            False, 
            [
            _MetaInfoClassMember('bd-attachment-circuit', REFERENCE_LIST, 'BdAttachmentCircuit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit',
                [], [],
                '''                Name of the Attachment Circuit
                ''',
                'bd_attachment_circuit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-attachment-circuits',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowireEvpns.BdPseudowireEvpn' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowireEvpns.BdPseudowireEvpn', REFERENCE_LIST,
            '''EVPN Pseudowire configuration''',
            False, 
            [
            _MetaInfoClassMember('eviid', ATTRIBUTE, 'int', 'Evpnvpnid-range',
                None, None,
                [('1', '65534')], [],
                '''                Ethernet VPN ID
                ''',
                'eviid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('acid', ATTRIBUTE, 'int', 'Pseudowire-acid-range',
                None, None,
                [('1', '4294967295')], [],
                '''                AC ID
                ''',
                'acid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pseudowire-evpn',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowireEvpns' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowireEvpns', REFERENCE_CLASS,
            '''List of EVPN pseudowires''',
            False, 
            [
            _MetaInfoClassMember('bd-pseudowire-evpn', REFERENCE_LIST, 'BdPseudowireEvpn', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowireEvpns.BdPseudowireEvpn',
                [], [],
                '''                EVPN Pseudowire configuration
                ''',
                'bd_pseudowire_evpn',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pseudowire-evpns',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.IpSourceGuard' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.IpSourceGuard', REFERENCE_CLASS,
            '''IP Source Guard''',
            False, 
            [
            _MetaInfoClassMember('logging', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Logging
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IP Source Guard
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'ip-source-guard',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Dai.DaiAddressValidation' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Dai.DaiAddressValidation', REFERENCE_CLASS,
            '''Address Validation''',
            False, 
            [
            _MetaInfoClassMember('ipv4-verification', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IPv4 Verification
                ''',
                'ipv4_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('destination-mac-verification', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Destination MAC Verification
                ''',
                'destination_mac_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('source-mac-verification', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Source MAC Verification
                ''',
                'source_mac_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Address Validation
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'dai-address-validation',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Dai' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Dai', REFERENCE_CLASS,
            '''Dynamic ARP Inspection''',
            False, 
            [
            _MetaInfoClassMember('dai-address-validation', REFERENCE_CLASS, 'DaiAddressValidation', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Dai.DaiAddressValidation',
                [], [],
                '''                Address Validation
                ''',
                'dai_address_validation',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('logging', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Logging
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Dynamic ARP Inspection
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'dai',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface.RoutedInterfaceSplitHorizonGroup' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface.RoutedInterfaceSplitHorizonGroup', REFERENCE_CLASS,
            '''Routed interface split horizon group''',
            False, 
            [
            _MetaInfoClassMember('routed-interface-split-horizon-group-core', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Configure BVI under SHG 1
                ''',
                'routed_interface_split_horizon_group_core',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'routed-interface-split-horizon-group',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface', REFERENCE_LIST,
            '''Bridge Domain Routed Interface''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                The name of the Routed Interface
                ''',
                'interface_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('routed-interface-split-horizon-group', REFERENCE_CLASS, 'RoutedInterfaceSplitHorizonGroup', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface.RoutedInterfaceSplitHorizonGroup',
                [], [],
                '''                Routed interface split horizon group
                ''',
                'routed_interface_split_horizon_group',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'routed-interface',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces', REFERENCE_CLASS,
            '''Bridge Domain Routed Interface Table''',
            False, 
            [
            _MetaInfoClassMember('routed-interface', REFERENCE_LIST, 'RoutedInterface', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface',
                [], [],
                '''                Bridge Domain Routed Interface
                ''',
                'routed_interface',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'routed-interfaces',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain', REFERENCE_LIST,
            '''bridge domain''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 27)], [],
                '''                Name of the bridge domain
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('bd-storm-controls', REFERENCE_CLASS, 'BdStormControls', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls',
                [], [],
                '''                Storm Control
                ''',
                'bd_storm_controls',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('member-vnis', REFERENCE_CLASS, 'MemberVnis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis',
                [], [],
                '''                Bridge Domain VxLAN Network Identifier Table
                ''',
                'member_vnis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domain-mac', REFERENCE_CLASS, 'BridgeDomainMac', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac',
                [], [],
                '''                MAC configuration commands
                ''',
                'bridge_domain_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('nv-satellite', REFERENCE_CLASS, 'NvSatellite', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.NvSatellite',
                [], [],
                '''                nV Satellite
                ''',
                'nv_satellite',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domain-pbb', REFERENCE_CLASS, 'BridgeDomainPbb', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb',
                [], [],
                '''                Bridge Domain PBB
                ''',
                'bridge_domain_pbb',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domain-evis', REFERENCE_CLASS, 'BridgeDomainEvis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainEvis',
                [], [],
                '''                Bridge Domain EVI Table
                ''',
                'bridge_domain_evis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('access-vfis', REFERENCE_CLASS, 'AccessVfis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis',
                [], [],
                '''                Specify the access virtual forwarding
                interface name
                ''',
                'access_vfis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-pseudowires', REFERENCE_CLASS, 'BdPseudowires', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires',
                [], [],
                '''                List of pseudowires
                ''',
                'bd_pseudowires',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfis', REFERENCE_CLASS, 'Vfis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis',
                [], [],
                '''                Specify the virtual forwarding interface name
                ''',
                'vfis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domainvnis', REFERENCE_CLASS, 'BridgeDomainvnis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainvnis',
                [], [],
                '''                Bridge Domain EVPN VxLAN Network Identifier
                Table
                ''',
                'bridge_domainvnis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-attachment-circuits', REFERENCE_CLASS, 'BdAttachmentCircuits', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits',
                [], [],
                '''                Attachment Circuit table
                ''',
                'bd_attachment_circuits',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-pseudowire-evpns', REFERENCE_CLASS, 'BdPseudowireEvpns', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowireEvpns',
                [], [],
                '''                List of EVPN pseudowires
                ''',
                'bd_pseudowire_evpns',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('ip-source-guard', REFERENCE_CLASS, 'IpSourceGuard', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.IpSourceGuard',
                [], [],
                '''                IP Source Guard
                ''',
                'ip_source_guard',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dai', REFERENCE_CLASS, 'Dai', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Dai',
                [], [],
                '''                Dynamic ARP Inspection
                ''',
                'dai',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('routed-interfaces', REFERENCE_CLASS, 'RoutedInterfaces', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces',
                [], [],
                '''                Bridge Domain Routed Interface Table
                ''',
                'routed_interfaces',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('coupled-mode', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Coupled-mode configuration
                ''',
                'coupled_mode',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('shutdown', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                shutdown the Bridge Domain
                ''',
                'shutdown',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('flooding-unknown-unicast', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable Unknown Unicast flooding
                ''',
                'flooding_unknown_unicast',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('efp-visibility', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable multicast for multiple VLANs in the
                bridge of a BVI
                ''',
                'efp_visibility',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2-multicast-source', REFERENCE_ENUM_CLASS, 'L2mcSrcTrafficEnabled', 'L2mc-src-traffic-enabled',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2mcSrcTrafficEnabled',
                [], [],
                '''                L2MC Source Traffic Enabled
                ''',
                'l2_multicast_source',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('igmp-snooping-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable IGMP Snooping
                ''',
                'igmp_snooping_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('transport-mode', REFERENCE_ENUM_CLASS, 'BridgeDomainTransportMode', 'Bridge-domain-transport-mode',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BridgeDomainTransportMode',
                [], [],
                '''                Bridge Domain Transport mode
                ''',
                'transport_mode',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mld-snooping', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach MLD Snooping Profile Name
                ''',
                'mld_snooping',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domain-mtu', ATTRIBUTE, 'int', 'Bridge-bd-mtu-range',
                None, None,
                [('46', '65535')], [],
                '''                Maximum transmission unit for this Bridge
                Domain
                ''',
                'bridge_domain_mtu',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dhcp', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 32)], [],
                '''                DHCPv4 Snooping profile name
                ''',
                'dhcp',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-description', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 64)], [],
                '''                Bridge-domain description Name
                ''',
                'bridge_description',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('igmp-snooping', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach IGMP Snooping Profile Name
                ''',
                'igmp_snooping',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('flooding', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable flooding
                ''',
                'flooding',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains', REFERENCE_CLASS,
            '''List of Bridge Domain''',
            False, 
            [
            _MetaInfoClassMember('bridge-domain', REFERENCE_LIST, 'BridgeDomain', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain',
                [], [],
                '''                bridge domain
                ''',
                'bridge_domain',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domains',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup', REFERENCE_LIST,
            '''Bridge group''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the Bridge group
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('bridge-domains', REFERENCE_CLASS, 'BridgeDomains', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains',
                [], [],
                '''                List of Bridge Domain
                ''',
                'bridge_domains',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-group',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.BridgeDomainGroups' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.BridgeDomainGroups', REFERENCE_CLASS,
            '''List of bridge groups''',
            False, 
            [
            _MetaInfoClassMember('bridge-domain-group', REFERENCE_LIST, 'BridgeDomainGroup', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup',
                [], [],
                '''                Bridge group
                ''',
                'bridge_domain_group',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-groups',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.Sequencing' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.Sequencing', REFERENCE_CLASS,
            '''Sequencing''',
            False, 
            [
            _MetaInfoClassMember('sequencing', REFERENCE_ENUM_CLASS, 'L2tpv3Sequencing', 'L2tpv3-sequencing',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2tpv3Sequencing',
                [], [],
                '''                Sequencing
                ''',
                'sequencing',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value='Cisco_IOS_XR_l2vpn_cfg.L2tpv3Sequencing.off'),
            _MetaInfoClassMember('resync-threshold', ATTRIBUTE, 'int', 'Resync-threshold-range',
                None, None,
                [('5', '65535')], [],
                '''                Out of sequence threshold
                ''',
                'resync_threshold',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="5"),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'sequencing',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.TypeOfService' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.TypeOfService', REFERENCE_CLASS,
            '''Type of service''',
            False, 
            [
            _MetaInfoClassMember('type-of-service-value', ATTRIBUTE, 'int', 'Type-of-service-range',
                None, None,
                [('0', '255')], [],
                '''                Type of service value
                ''',
                'type_of_service_value',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('type-of-service-mode', REFERENCE_ENUM_CLASS, 'TypeOfServiceMode', 'Type-of-service-mode',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'TypeOfServiceMode',
                [], [],
                '''                Type of service mode
                ''',
                'type_of_service_mode',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'type-of-service',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.SignalingProtocol' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.SignalingProtocol', REFERENCE_CLASS,
            '''L2TPv3 signaling protocol''',
            False, 
            [
            _MetaInfoClassMember('protocol', REFERENCE_ENUM_CLASS, 'L2tpSignalingProtocol', 'L2tp-signaling-protocol',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2tpSignalingProtocol',
                [], [],
                '''                L2TPv3 signaling protocol
                ''',
                'protocol',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value='Cisco_IOS_XR_l2vpn_cfg.L2tpSignalingProtocol.l2tpv3'),
            _MetaInfoClassMember('l2tpv3-class-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the L2TPv3 class name
                ''',
                'l2tpv3_class_name',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'signaling-protocol',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.PathMtu' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.PathMtu', REFERENCE_CLASS,
            '''Path maximum transmission unit''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable path MTU
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('max-path-mtu', ATTRIBUTE, 'int', 'Max-path-mtu-range',
                None, None,
                [('68', '65535')], [],
                '''                Maximum path maximum transmission unit
                ''',
                'max_path_mtu',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'path-mtu',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation', REFERENCE_CLASS,
            '''L2TPv3 encapsulation''',
            False, 
            [
            _MetaInfoClassMember('sequencing', REFERENCE_CLASS, 'Sequencing', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.Sequencing',
                [], [],
                '''                Sequencing
                ''',
                'sequencing',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('type-of-service', REFERENCE_CLASS, 'TypeOfService', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.TypeOfService',
                [], [],
                '''                Type of service
                ''',
                'type_of_service',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('signaling-protocol', REFERENCE_CLASS, 'SignalingProtocol', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.SignalingProtocol',
                [], [],
                '''                L2TPv3 signaling protocol
                ''',
                'signaling_protocol',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('path-mtu', REFERENCE_CLASS, 'PathMtu', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.PathMtu',
                [], [],
                '''                Path maximum transmission unit
                ''',
                'path_mtu',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('df-bit-set', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Set the do not fragment bit to 1
                ''',
                'df_bit_set',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('cookie-size', REFERENCE_ENUM_CLASS, 'L2tpCookieSize', 'L2tp-cookie-size',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2tpCookieSize',
                [], [],
                '''                Cookie size
                ''',
                'cookie_size',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value='Cisco_IOS_XR_l2vpn_cfg.L2tpCookieSize.zero'),
            _MetaInfoClassMember('source-address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Source IP address
                ''',
                'source_address',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('transport-mode', REFERENCE_ENUM_CLASS, 'TransportMode', 'Transport-mode',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'TransportMode',
                [], [],
                '''                Transport mode
                ''',
                'transport_mode',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable L2TPv3 encapsulation
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('time-to-live', ATTRIBUTE, 'int', 'Time-to-live-range',
                None, None,
                [('1', '255')], [],
                '''                Time to live
                ''',
                'time_to_live',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'l2tpv3-encapsulation',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses.PseudowireClass.BackupDisableDelay' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses.PseudowireClass.BackupDisableDelay', REFERENCE_CLASS,
            '''Back Up Pseudowire class''',
            False, 
            [
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'BackupDisable', 'Backup-disable',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BackupDisable',
                [], [],
                '''                Delay or Never
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable-backup', ATTRIBUTE, 'int', 'Backup-disable-delay-range',
                None, None,
                [('0', '180')], [],
                '''                Disable backup delay
                ''',
                'disable_backup',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'backup-disable-delay',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.Sequencing' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.Sequencing', REFERENCE_CLASS,
            '''Sequencing''',
            False, 
            [
            _MetaInfoClassMember('sequencing', REFERENCE_ENUM_CLASS, 'MplsSequencing', 'Mpls-sequencing',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MplsSequencing',
                [], [],
                '''                Sequencing
                ''',
                'sequencing',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value='Cisco_IOS_XR_l2vpn_cfg.MplsSequencing.off'),
            _MetaInfoClassMember('resync-threshold', ATTRIBUTE, 'int', 'Resync-threshold-range',
                None, None,
                [('5', '65535')], [],
                '''                Out of sequence threshold
                ''',
                'resync_threshold',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="5"),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'sequencing',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.MplsRedundancy' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.MplsRedundancy', REFERENCE_CLASS,
            '''Redundancy options for MPLS encapsulation''',
            False, 
            [
            _MetaInfoClassMember('redundancy-one-way', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Force one-way PW redundancy behavior in
                Redundancy Group
                ''',
                'redundancy_one_way',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('redundancy-initial-delay', ATTRIBUTE, 'int', 'Pw-redundancy-initial-delay-range',
                None, None,
                [('0', '120')], [],
                '''                Initial delay before activating the
                redundant PW, in seconds
                ''',
                'redundancy_initial_delay',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mpls-redundancy',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.PreferredPath' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.PreferredPath', REFERENCE_CLASS,
            '''Preferred path''',
            False, 
            [
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'PreferredPath', 'Preferred-path',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'PreferredPath',
                [], [],
                '''                Preferred Path Type
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-tunnel-number', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '65535')], [],
                '''                Interface Tunnel number for preferred path
                ''',
                'interface_tunnel_number',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('fallback-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Fallback disable
                ''',
                'fallback_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('path-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 60)], [],
                '''                Name of the SR TE Policy or IFName
                ''',
                'path_name',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'preferred-path',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.LoadBalanceGroup.FlowLabelLoadBalance' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.LoadBalanceGroup.FlowLabelLoadBalance', REFERENCE_CLASS,
            '''Enable Flow Label based load balancing''',
            False, 
            [
            _MetaInfoClassMember('flow-label', REFERENCE_ENUM_CLASS, 'FlowLabelLoadBalance', 'Flow-label-load-balance',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'FlowLabelLoadBalance',
                [], [],
                '''                Flow Label load balance type
                ''',
                'flow_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('static', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Static Flow Label
                ''',
                'static',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'flow-label-load-balance',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.LoadBalanceGroup' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.LoadBalanceGroup', REFERENCE_CLASS,
            '''Load Balancing''',
            False, 
            [
            _MetaInfoClassMember('flow-label-load-balance', REFERENCE_CLASS, 'FlowLabelLoadBalance', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.LoadBalanceGroup.FlowLabelLoadBalance',
                [], [],
                '''                Enable Flow Label based load balancing
                ''',
                'flow_label_load_balance',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('flow-label-load-balance-code', REFERENCE_ENUM_CLASS, 'FlowLabelTlvCode', 'Flow-label-tlv-code',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'FlowLabelTlvCode',
                [], [],
                '''                Enable Legacy Flow Label TLV code
                ''',
                'flow_label_load_balance_code',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pw-label-load-balance', REFERENCE_ENUM_CLASS, 'LoadBalance', 'Load-balance',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'LoadBalance',
                [], [],
                '''                Enable PW Label based Load Balancing
                ''',
                'pw_label_load_balance',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'load-balance-group',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation', REFERENCE_CLASS,
            '''MPLS encapsulation''',
            False, 
            [
            _MetaInfoClassMember('sequencing', REFERENCE_CLASS, 'Sequencing', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.Sequencing',
                [], [],
                '''                Sequencing
                ''',
                'sequencing',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mpls-redundancy', REFERENCE_CLASS, 'MplsRedundancy', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.MplsRedundancy',
                [], [],
                '''                Redundancy options for MPLS encapsulation
                ''',
                'mpls_redundancy',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('preferred-path', REFERENCE_CLASS, 'PreferredPath', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.PreferredPath',
                [], [],
                '''                Preferred path
                ''',
                'preferred_path',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('load-balance-group', REFERENCE_CLASS, 'LoadBalanceGroup', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.LoadBalanceGroup',
                [], [],
                '''                Load Balancing
                ''',
                'load_balance_group',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pw-switching-tlv', REFERENCE_ENUM_CLASS, 'PwSwitchingPointTlv', 'Pw-switching-point-tlv',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'PwSwitchingPointTlv',
                [], [],
                '''                Pseudowire Switching Point Tlv
                ''',
                'pw_switching_tlv',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('static-tag-rewrite', ATTRIBUTE, 'int', 'Tag-rewrite-range',
                None, None,
                [('1', '4094')], [],
                '''                Static Tag rewrite
                ''',
                'static_tag_rewrite',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('signaling-protocol', REFERENCE_ENUM_CLASS, 'MplsSignalingProtocol', 'Mpls-signaling-protocol',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MplsSignalingProtocol',
                [], [],
                '''                MPLS signaling protocol
                ''',
                'signaling_protocol',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value='Cisco_IOS_XR_l2vpn_cfg.MplsSignalingProtocol.ldp'),
            _MetaInfoClassMember('vccv-type', REFERENCE_ENUM_CLASS, 'VccvVerification', 'Vccv-verification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'VccvVerification',
                [], [],
                '''                VCCV verification type
                ''',
                'vccv_type',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value='Cisco_IOS_XR_l2vpn_cfg.VccvVerification.lsp_ping'),
            _MetaInfoClassMember('source-address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Source IP address
                ''',
                'source_address',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('transport-mode', REFERENCE_ENUM_CLASS, 'TransportMode', 'Transport-mode',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'TransportMode',
                [], [],
                '''                Transport mode
                ''',
                'transport_mode',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable MPLS encapsulation
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('control-word', REFERENCE_ENUM_CLASS, 'ControlWord', 'Control-word',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'ControlWord',
                [], [],
                '''                Enable control word
                ''',
                'control_word',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mpls-encapsulation',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses.PseudowireClass' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses.PseudowireClass', REFERENCE_LIST,
            '''Pseudowire class''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the pseudowire class
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('l2tpv3-encapsulation', REFERENCE_CLASS, 'L2tpv3Encapsulation', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation',
                [], [],
                '''                L2TPv3 encapsulation
                ''',
                'l2tpv3_encapsulation',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('backup-disable-delay', REFERENCE_CLASS, 'BackupDisableDelay', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses.PseudowireClass.BackupDisableDelay',
                [], [],
                '''                Back Up Pseudowire class
                ''',
                'backup_disable_delay',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mpls-encapsulation', REFERENCE_CLASS, 'MplsEncapsulation', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation',
                [], [],
                '''                MPLS encapsulation
                ''',
                'mpls_encapsulation',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mac-withdraw', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable backup MAC withdraw
                ''',
                'mac_withdraw',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable pseudowire class
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-class',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.PseudowireClasses' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.PseudowireClasses', REFERENCE_CLASS,
            '''List of pseudowire classes''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-class', REFERENCE_LIST, 'PseudowireClass', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses.PseudowireClass',
                [], [],
                '''                Pseudowire class
                ''',
                'pseudowire_class',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-classes',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.VlanSwitchPorts.VlanSwitchPort' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.VlanSwitchPorts.VlanSwitchPort', REFERENCE_LIST,
            '''VLAN Switched Port''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Interface name
                ''',
                'interface_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-switch-port',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.VlanSwitchPorts' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.VlanSwitchPorts', REFERENCE_CLASS,
            '''List of VLAN Switched Ports''',
            False, 
            [
            _MetaInfoClassMember('vlan-switch-port', REFERENCE_LIST, 'VlanSwitchPort', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.VlanSwitchPorts.VlanSwitchPort',
                [], [],
                '''                VLAN Switched Port
                ''',
                'vlan_switch_port',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-switch-ports',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.VniRanges' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.VniRanges', REFERENCE_CLASS,
            '''Configure VLAN Switch VxLAN Ethernet VPN-ID
ranges''',
            False, 
            [
            _MetaInfoClassMember('vni-range1-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of VNI range #1
                ''',
                'vni_range1_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range1-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of VNI range #1
                ''',
                'vni_range1_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range2-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of VNI range #2
                ''',
                'vni_range2_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range2-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of VNI range #2
                ''',
                'vni_range2_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range3-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of VNI range #3
                ''',
                'vni_range3_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range3-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of VNI range #3
                ''',
                'vni_range3_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range4-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of VNI range #4
                ''',
                'vni_range4_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range4-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of VNI range #4
                ''',
                'vni_range4_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range5-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of VNI range #5
                ''',
                'vni_range5_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range5-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of VNI range #5
                ''',
                'vni_range5_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range6-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of VNI range #6
                ''',
                'vni_range6_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range6-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of VNI range #6
                ''',
                'vni_range6_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range7-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of VNI range #7
                ''',
                'vni_range7_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range7-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of VNI range #7
                ''',
                'vni_range7_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range8-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of VNI range #8
                ''',
                'vni_range8_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range8-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of VNI range #8
                ''',
                'vni_range8_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range9-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of VNI range #9
                ''',
                'vni_range9_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-range9-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of VNI range #9
                ''',
                'vni_range9_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vni-ranges',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.VlanRanges' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.VlanRanges', REFERENCE_CLASS,
            '''Configure VLAN Switch VLAN ranges''',
            False, 
            [
            _MetaInfoClassMember('vlan-range1-min', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Minimum value of VLAN range #1
                ''',
                'vlan_range1_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range1-max', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Maximum value of VLAN range #1
                ''',
                'vlan_range1_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range2-min', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Minimum value of VLAN range #2
                ''',
                'vlan_range2_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range2-max', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Maximum value of VLAN range #2
                ''',
                'vlan_range2_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range3-min', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Minimum value of VLAN range #3
                ''',
                'vlan_range3_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range3-max', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Maximum value of VLAN range #3
                ''',
                'vlan_range3_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range4-min', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Minimum value of VLAN range #4
                ''',
                'vlan_range4_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range4-max', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Maximum value of VLAN range #4
                ''',
                'vlan_range4_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range5-min', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Minimum value of VLAN range #5
                ''',
                'vlan_range5_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range5-max', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Maximum value of VLAN range #5
                ''',
                'vlan_range5_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range6-min', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Minimum value of VLAN range #6
                ''',
                'vlan_range6_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range6-max', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Maximum value of VLAN range #6
                ''',
                'vlan_range6_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range7-min', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Minimum value of VLAN range #7
                ''',
                'vlan_range7_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range7-max', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Maximum value of VLAN range #7
                ''',
                'vlan_range7_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range8-min', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Minimum value of VLAN range #8
                ''',
                'vlan_range8_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range8-max', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Maximum value of VLAN range #8
                ''',
                'vlan_range8_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range9-min', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Minimum value of VLAN range #9
                ''',
                'vlan_range9_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-range9-max', ATTRIBUTE, 'int', 'L2vpn-vs-vlan-tag',
                None, None,
                [('1', '4094')], [],
                '''                Maximum value of VLAN range #9
                ''',
                'vlan_range9_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-ranges',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.RoutedInterfaceRanges' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.RoutedInterfaceRanges', REFERENCE_CLASS,
            '''Configure VLAN Switch Routed BVI Interface
ranges''',
            False, 
            [
            _MetaInfoClassMember('interface-range1-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of Interface range #1
                ''',
                'interface_range1_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range1-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of Interface range #1
                ''',
                'interface_range1_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range2-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of Interface range #2
                ''',
                'interface_range2_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range2-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of Interface range #2
                ''',
                'interface_range2_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range3-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of Interface range #3
                ''',
                'interface_range3_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range3-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of Interface range #3
                ''',
                'interface_range3_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range4-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of Interface range #4
                ''',
                'interface_range4_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range4-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of Interface range #4
                ''',
                'interface_range4_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range5-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of Interface range #5
                ''',
                'interface_range5_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range5-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of Interface range #5
                ''',
                'interface_range5_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range6-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of Interface range #6
                ''',
                'interface_range6_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range6-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of Interface range #6
                ''',
                'interface_range6_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range7-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of Interface range #7
                ''',
                'interface_range7_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range7-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of Interface range #7
                ''',
                'interface_range7_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range8-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of Interface range #8
                ''',
                'interface_range8_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range8-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of Interface range #8
                ''',
                'interface_range8_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range9-min', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Minimum value of Interface range #9
                ''',
                'interface_range9_min',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-range9-max', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '4294967295')], [],
                '''                Maximum value of Interface range #9
                ''',
                'interface_range9_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'routed-interface-ranges',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl.StormControlUnit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl.StormControlUnit', REFERENCE_CLASS,
            '''Specify units for Storm Control Configuration''',
            False, 
            [
            _MetaInfoClassMember('kbits-per-sec', ATTRIBUTE, 'int', 'Storm-control-kbps-range',
                None, None,
                [('64', '1280000')], [],
                '''                Kilobits Per Second, PktsPerSec and KbitsPerSec
                cannot be configured together
                ''',
                'kbits_per_sec',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pkts-per-sec', ATTRIBUTE, 'int', 'Storm-control-pps-range',
                None, None,
                [('1', '160000')], [],
                '''                Packets Per Second, PktsPerSec and KbitsPerSec
                cannot be configured together
                ''',
                'pkts_per_sec',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'storm-control-unit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl', REFERENCE_LIST,
            '''Storm Control Type''',
            False, 
            [
            _MetaInfoClassMember('sctype', REFERENCE_ENUM_CLASS, 'StormControl', 'Storm-control',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'StormControl',
                [], [],
                '''                Storm Control Type
                ''',
                'sctype',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('storm-control-unit', REFERENCE_CLASS, 'StormControlUnit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl.StormControlUnit',
                [], [],
                '''                Specify units for Storm Control Configuration
                ''',
                'storm_control_unit',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-storm-control',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls', REFERENCE_CLASS,
            '''Storm Control''',
            False, 
            [
            _MetaInfoClassMember('bd-storm-control', REFERENCE_LIST, 'BdStormControl', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl',
                [], [],
                '''                Storm Control Type
                ''',
                'bd_storm_control',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-storm-controls',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses.MemberVniStaticMacAddress' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses.MemberVniStaticMacAddress', REFERENCE_LIST,
            '''Static Mac Address Configuration''',
            False, 
            [
            _MetaInfoClassMember('mac-address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'mac_address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('next-hop-ip', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Enable Static Mac Address Configuration
                ''',
                'next_hop_ip',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'member-vni-static-mac-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses', REFERENCE_CLASS,
            '''Static Mac Address Table''',
            False, 
            [
            _MetaInfoClassMember('member-vni-static-mac-address', REFERENCE_LIST, 'MemberVniStaticMacAddress', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses.MemberVniStaticMacAddress',
                [], [],
                '''                Static Mac Address Configuration
                ''',
                'member_vni_static_mac_address',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'member-vni-static-mac-addresses',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni', REFERENCE_LIST,
            '''Bridge Domain Member VxLAN Network Identifier''',
            False, 
            [
            _MetaInfoClassMember('vni', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '16777215')], [],
                '''                VxLAN Network Identifier number
                ''',
                'vni',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('member-vni-static-mac-addresses', REFERENCE_CLASS, 'MemberVniStaticMacAddresses', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses',
                [], [],
                '''                Static Mac Address Table
                ''',
                'member_vni_static_mac_addresses',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'member-vni',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis', REFERENCE_CLASS,
            '''Bridge Domain VxLAN Network Identifier Table''',
            False, 
            [
            _MetaInfoClassMember('member-vni', REFERENCE_LIST, 'MemberVni', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni',
                [], [],
                '''                Bridge Domain Member VxLAN Network Identifier
                ''',
                'member_vni',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'member-vnis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacLimit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacLimit', REFERENCE_CLASS,
            '''MAC-Limit configuration commands''',
            False, 
            [
            _MetaInfoClassMember('bd-mac-limit-action', REFERENCE_ENUM_CLASS, 'MacLimitAction', 'Mac-limit-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLimitAction',
                [], [],
                '''                MAC address limit enforcement action
                ''',
                'bd_mac_limit_action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-limit-notif', REFERENCE_ENUM_CLASS, 'MacNotification', 'Mac-notification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacNotification',
                [], [],
                '''                Mac Address Limit Notification
                ''',
                'bd_mac_limit_notif',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-limit-max', ATTRIBUTE, 'int', 'Mac-limit-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Number of MAC addresses after which MAC
                limit action is taken
                ''',
                'bd_mac_limit_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-mac-limit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters.BdMacFilter' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters.BdMacFilter', REFERENCE_LIST,
            '''Static MAC address''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('drop', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                MAC address for filtering
                ''',
                'drop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-mac-filter',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters', REFERENCE_CLASS,
            '''Filter Mac Address''',
            False, 
            [
            _MetaInfoClassMember('bd-mac-filter', REFERENCE_LIST, 'BdMacFilter', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters.BdMacFilter',
                [], [],
                '''                Static MAC address
                ''',
                'bd_mac_filter',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-mac-filters',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.MacSecure' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.MacSecure', REFERENCE_CLASS,
            '''MAC Secure''',
            False, 
            [
            _MetaInfoClassMember('logging', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                MAC Secure Logging
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable MAC Secure
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('threshold', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                MAC Secure Threshold
                ''',
                'threshold',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('action', REFERENCE_ENUM_CLASS, 'MacSecureAction', 'Mac-secure-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacSecureAction',
                [], [],
                '''                MAC secure enforcement action
                ''',
                'action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('shutdown-recovery-timer', ATTRIBUTE, 'int', 'Mac-secure-shutdown-recovery-time-range',
                None, None,
                [('10', '3600')], [],
                '''                MAC Secure Shutdown Recovery Timer
                ''',
                'shutdown_recovery_timer',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mac-secure',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacAging' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacAging', REFERENCE_CLASS,
            '''MAC-Aging configuration commands''',
            False, 
            [
            _MetaInfoClassMember('bd-mac-aging-type', REFERENCE_ENUM_CLASS, 'MacAging', 'Mac-aging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacAging',
                [], [],
                '''                MAC address aging type
                ''',
                'bd_mac_aging_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-aging-time', ATTRIBUTE, 'int', 'Mac-aging-range',
                None, None,
                [('300', '30000')], [],
                '''                Mac Aging Time
                ''',
                'bd_mac_aging_time',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-mac-aging',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac', REFERENCE_CLASS,
            '''MAC configuration commands''',
            False, 
            [
            _MetaInfoClassMember('bd-mac-limit', REFERENCE_CLASS, 'BdMacLimit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacLimit',
                [], [],
                '''                MAC-Limit configuration commands
                ''',
                'bd_mac_limit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-filters', REFERENCE_CLASS, 'BdMacFilters', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters',
                [], [],
                '''                Filter Mac Address
                ''',
                'bd_mac_filters',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mac-secure', REFERENCE_CLASS, 'MacSecure', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.MacSecure',
                [], [],
                '''                MAC Secure
                ''',
                'mac_secure',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-aging', REFERENCE_CLASS, 'BdMacAging', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacAging',
                [], [],
                '''                MAC-Aging configuration commands
                ''',
                'bd_mac_aging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-withdraw-relay', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Mac withdraw sent from access PW to access PW
                ''',
                'bd_mac_withdraw_relay',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-withdraw-access-pw-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                MAC withdraw on Access PW
                ''',
                'bd_mac_withdraw_access_pw_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-port-down-flush', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable MAC Flush when Port goes Down
                ''',
                'bd_mac_port_down_flush',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-withdraw', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable Mac Withdraw
                ''',
                'bd_mac_withdraw',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-withdraw-behavior', REFERENCE_ENUM_CLASS, 'MacWithdrawBehavior', 'Mac-withdraw-behavior',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacWithdrawBehavior',
                [], [],
                '''                MAC withdraw sent on bridge port down
                ''',
                'bd_mac_withdraw_behavior',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-mac-learn', REFERENCE_ENUM_CLASS, 'BdmacLearn', 'Bdmac-learn',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BdmacLearn',
                [], [],
                '''                Mac Learning Type
                ''',
                'bd_mac_learn',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-mac',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.NvSatellite' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.NvSatellite', REFERENCE_CLASS,
            '''nV Satellite''',
            False, 
            [
            _MetaInfoClassMember('offload-ipv4-multicast-enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IPv4 Multicast Offload to Satellite
                Nodes
                ''',
                'offload_ipv4_multicast_enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable nV Satellite Settings
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'nv-satellite',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeSplitHorizonGroup' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeSplitHorizonGroup', REFERENCE_CLASS,
            '''Split Horizon Group''',
            False, 
            [
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable split horizon group
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge-split-horizon-group',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings.PbbStaticMacMapping' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings.PbbStaticMacMapping', REFERENCE_LIST,
            '''PBB Static Mac Address Mapping
Configuration''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pbb-static-mac-mapping-bmac', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static backbone MAC address to map with
                ''',
                'pbb_static_mac_mapping_bmac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-static-mac-mapping',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings', REFERENCE_CLASS,
            '''PBB Static Mac Address Mapping Table''',
            False, 
            [
            _MetaInfoClassMember('pbb-static-mac-mapping', REFERENCE_LIST, 'PbbStaticMacMapping', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings.PbbStaticMacMapping',
                [], [],
                '''                PBB Static Mac Address Mapping
                Configuration
                ''',
                'pbb_static_mac_mapping',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-static-mac-mappings',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeDhcpProfile' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeDhcpProfile', REFERENCE_CLASS,
            '''Attach a DHCP profile''',
            False, 
            [
            _MetaInfoClassMember('profile-id', REFERENCE_ENUM_CLASS, 'InterfaceProfile', 'Interface-profile',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceProfile',
                [], [],
                '''                Set the snooping profile
                ''',
                'profile_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dhcp-snooping-id', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Disable DHCP snooping
                ''',
                'dhcp_snooping_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge-dhcp-profile',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacLimit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacLimit', REFERENCE_CLASS,
            '''MAC-Limit configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pbb-edge-mac-limit-action', REFERENCE_ENUM_CLASS, 'MacLimitAction', 'Mac-limit-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLimitAction',
                [], [],
                '''                MAC address limit enforcement action
                ''',
                'pbb_edge_mac_limit_action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac-limit-max', ATTRIBUTE, 'int', 'Mac-limit-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Number of MAC addresses after which MAC
                limit action is taken
                ''',
                'pbb_edge_mac_limit_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac-limit-notif', REFERENCE_ENUM_CLASS, 'MacNotification', 'Mac-notification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacNotification',
                [], [],
                '''                MAC address limit notification action
                ''',
                'pbb_edge_mac_limit_notif',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge-mac-limit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacAging' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacAging', REFERENCE_CLASS,
            '''MAC-Aging configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pbb-edge-mac-aging-type', REFERENCE_ENUM_CLASS, 'MacAging', 'Mac-aging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacAging',
                [], [],
                '''                MAC address aging type
                ''',
                'pbb_edge_mac_aging_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac-aging-time', ATTRIBUTE, 'int', 'Mac-aging-range',
                None, None,
                [('300', '30000')], [],
                '''                Mac Aging Time
                ''',
                'pbb_edge_mac_aging_time',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge-mac-aging',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacSecure' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacSecure', REFERENCE_CLASS,
            '''MAC Secure''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable MAC Secure
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('accept-shutdown', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Accept Virtual instance port to be
                shutdown on mac violation
                ''',
                'accept_shutdown',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                MAC Secure Logging
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable MAC Secure
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('action', REFERENCE_ENUM_CLASS, 'MacSecureAction', 'Mac-secure-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacSecureAction',
                [], [],
                '''                MAC secure enforcement action
                ''',
                'action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge-mac-secure',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac', REFERENCE_CLASS,
            '''MAC configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pbb-edge-mac-limit', REFERENCE_CLASS, 'PbbEdgeMacLimit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacLimit',
                [], [],
                '''                MAC-Limit configuration commands
                ''',
                'pbb_edge_mac_limit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac-aging', REFERENCE_CLASS, 'PbbEdgeMacAging', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacAging',
                [], [],
                '''                MAC-Aging configuration commands
                ''',
                'pbb_edge_mac_aging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac-secure', REFERENCE_CLASS, 'PbbEdgeMacSecure', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacSecure',
                [], [],
                '''                MAC Secure
                ''',
                'pbb_edge_mac_secure',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac-learning', REFERENCE_ENUM_CLASS, 'MacLearn', 'Mac-learn',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLearn',
                [], [],
                '''                Enable Mac Learning
                ''',
                'pbb_edge_mac_learning',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge-mac',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge', REFERENCE_LIST,
            '''Configure BD as PBB Edge with ISID and
associated PBB Core BD''',
            False, 
            [
            _MetaInfoClassMember('isid', ATTRIBUTE, 'int', 'Pbbisid-range',
                None, None,
                [('256', '16777214')], [],
                '''                ISID
                ''',
                'isid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('core-bd-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 27)], [],
                '''                Core BD Name
                ''',
                'core_bd_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pbb-edge-split-horizon-group', REFERENCE_CLASS, 'PbbEdgeSplitHorizonGroup', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeSplitHorizonGroup',
                [], [],
                '''                Split Horizon Group
                ''',
                'pbb_edge_split_horizon_group',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-static-mac-mappings', REFERENCE_CLASS, 'PbbStaticMacMappings', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings',
                [], [],
                '''                PBB Static Mac Address Mapping Table
                ''',
                'pbb_static_mac_mappings',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-dhcp-profile', REFERENCE_CLASS, 'PbbEdgeDhcpProfile', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeDhcpProfile',
                [], [],
                '''                Attach a DHCP profile
                ''',
                'pbb_edge_dhcp_profile',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-mac', REFERENCE_CLASS, 'PbbEdgeMac', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac',
                [], [],
                '''                MAC configuration commands
                ''',
                'pbb_edge_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-edge-igmp-profile', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a IGMP Snooping profile
                ''',
                'pbb_edge_igmp_profile',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('unknown-unicast-bmac', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Configure Unknown Unicast BMAC address for
                PBB Edge Port
                ''',
                'unknown_unicast_bmac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edge',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges', REFERENCE_CLASS,
            '''PBB Edge''',
            False, 
            [
            _MetaInfoClassMember('pbb-edge', REFERENCE_LIST, 'PbbEdge', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge',
                [], [],
                '''                Configure BD as PBB Edge with ISID and
                associated PBB Core BD
                ''',
                'pbb_edge',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-edges',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacAging' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacAging', REFERENCE_CLASS,
            '''MAC-Aging configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pbb-core-mac-aging-type', REFERENCE_ENUM_CLASS, 'MacAging', 'Mac-aging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacAging',
                [], [],
                '''                MAC address aging type
                ''',
                'pbb_core_mac_aging_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-mac-aging-time', ATTRIBUTE, 'int', 'Mac-aging-range',
                None, None,
                [('300', '30000')], [],
                '''                Mac Aging Time
                ''',
                'pbb_core_mac_aging_time',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core-mac-aging',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacLimit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacLimit', REFERENCE_CLASS,
            '''MAC-Limit configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pbb-core-mac-limit-max', ATTRIBUTE, 'int', 'Mac-limit-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Number of MAC addresses after which MAC
                limit action is taken
                ''',
                'pbb_core_mac_limit_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-mac-limit-notif', REFERENCE_ENUM_CLASS, 'MacNotification', 'Mac-notification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacNotification',
                [], [],
                '''                MAC address limit notification action
                ''',
                'pbb_core_mac_limit_notif',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-mac-limit-action', REFERENCE_ENUM_CLASS, 'MacLimitAction', 'Mac-limit-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLimitAction',
                [], [],
                '''                MAC address limit enforcement action
                ''',
                'pbb_core_mac_limit_action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core-mac-limit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac', REFERENCE_CLASS,
            '''MAC configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pbb-core-mac-aging', REFERENCE_CLASS, 'PbbCoreMacAging', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacAging',
                [], [],
                '''                MAC-Aging configuration commands
                ''',
                'pbb_core_mac_aging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-mac-limit', REFERENCE_CLASS, 'PbbCoreMacLimit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacLimit',
                [], [],
                '''                MAC-Limit configuration commands
                ''',
                'pbb_core_mac_limit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-mac-learning', REFERENCE_ENUM_CLASS, 'MacLearn', 'Mac-learn',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLearn',
                [], [],
                '''                Enable Mac Learning
                ''',
                'pbb_core_mac_learning',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core-mac',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis.PbbCoreEvi' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis.PbbCoreEvi', REFERENCE_LIST,
            '''PBB Core EVI''',
            False, 
            [
            _MetaInfoClassMember('eviid', ATTRIBUTE, 'int', 'Vpnid-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Ethernet VPN ID
                ''',
                'eviid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core-evi',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis', REFERENCE_CLASS,
            '''PBB Core EVI Table''',
            False, 
            [
            _MetaInfoClassMember('pbb-core-evi', REFERENCE_LIST, 'PbbCoreEvi', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis.PbbCoreEvi',
                [], [],
                '''                PBB Core EVI
                ''',
                'pbb_core_evi',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core-evis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreDhcpProfile' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreDhcpProfile', REFERENCE_CLASS,
            '''Attach a DHCP profile''',
            False, 
            [
            _MetaInfoClassMember('profile-id', REFERENCE_ENUM_CLASS, 'InterfaceProfile', 'Interface-profile',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceProfile',
                [], [],
                '''                Set the snooping profile
                ''',
                'profile_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dhcp-snooping-id', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Disable DHCP snooping
                ''',
                'dhcp_snooping_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core-dhcp-profile',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore', REFERENCE_CLASS,
            '''PBB Core''',
            False, 
            [
            _MetaInfoClassMember('pbb-core-mac', REFERENCE_CLASS, 'PbbCoreMac', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac',
                [], [],
                '''                MAC configuration commands
                ''',
                'pbb_core_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-evis', REFERENCE_CLASS, 'PbbCoreEvis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis',
                [], [],
                '''                PBB Core EVI Table
                ''',
                'pbb_core_evis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-dhcp-profile', REFERENCE_CLASS, 'PbbCoreDhcpProfile', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreDhcpProfile',
                [], [],
                '''                Attach a DHCP profile
                ''',
                'pbb_core_dhcp_profile',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-mmrp-flood-optimization', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enabling MMRP PBB-VPLS Flood Optimization
                ''',
                'pbb_core_mmrp_flood_optimization',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-id', ATTRIBUTE, 'int', 'Pbbvid-range',
                None, None,
                [('1', '4094')], [],
                '''                VLAN ID to push
                ''',
                'vlan_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core-igmp-profile', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a IGMP Snooping profile
                ''',
                'pbb_core_igmp_profile',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Bridge Domain PBB Core Configuration
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb-core',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb', REFERENCE_CLASS,
            '''Bridge Domain PBB''',
            False, 
            [
            _MetaInfoClassMember('pbb-edges', REFERENCE_CLASS, 'PbbEdges', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges',
                [], [],
                '''                PBB Edge
                ''',
                'pbb_edges',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb-core', REFERENCE_CLASS, 'PbbCore', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore',
                [], [],
                '''                PBB Core
                ''',
                'pbb_core',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-pbb',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainEvis.BridgeDomainEvi' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainEvis.BridgeDomainEvi', REFERENCE_LIST,
            '''Bridge Domain MPLS EVPN''',
            False, 
            [
            _MetaInfoClassMember('vpn-id', ATTRIBUTE, 'int', 'Evpnvpnid-range',
                None, None,
                [('1', '65534')], [],
                '''                MPLS Ethernet VPN-ID
                ''',
                'vpn_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-evi',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainEvis' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainEvis', REFERENCE_CLASS,
            '''Bridge Domain EVI Table''',
            False, 
            [
            _MetaInfoClassMember('bridge-domain-evi', REFERENCE_LIST, 'BridgeDomainEvi', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainEvis.BridgeDomainEvi',
                [], [],
                '''                Bridge Domain MPLS EVPN
                ''',
                'bridge_domain_evi',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-evis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses.AccessVfiPseudowireStaticMacAddress' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses.AccessVfiPseudowireStaticMacAddress', REFERENCE_LIST,
            '''Static Mac Address Configuration''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'access-vfi-pseudowire-static-mac-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses', REFERENCE_CLASS,
            '''Static Mac Address Table''',
            False, 
            [
            _MetaInfoClassMember('access-vfi-pseudowire-static-mac-address', REFERENCE_LIST, 'AccessVfiPseudowireStaticMacAddress', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses.AccessVfiPseudowireStaticMacAddress',
                [], [],
                '''                Static Mac Address Configuration
                ''',
                'access_vfi_pseudowire_static_mac_address',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'access-vfi-pseudowire-static-mac-addresses',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire', REFERENCE_LIST,
            '''Pseudowire configuration''',
            False, 
            [
            _MetaInfoClassMember('neighbor', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Neighbor IP address
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pseudowire-id', ATTRIBUTE, 'int', 'Pseudowire-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Pseudowire ID
                ''',
                'pseudowire_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('access-vfi-pseudowire-static-mac-addresses', REFERENCE_CLASS, 'AccessVfiPseudowireStaticMacAddresses', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses',
                [], [],
                '''                Static Mac Address Table
                ''',
                'access_vfi_pseudowire_static_mac_addresses',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('access-vfi-pw-class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Pseudowire class template name to use for
                this pseudowire
                ''',
                'access_vfi_pw_class',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'access-vfi-pseudowire',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires', REFERENCE_CLASS,
            '''List of pseudowires''',
            False, 
            [
            _MetaInfoClassMember('access-vfi-pseudowire', REFERENCE_LIST, 'AccessVfiPseudowire', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire',
                [], [],
                '''                Pseudowire configuration
                ''',
                'access_vfi_pseudowire',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'access-vfi-pseudowires',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi', REFERENCE_LIST,
            '''Name of the Acess Virtual Forwarding
Interface''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the AccessVirtual Forwarding
                Interface
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('access-vfi-pseudowires', REFERENCE_CLASS, 'AccessVfiPseudowires', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires',
                [], [],
                '''                List of pseudowires
                ''',
                'access_vfi_pseudowires',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('access-vfi-shutdown', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                shutdown the AccessVfi
                ''',
                'access_vfi_shutdown',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'access-vfi',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis', REFERENCE_CLASS,
            '''Specify the access virtual forwarding
interface name''',
            False, 
            [
            _MetaInfoClassMember('access-vfi', REFERENCE_LIST, 'AccessVfi', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi',
                [], [],
                '''                Name of the Acess Virtual Forwarding
                Interface
                ''',
                'access_vfi',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'access-vfis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai.PseudowireDaiAddressValidation' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai.PseudowireDaiAddressValidation', REFERENCE_CLASS,
            '''Address Validation''',
            False, 
            [
            _MetaInfoClassMember('ipv4-verification', REFERENCE_ENUM_CLASS, 'L2vpnVerification', 'L2vpn-verification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnVerification',
                [], [],
                '''                IPv4 Verification
                ''',
                'ipv4_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('destination-mac-verification', REFERENCE_ENUM_CLASS, 'L2vpnVerification', 'L2vpn-verification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnVerification',
                [], [],
                '''                Destination MAC Verification
                ''',
                'destination_mac_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('source-mac-verification', REFERENCE_ENUM_CLASS, 'L2vpnVerification', 'L2vpn-verification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnVerification',
                [], [],
                '''                Source MAC Verification
                ''',
                'source_mac_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-dai-address-validation',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai', REFERENCE_CLASS,
            '''Access Pseudowire Dynamic ARP Inspection''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-dai-address-validation', REFERENCE_CLASS, 'PseudowireDaiAddressValidation', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai.PseudowireDaiAddressValidation',
                [], [],
                '''                Address Validation
                ''',
                'pseudowire_dai_address_validation',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                Logging Type
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable Dynamic ARP Inspection
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Access Pseudowire Dynamic ARP
                Inspection
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-dai',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType.StormControlUnit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType.StormControlUnit', REFERENCE_CLASS,
            '''Specify units for Storm Control Configuration''',
            False, 
            [
            _MetaInfoClassMember('kbits-per-sec', ATTRIBUTE, 'int', 'Storm-control-kbps-range',
                None, None,
                [('64', '1280000')], [],
                '''                Kilobits Per Second, PktsPerSec and KbitsPerSec
                cannot be configured together
                ''',
                'kbits_per_sec',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pkts-per-sec', ATTRIBUTE, 'int', 'Storm-control-pps-range',
                None, None,
                [('1', '160000')], [],
                '''                Packets Per Second, PktsPerSec and KbitsPerSec
                cannot be configured together
                ''',
                'pkts_per_sec',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'storm-control-unit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType', REFERENCE_LIST,
            '''Storm Control Type''',
            False, 
            [
            _MetaInfoClassMember('sctype', REFERENCE_ENUM_CLASS, 'StormControl', 'Storm-control',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'StormControl',
                [], [],
                '''                Storm Control Type
                ''',
                'sctype',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('storm-control-unit', REFERENCE_CLASS, 'StormControlUnit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType.StormControlUnit',
                [], [],
                '''                Specify units for Storm Control Configuration
                ''',
                'storm_control_unit',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bdpw-storm-control-type',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes', REFERENCE_CLASS,
            '''Storm Control''',
            False, 
            [
            _MetaInfoClassMember('bdpw-storm-control-type', REFERENCE_LIST, 'BdpwStormControlType', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType',
                [], [],
                '''                Storm Control Type
                ''',
                'bdpw_storm_control_type',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bdpw-storm-control-types',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireProfile' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireProfile', REFERENCE_CLASS,
            '''Attach a DHCP profile''',
            False, 
            [
            _MetaInfoClassMember('profile-id', REFERENCE_ENUM_CLASS, 'InterfaceProfile', 'Interface-profile',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceProfile',
                [], [],
                '''                Set the snooping profile
                ''',
                'profile_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dhcp-snooping-id', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Disable DHCP snooping
                ''',
                'dhcp_snooping_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-profile',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses.BdPwStaticMacAddress' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses.BdPwStaticMacAddress', REFERENCE_LIST,
            '''Static Mac Address Configuration''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pw-static-mac-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses', REFERENCE_CLASS,
            '''Static Mac Address Table''',
            False, 
            [
            _MetaInfoClassMember('bd-pw-static-mac-address', REFERENCE_LIST, 'BdPwStaticMacAddress', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses.BdPwStaticMacAddress',
                [], [],
                '''                Static Mac Address Configuration
                ''',
                'bd_pw_static_mac_address',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pw-static-mac-addresses',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireIpSourceGuard' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireIpSourceGuard', REFERENCE_CLASS,
            '''IP Source Guard''',
            False, 
            [
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                Logging Type
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable Dynamic IP source guard
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IP Source Guard
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-ip-source-guard',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacSecure' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacSecure', REFERENCE_CLASS,
            '''MAC Secure''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable MAC Secure
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                MAC Secure Logging
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable MAC Secure
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('action', REFERENCE_ENUM_CLASS, 'MacSecureAction', 'Mac-secure-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacSecureAction',
                [], [],
                '''                MAC secure enforcement action
                ''',
                'action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('shutdown-recovery-timer', ATTRIBUTE, 'int', 'Mac-secure-shutdown-recovery-time-range',
                None, None,
                [('10', '3600')], [],
                '''                MAC Secure Shutdown Recovery Timer
                ''',
                'shutdown_recovery_timer',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-mac-secure',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacAging' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacAging', REFERENCE_CLASS,
            '''MAC-Aging configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-mac-aging-type', REFERENCE_ENUM_CLASS, 'MacAging', 'Mac-aging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacAging',
                [], [],
                '''                MAC address aging type
                ''',
                'pseudowire_mac_aging_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-aging-time', ATTRIBUTE, 'int', 'Mac-aging-range',
                None, None,
                [('300', '30000')], [],
                '''                MAC Aging Time
                ''',
                'pseudowire_mac_aging_time',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-mac-aging',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacLimit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacLimit', REFERENCE_CLASS,
            '''MAC-Limit configuration commands''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-mac-limit-action', REFERENCE_ENUM_CLASS, 'MacLimitAction', 'Mac-limit-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLimitAction',
                [], [],
                '''                Bridge Access Pseudowire MAC address limit
                enforcement action
                ''',
                'pseudowire_mac_limit_action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-limit-notif', REFERENCE_ENUM_CLASS, 'MacNotification', 'Mac-notification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacNotification',
                [], [],
                '''                MAC address limit notification action in a
                Bridge Access Pseudowire
                ''',
                'pseudowire_mac_limit_notif',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-limit-max', ATTRIBUTE, 'int', 'Mac-limit-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Number of MAC addresses on a Bridge Access
                Pseudowire after which MAC limit action is
                taken
                ''',
                'pseudowire_mac_limit_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-mac-limit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac', REFERENCE_CLASS,
            '''Bridge-domain Pseudowire MAC configuration
commands''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-mac-secure', REFERENCE_CLASS, 'PseudowireMacSecure', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacSecure',
                [], [],
                '''                MAC Secure
                ''',
                'pseudowire_mac_secure',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-aging', REFERENCE_CLASS, 'PseudowireMacAging', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacAging',
                [], [],
                '''                MAC-Aging configuration commands
                ''',
                'pseudowire_mac_aging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-limit', REFERENCE_CLASS, 'PseudowireMacLimit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacLimit',
                [], [],
                '''                MAC-Limit configuration commands
                ''',
                'pseudowire_mac_limit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-port-down-flush', REFERENCE_ENUM_CLASS, 'PortDownFlush', 'Port-down-flush',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'PortDownFlush',
                [], [],
                '''                Enable/Disable MAC Flush When Port goes
                down
                ''',
                'pseudowire_mac_port_down_flush',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Bridge-domain Pseudowire MAC configuration
                mode
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac-learning', REFERENCE_ENUM_CLASS, 'MacLearn', 'Mac-learn',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLearn',
                [], [],
                '''                Enable MAC Learning
                ''',
                'pseudowire_mac_learning',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-mac',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon.BdPwSplitHorizonGroup' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon.BdPwSplitHorizonGroup', REFERENCE_CLASS,
            '''Split Horizon Group''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable split horizon group
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pw-split-horizon-group',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon', REFERENCE_CLASS,
            '''Split Horizon''',
            False, 
            [
            _MetaInfoClassMember('bd-pw-split-horizon-group', REFERENCE_CLASS, 'BdPwSplitHorizonGroup', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon.BdPwSplitHorizonGroup',
                [], [],
                '''                Split Horizon Group
                ''',
                'bd_pw_split_horizon_group',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pw-split-horizon',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwMplsStaticLabels' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwMplsStaticLabels', REFERENCE_CLASS,
            '''MPLS static labels''',
            False, 
            [
            _MetaInfoClassMember('local-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire local static label
                ''',
                'local_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('remote-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire remote static label
                ''',
                'remote_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pw-mpls-static-labels',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires.BridgeDomainBackupPseudowire' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires.BridgeDomainBackupPseudowire', REFERENCE_LIST,
            '''Backup pseudowire configuration''',
            False, 
            [
            _MetaInfoClassMember('neighbor', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Neighbor IP address
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pseudowire-id', ATTRIBUTE, 'int', 'Pseudowire-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Pseudowire ID
                ''',
                'pseudowire_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('bridge-domain-backup-pw-class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                PW class template name to use for this
                pseudowire
                ''',
                'bridge_domain_backup_pw_class',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-backup-pseudowire',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires', REFERENCE_CLASS,
            '''List of pseudowires''',
            False, 
            [
            _MetaInfoClassMember('bridge-domain-backup-pseudowire', REFERENCE_LIST, 'BridgeDomainBackupPseudowire', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires.BridgeDomainBackupPseudowire',
                [], [],
                '''                Backup pseudowire configuration
                ''',
                'bridge_domain_backup_pseudowire',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain-backup-pseudowires',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire', REFERENCE_LIST,
            '''Pseudowire configuration''',
            False, 
            [
            _MetaInfoClassMember('neighbor', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Neighbor IP address
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pseudowire-id', ATTRIBUTE, 'int', 'Pseudowire-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Pseudowire ID
                ''',
                'pseudowire_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pseudowire-dai', REFERENCE_CLASS, 'PseudowireDai', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai',
                [], [],
                '''                Access Pseudowire Dynamic ARP Inspection
                ''',
                'pseudowire_dai',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bdpw-storm-control-types', REFERENCE_CLASS, 'BdpwStormControlTypes', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes',
                [], [],
                '''                Storm Control
                ''',
                'bdpw_storm_control_types',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-profile', REFERENCE_CLASS, 'PseudowireProfile', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireProfile',
                [], [],
                '''                Attach a DHCP profile
                ''',
                'pseudowire_profile',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-pw-static-mac-addresses', REFERENCE_CLASS, 'BdPwStaticMacAddresses', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses',
                [], [],
                '''                Static Mac Address Table
                ''',
                'bd_pw_static_mac_addresses',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-ip-source-guard', REFERENCE_CLASS, 'PseudowireIpSourceGuard', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireIpSourceGuard',
                [], [],
                '''                IP Source Guard
                ''',
                'pseudowire_ip_source_guard',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mac', REFERENCE_CLASS, 'PseudowireMac', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac',
                [], [],
                '''                Bridge-domain Pseudowire MAC configuration
                commands
                ''',
                'pseudowire_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-pw-split-horizon', REFERENCE_CLASS, 'BdPwSplitHorizon', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon',
                [], [],
                '''                Split Horizon
                ''',
                'bd_pw_split_horizon',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-pw-mpls-static-labels', REFERENCE_CLASS, 'BdPwMplsStaticLabels', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwMplsStaticLabels',
                [], [],
                '''                MPLS static labels
                ''',
                'bd_pw_mpls_static_labels',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domain-backup-pseudowires', REFERENCE_CLASS, 'BridgeDomainBackupPseudowires', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires',
                [], [],
                '''                List of pseudowires
                ''',
                'bridge_domain_backup_pseudowires',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-mld-snoop', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a MLD Snooping profile
                ''',
                'pseudowire_mld_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-igmp-snoop', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a IGMP Snooping profile
                ''',
                'pseudowire_igmp_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-flooding', REFERENCE_ENUM_CLASS, 'InterfaceTrafficFlood', 'Interface-traffic-flood',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceTrafficFlood',
                [], [],
                '''                Bridge-domain Pseudowire flooding
                ''',
                'pseudowire_flooding',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-pw-class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                PW class template name to use for this
                pseudowire
                ''',
                'bd_pw_class',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-flooding-unknown-unicast', REFERENCE_ENUM_CLASS, 'InterfaceTrafficFlood', 'Interface-traffic-flood',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceTrafficFlood',
                [], [],
                '''                Bridge-domain Pseudowire flooding Unknown
                Unicast
                ''',
                'pseudowire_flooding_unknown_unicast',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pseudowire',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires', REFERENCE_CLASS,
            '''List of pseudowires''',
            False, 
            [
            _MetaInfoClassMember('bd-pseudowire', REFERENCE_LIST, 'BdPseudowire', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire',
                [], [],
                '''                Pseudowire configuration
                ''',
                'bd_pseudowire',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pseudowires',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports.Transport' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports.Transport', REFERENCE_LIST,
            '''Multicast P2MP Transport Type''',
            False, 
            [
            _MetaInfoClassMember('transport-name', ATTRIBUTE, 'str', 'Multicast-p2mp-transport',
                None, None,
                [], [b'(RSVP_TE)'],
                '''                Transport Type
                ''',
                'transport_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('attribute-set-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 64)], [],
                '''                Multicast P2MP TE Attribute Set Name
                ''',
                'attribute_set_name',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'transport',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports', REFERENCE_CLASS,
            '''Multicast P2MP Transport''',
            False, 
            [
            _MetaInfoClassMember('transport', REFERENCE_LIST, 'Transport', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports.Transport',
                [], [],
                '''                Multicast P2MP Transport Type
                ''',
                'transport',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'transports',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings.Signaling' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings.Signaling', REFERENCE_LIST,
            '''Multicast P2MP Signaling Type''',
            False, 
            [
            _MetaInfoClassMember('signaling-name', ATTRIBUTE, 'str', 'Multicast-p2mp-signaling',
                None, None,
                [], [b'(BGP)'],
                '''                Signaling Type
                ''',
                'signaling_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'signaling',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings', REFERENCE_CLASS,
            '''Multicast P2MP Signaling Type''',
            False, 
            [
            _MetaInfoClassMember('signaling', REFERENCE_LIST, 'Signaling', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings.Signaling',
                [], [],
                '''                Multicast P2MP Signaling Type
                ''',
                'signaling',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'signalings',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp', REFERENCE_CLASS,
            '''Enable Multicast P2MP in this VFI''',
            False, 
            [
            _MetaInfoClassMember('transports', REFERENCE_CLASS, 'Transports', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports',
                [], [],
                '''                Multicast P2MP Transport
                ''',
                'transports',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('signalings', REFERENCE_CLASS, 'Signalings', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings',
                [], [],
                '''                Multicast P2MP Signaling Type
                ''',
                'signalings',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Autodiscovery P2MP
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'multicast-p2mp',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwDhcpSnoop' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwDhcpSnoop', REFERENCE_CLASS,
            '''Attach a DHCP Snooping profile''',
            False, 
            [
            _MetaInfoClassMember('profile-id', REFERENCE_ENUM_CLASS, 'InterfaceProfile', 'Interface-profile',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceProfile',
                [], [],
                '''                Set the snooping profile
                ''',
                'profile_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dhcp-snooping-id', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Disable DHCP snooping
                ''',
                'dhcp_snooping_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vfi-pw-dhcp-snoop',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwMplsStaticLabels' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwMplsStaticLabels', REFERENCE_CLASS,
            '''MPLS static labels''',
            False, 
            [
            _MetaInfoClassMember('local-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire local static label
                ''',
                'local_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('remote-static-label', ATTRIBUTE, 'int', 'Pseudowire-label-range',
                None, None,
                [('16', '1048575')], [],
                '''                Pseudowire remote static label
                ''',
                'remote_static_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vfi-pw-mpls-static-labels',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses.PseudowireStaticMacAddress' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses.PseudowireStaticMacAddress', REFERENCE_LIST,
            '''Static Mac Address Configuration''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-static-mac-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses', REFERENCE_CLASS,
            '''Static Mac Address Table''',
            False, 
            [
            _MetaInfoClassMember('pseudowire-static-mac-address', REFERENCE_LIST, 'PseudowireStaticMacAddress', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses.PseudowireStaticMacAddress',
                [], [],
                '''                Static Mac Address Configuration
                ''',
                'pseudowire_static_mac_address',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pseudowire-static-mac-addresses',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire', REFERENCE_LIST,
            '''Pseudowire configuration''',
            False, 
            [
            _MetaInfoClassMember('neighbor', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Neighbor IP address
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pseudowire-id', ATTRIBUTE, 'int', 'Pseudowire-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Pseudowire ID
                ''',
                'pseudowire_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('vfi-pw-dhcp-snoop', REFERENCE_CLASS, 'VfiPwDhcpSnoop', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwDhcpSnoop',
                [], [],
                '''                Attach a DHCP Snooping profile
                ''',
                'vfi_pw_dhcp_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfi-pw-mpls-static-labels', REFERENCE_CLASS, 'VfiPwMplsStaticLabels', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwMplsStaticLabels',
                [], [],
                '''                MPLS static labels
                ''',
                'vfi_pw_mpls_static_labels',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-static-mac-addresses', REFERENCE_CLASS, 'PseudowireStaticMacAddresses', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses',
                [], [],
                '''                Static Mac Address Table
                ''',
                'pseudowire_static_mac_addresses',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfi-pw-class', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                PW class template name to use for this
                pseudowire
                ''',
                'vfi_pw_class',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfi-pw-igmp-snoop', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a IGMP Snooping profile
                ''',
                'vfi_pw_igmp_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfi-pw-mld-snoop', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a MLD Snooping profile
                ''',
                'vfi_pw_mld_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vfi-pseudowire',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires', REFERENCE_CLASS,
            '''List of pseudowires''',
            False, 
            [
            _MetaInfoClassMember('vfi-pseudowire', REFERENCE_LIST, 'VfiPseudowire', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire',
                [], [],
                '''                Pseudowire configuration
                ''',
                'vfi_pseudowire',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vfi-pseudowires',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.VplsId' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.VplsId', REFERENCE_CLASS,
            '''VPLS ID''',
            False, 
            [
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'LdpVplsId', 'Ldp-vpls-id',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'LdpVplsId',
                [], [],
                '''                VPLS-ID Type
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Vpls-id-as-range',
                None, None,
                [('1', '65535')], [],
                '''                Two byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Vpls-id-as-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS index
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('address-index', ATTRIBUTE, 'int', 'Vpls-id-addr-index',
                None, None,
                [('0', '32767')], [],
                '''                Address index
                ''',
                'address_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vpls-id',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.FlowLabelLoadBalance' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.FlowLabelLoadBalance', REFERENCE_CLASS,
            '''Enable Flow Label based load balancing''',
            False, 
            [
            _MetaInfoClassMember('flow-label', REFERENCE_ENUM_CLASS, 'FlowLabelLoadBalance', 'Flow-label-load-balance',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'FlowLabelLoadBalance',
                [], [],
                '''                Flow Label load balance type
                ''',
                'flow_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('static', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Static Flow Label
                ''',
                'static',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'flow-label-load-balance',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol', REFERENCE_CLASS,
            '''Signaling Protocol LDP in this VFI
configuration''',
            False, 
            [
            _MetaInfoClassMember('vpls-id', REFERENCE_CLASS, 'VplsId', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.VplsId',
                [], [],
                '''                VPLS ID
                ''',
                'vpls_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('flow-label-load-balance', REFERENCE_CLASS, 'FlowLabelLoadBalance', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.FlowLabelLoadBalance',
                [], [],
                '''                Enable Flow Label based load balancing
                ''',
                'flow_label_load_balance',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable LDP as Signaling Protocol.Deletion
                of this object also causes deletion of all
                objects under LDPSignalingProtocol.
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'ldp-signaling-protocol',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpRoutePolicy' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpRoutePolicy', REFERENCE_CLASS,
            '''Route policy''',
            False, 
            [
            _MetaInfoClassMember('export', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Export route policy
                ''',
                'export',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bgp-route-policy',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteDistinguisher' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteDistinguisher', REFERENCE_CLASS,
            '''Route Distinguisher''',
            False, 
            [
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'BgpRouteDistinguisher', 'Bgp-route-distinguisher',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteDistinguisher',
                [], [],
                '''                Router Distinguisher Type
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Rdas-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Two byte or 4 byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Rdas-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS:nn (hex or decimal format)
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('addr-index', ATTRIBUTE, 'int', 'Rd-addr-index',
                None, None,
                [('0', '65535')], [],
                '''                Addr index
                ''',
                'addr_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'route-distinguisher',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol.FlowLabelLoadBalance' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol.FlowLabelLoadBalance', REFERENCE_CLASS,
            '''Enable Flow Label based load balancing''',
            False, 
            [
            _MetaInfoClassMember('flow-label', REFERENCE_ENUM_CLASS, 'FlowLabelLoadBalance', 'Flow-label-load-balance',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'FlowLabelLoadBalance',
                [], [],
                '''                Flow Label load balance type
                ''',
                'flow_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('static', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Static Flow Label
                ''',
                'static',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'flow-label-load-balance',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol', REFERENCE_CLASS,
            '''Enable Signaling Protocol BGP in this VFI''',
            False, 
            [
            _MetaInfoClassMember('flow-label-load-balance', REFERENCE_CLASS, 'FlowLabelLoadBalance', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol.FlowLabelLoadBalance',
                [], [],
                '''                Enable Flow Label based load balancing
                ''',
                'flow_label_load_balance',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('ve-range', ATTRIBUTE, 'int', 'Vedge-range',
                None, None,
                [('11', '100')], [],
                '''                Local Virtual Edge Block Configurable
                Range
                ''',
                've_range',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('veid', ATTRIBUTE, 'int', 'Veid-range',
                None, None,
                [('1', '16384')], [],
                '''                Local Virtual Edge Identifier
                ''',
                'veid',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable BGP as Signaling Protocol
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bgp-signaling-protocol',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.TwoByteAsOrFourByteAs' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.TwoByteAsOrFourByteAs', REFERENCE_LIST,
            '''two byte as or four byte as''',
            False, 
            [
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Rdas-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Two byte or 4 byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Rdas-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS:nn (hex or decimal format)
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'two-byte-as-or-four-byte-as',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_when=True,
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.Ipv4Address' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.Ipv4Address', REFERENCE_LIST,
            '''ipv4 address''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('addr-index', ATTRIBUTE, 'int', 'Rd-addr-index',
                None, None,
                [('0', '65535')], [],
                '''                Addr index
                ''',
                'addr_index',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'ipv4-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_when=True,
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget', REFERENCE_LIST,
            '''Name of the Route Target''',
            False, 
            [
            _MetaInfoClassMember('role', REFERENCE_ENUM_CLASS, 'BgpRouteTargetRole', 'Bgp-route-target-role',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetRole',
                [], [],
                '''                Role of the router target type
                ''',
                'role',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('format', REFERENCE_ENUM_CLASS, 'BgpRouteTargetFormat', 'Bgp-route-target-format',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetFormat',
                [], [],
                '''                Format of the route target
                ''',
                'format',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('two-byte-as-or-four-byte-as', REFERENCE_LIST, 'TwoByteAsOrFourByteAs', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.TwoByteAsOrFourByteAs',
                [], [],
                '''                two byte as or four byte as
                ''',
                'two_byte_as_or_four_byte_as',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('ipv4-address', REFERENCE_LIST, 'Ipv4Address', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.Ipv4Address',
                [], [],
                '''                ipv4 address
                ''',
                'ipv4_address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'route-target',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets', REFERENCE_CLASS,
            '''Route Target''',
            False, 
            [
            _MetaInfoClassMember('route-target', REFERENCE_LIST, 'RouteTarget', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget',
                [], [],
                '''                Name of the Route Target
                ''',
                'route_target',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'route-targets',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery', REFERENCE_CLASS,
            '''Enable Autodiscovery BGP in this VFI''',
            False, 
            [
            _MetaInfoClassMember('ldp-signaling-protocol', REFERENCE_CLASS, 'LdpSignalingProtocol', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol',
                [], [],
                '''                Signaling Protocol LDP in this VFI
                configuration
                ''',
                'ldp_signaling_protocol',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bgp-route-policy', REFERENCE_CLASS, 'BgpRoutePolicy', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpRoutePolicy',
                [], [],
                '''                Route policy
                ''',
                'bgp_route_policy',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('route-distinguisher', REFERENCE_CLASS, 'RouteDistinguisher', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteDistinguisher',
                [], [],
                '''                Route Distinguisher
                ''',
                'route_distinguisher',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bgp-signaling-protocol', REFERENCE_CLASS, 'BgpSignalingProtocol', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol',
                [], [],
                '''                Enable Signaling Protocol BGP in this VFI
                ''',
                'bgp_signaling_protocol',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('route-targets', REFERENCE_CLASS, 'RouteTargets', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets',
                [], [],
                '''                Route Target
                ''',
                'route_targets',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('table-policy', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Table Policy for installation of forwarding
                data to L2FIB
                ''',
                'table_policy',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('ad-control-word', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable control-word for this VFI
                ''',
                'ad_control_word',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Autodiscovery BGP
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bgp-auto-discovery',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi', REFERENCE_LIST,
            '''Name of the Virtual Forwarding Interface''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the Virtual Forwarding Interface
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('multicast-p2mp', REFERENCE_CLASS, 'MulticastP2mp', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp',
                [], [],
                '''                Enable Multicast P2MP in this VFI
                ''',
                'multicast_p2mp',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfi-pseudowires', REFERENCE_CLASS, 'VfiPseudowires', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires',
                [], [],
                '''                List of pseudowires
                ''',
                'vfi_pseudowires',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bgp-auto-discovery', REFERENCE_CLASS, 'BgpAutoDiscovery', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery',
                [], [],
                '''                Enable Autodiscovery BGP in this VFI
                ''',
                'bgp_auto_discovery',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfi-shutdown', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enabling Shutdown
                ''',
                'vfi_shutdown',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vpnid', ATTRIBUTE, 'int', 'Vpnid-range',
                None, None,
                [('1', '4294967295')], [],
                '''                VPN Identifier
                ''',
                'vpnid',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vfi',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis', REFERENCE_CLASS,
            '''Specify the virtual forwarding interface name''',
            False, 
            [
            _MetaInfoClassMember('vfi', REFERENCE_LIST, 'Vfi', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi',
                [], [],
                '''                Name of the Virtual Forwarding Interface
                ''',
                'vfi',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vfis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainvnis.BridgeDomainvni' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainvnis.BridgeDomainvni', REFERENCE_LIST,
            '''Bridge Domain VxLAN EVPN''',
            False, 
            [
            _MetaInfoClassMember('vpn-id', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '16777215')], [],
                '''                VxLAN Ethernet VPN-ID
                ''',
                'vpn_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domainvni',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainvnis' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainvnis', REFERENCE_CLASS,
            '''Bridge Domain EVPN VxLAN Network Identifier
Table''',
            False, 
            [
            _MetaInfoClassMember('bridge-domainvni', REFERENCE_LIST, 'BridgeDomainvni', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainvnis.BridgeDomainvni',
                [], [],
                '''                Bridge Domain VxLAN EVPN
                ''',
                'bridge_domainvni',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domainvnis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceIpSourceGuard' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceIpSourceGuard', REFERENCE_CLASS,
            '''IP Source Guard''',
            False, 
            [
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                Logging Type
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable L2 Interface Dynamic IP source
                guard
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IP Source Guard
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-ip-source-guard',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai.InterfaceDaiAddressValidation' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai.InterfaceDaiAddressValidation', REFERENCE_CLASS,
            '''Address Validation''',
            False, 
            [
            _MetaInfoClassMember('ipv4-verification', REFERENCE_ENUM_CLASS, 'L2vpnVerification', 'L2vpn-verification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnVerification',
                [], [],
                '''                IPv4 Verification
                ''',
                'ipv4_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('destination-mac-verification', REFERENCE_ENUM_CLASS, 'L2vpnVerification', 'L2vpn-verification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnVerification',
                [], [],
                '''                Destination MAC Verification
                ''',
                'destination_mac_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('source-mac-verification', REFERENCE_ENUM_CLASS, 'L2vpnVerification', 'L2vpn-verification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnVerification',
                [], [],
                '''                Source MAC Verification
                ''',
                'source_mac_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Address Validation
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-dai-address-validation',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai', REFERENCE_CLASS,
            '''L2 Interface Dynamic ARP Inspection''',
            False, 
            [
            _MetaInfoClassMember('interface-dai-address-validation', REFERENCE_CLASS, 'InterfaceDaiAddressValidation', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai.InterfaceDaiAddressValidation',
                [], [],
                '''                Address Validation
                ''',
                'interface_dai_address_validation',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                Logging Type
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable L2 Interface Dynamic ARP Inspection
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable L2 Interface Dynamic ARP Inspection
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-dai',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceProfile' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceProfile', REFERENCE_CLASS,
            '''Attach a DHCP profile''',
            False, 
            [
            _MetaInfoClassMember('profile-id', REFERENCE_ENUM_CLASS, 'InterfaceProfile', 'Interface-profile',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceProfile',
                [], [],
                '''                Set the snooping profile
                ''',
                'profile_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dhcp-snooping-id', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Disable DHCP snooping
                ''',
                'dhcp_snooping_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-profile',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType.StormControlUnit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType.StormControlUnit', REFERENCE_CLASS,
            '''Specify units for Storm Control Configuration''',
            False, 
            [
            _MetaInfoClassMember('kbits-per-sec', ATTRIBUTE, 'int', 'Storm-control-kbps-range',
                None, None,
                [('64', '1280000')], [],
                '''                Kilobits Per Second, PktsPerSec and KbitsPerSec
                cannot be configured together
                ''',
                'kbits_per_sec',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pkts-per-sec', ATTRIBUTE, 'int', 'Storm-control-pps-range',
                None, None,
                [('1', '160000')], [],
                '''                Packets Per Second, PktsPerSec and KbitsPerSec
                cannot be configured together
                ''',
                'pkts_per_sec',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'storm-control-unit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType', REFERENCE_LIST,
            '''Storm Control Type''',
            False, 
            [
            _MetaInfoClassMember('sctype', REFERENCE_ENUM_CLASS, 'StormControl', 'Storm-control',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'StormControl',
                [], [],
                '''                Storm Control Type
                ''',
                'sctype',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('storm-control-unit', REFERENCE_CLASS, 'StormControlUnit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType.StormControlUnit',
                [], [],
                '''                Specify units for Storm Control Configuration
                ''',
                'storm_control_unit',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bdac-storm-control-type',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes', REFERENCE_CLASS,
            '''Storm Control''',
            False, 
            [
            _MetaInfoClassMember('bdac-storm-control-type', REFERENCE_LIST, 'BdacStormControlType', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType',
                [], [],
                '''                Storm Control Type
                ''',
                'bdac_storm_control_type',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bdac-storm-control-types',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon.SplitHorizonGroupId' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon.SplitHorizonGroupId', REFERENCE_CLASS,
            '''Split Horizon Group ID''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable split horizon group
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'split-horizon-group-id',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon', REFERENCE_CLASS,
            '''Split Horizon''',
            False, 
            [
            _MetaInfoClassMember('split-horizon-group-id', REFERENCE_CLASS, 'SplitHorizonGroupId', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon.SplitHorizonGroupId',
                [], [],
                '''                Split Horizon Group ID
                ''',
                'split_horizon_group_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'split-horizon',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses.StaticMacAddress' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses.StaticMacAddress', REFERENCE_LIST,
            '''Static Mac Address Configuration''',
            False, 
            [
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Static MAC address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'static-mac-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses', REFERENCE_CLASS,
            '''Static Mac Address Table''',
            False, 
            [
            _MetaInfoClassMember('static-mac-address', REFERENCE_LIST, 'StaticMacAddress', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses.StaticMacAddress',
                [], [],
                '''                Static Mac Address Configuration
                ''',
                'static_mac_address',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'static-mac-addresses',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacAging' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacAging', REFERENCE_CLASS,
            '''MAC-Aging configuration commands''',
            False, 
            [
            _MetaInfoClassMember('interface-mac-aging-time', ATTRIBUTE, 'int', 'Mac-aging-range',
                None, None,
                [('300', '30000')], [],
                '''                Mac Aging Time
                ''',
                'interface_mac_aging_time',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-aging-type', REFERENCE_ENUM_CLASS, 'MacAging', 'Mac-aging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacAging',
                [], [],
                '''                MAC address aging type
                ''',
                'interface_mac_aging_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-mac-aging',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacSecure' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacSecure', REFERENCE_CLASS,
            '''MAC Secure''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable MAC Secure
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('logging', REFERENCE_ENUM_CLASS, 'L2vpnLogging', 'L2vpn-logging',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnLogging',
                [], [],
                '''                MAC Secure Logging
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable MAC Secure
                ''',
                'disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('action', REFERENCE_ENUM_CLASS, 'MacSecureAction', 'Mac-secure-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacSecureAction',
                [], [],
                '''                MAC secure enforcement action
                ''',
                'action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('shutdown-recovery-timer', ATTRIBUTE, 'int', 'Mac-secure-shutdown-recovery-time-range',
                None, None,
                [('10', '3600')], [],
                '''                MAC Secure Shutdown Recovery Timer
                ''',
                'shutdown_recovery_timer',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-mac-secure',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacLimit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacLimit', REFERENCE_CLASS,
            '''MAC-Limit configuration commands''',
            False, 
            [
            _MetaInfoClassMember('interface-mac-limit-max', ATTRIBUTE, 'int', 'Mac-limit-range',
                None, None,
                [('0', '4294967295')], [],
                '''                Number of MAC addresses on an Interface
                after which MAC limit action is taken
                ''',
                'interface_mac_limit_max',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-limit-notif', REFERENCE_ENUM_CLASS, 'MacNotification', 'Mac-notification',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacNotification',
                [], [],
                '''                MAC address limit notification action in a
                Interface
                ''',
                'interface_mac_limit_notif',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-limit-action', REFERENCE_ENUM_CLASS, 'MacLimitAction', 'Mac-limit-action',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLimitAction',
                [], [],
                '''                Interface MAC address limit enforcement
                action
                ''',
                'interface_mac_limit_action',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-mac-limit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac', REFERENCE_CLASS,
            '''MAC configuration commands''',
            False, 
            [
            _MetaInfoClassMember('interface-mac-aging', REFERENCE_CLASS, 'InterfaceMacAging', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacAging',
                [], [],
                '''                MAC-Aging configuration commands
                ''',
                'interface_mac_aging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-secure', REFERENCE_CLASS, 'InterfaceMacSecure', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacSecure',
                [], [],
                '''                MAC Secure
                ''',
                'interface_mac_secure',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-limit', REFERENCE_CLASS, 'InterfaceMacLimit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacLimit',
                [], [],
                '''                MAC-Limit configuration commands
                ''',
                'interface_mac_limit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-port-down-flush', REFERENCE_ENUM_CLASS, 'PortDownFlush', 'Port-down-flush',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'PortDownFlush',
                [], [],
                '''                Enable/Disable MAC Flush When Port goes
                down
                ''',
                'interface_mac_port_down_flush',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac-learning', REFERENCE_ENUM_CLASS, 'MacLearn', 'Mac-learn',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacLearn',
                [], [],
                '''                Enable Mac Learning
                ''',
                'interface_mac_learning',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface-mac',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit', REFERENCE_LIST,
            '''Name of the Attachment Circuit''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                The name of the Attachment Circuit
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('interface-ip-source-guard', REFERENCE_CLASS, 'InterfaceIpSourceGuard', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceIpSourceGuard',
                [], [],
                '''                IP Source Guard
                ''',
                'interface_ip_source_guard',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-dai', REFERENCE_CLASS, 'InterfaceDai', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai',
                [], [],
                '''                L2 Interface Dynamic ARP Inspection
                ''',
                'interface_dai',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-profile', REFERENCE_CLASS, 'InterfaceProfile', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceProfile',
                [], [],
                '''                Attach a DHCP profile
                ''',
                'interface_profile',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bdac-storm-control-types', REFERENCE_CLASS, 'BdacStormControlTypes', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes',
                [], [],
                '''                Storm Control
                ''',
                'bdac_storm_control_types',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('split-horizon', REFERENCE_CLASS, 'SplitHorizon', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon',
                [], [],
                '''                Split Horizon
                ''',
                'split_horizon',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('static-mac-addresses', REFERENCE_CLASS, 'StaticMacAddresses', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses',
                [], [],
                '''                Static Mac Address Table
                ''',
                'static_mac_addresses',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mac', REFERENCE_CLASS, 'InterfaceMac', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac',
                [], [],
                '''                MAC configuration commands
                ''',
                'interface_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-flooding', REFERENCE_ENUM_CLASS, 'InterfaceTrafficFlood', 'Interface-traffic-flood',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceTrafficFlood',
                [], [],
                '''                Enable or Disable Flooding
                ''',
                'interface_flooding',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-igmp-snoop', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a IGMP Snooping profile
                ''',
                'interface_igmp_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-flooding-unknown-unicast', REFERENCE_ENUM_CLASS, 'InterfaceTrafficFlood', 'Interface-traffic-flood',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'InterfaceTrafficFlood',
                [], [],
                '''                Enable or Disable Unknown Unicast Flooding
                ''',
                'interface_flooding_unknown_unicast',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('interface-mld-snoop', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach a MLD Snooping profile
                ''',
                'interface_mld_snoop',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-attachment-circuit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits', REFERENCE_CLASS,
            '''Attachment Circuit table''',
            False, 
            [
            _MetaInfoClassMember('bd-attachment-circuit', REFERENCE_LIST, 'BdAttachmentCircuit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit',
                [], [],
                '''                Name of the Attachment Circuit
                ''',
                'bd_attachment_circuit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-attachment-circuits',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowireEvpns.BdPseudowireEvpn' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowireEvpns.BdPseudowireEvpn', REFERENCE_LIST,
            '''EVPN Pseudowire configuration''',
            False, 
            [
            _MetaInfoClassMember('eviid', ATTRIBUTE, 'int', 'Evpnvpnid-range',
                None, None,
                [('1', '65534')], [],
                '''                Ethernet VPN ID
                ''',
                'eviid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('acid', ATTRIBUTE, 'int', 'Pseudowire-acid-range',
                None, None,
                [('1', '4294967295')], [],
                '''                AC ID
                ''',
                'acid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pseudowire-evpn',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowireEvpns' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowireEvpns', REFERENCE_CLASS,
            '''List of EVPN pseudowires''',
            False, 
            [
            _MetaInfoClassMember('bd-pseudowire-evpn', REFERENCE_LIST, 'BdPseudowireEvpn', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowireEvpns.BdPseudowireEvpn',
                [], [],
                '''                EVPN Pseudowire configuration
                ''',
                'bd_pseudowire_evpn',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bd-pseudowire-evpns',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.IpSourceGuard' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.IpSourceGuard', REFERENCE_CLASS,
            '''IP Source Guard''',
            False, 
            [
            _MetaInfoClassMember('logging', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Logging
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IP Source Guard
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'ip-source-guard',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Dai.DaiAddressValidation' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Dai.DaiAddressValidation', REFERENCE_CLASS,
            '''Address Validation''',
            False, 
            [
            _MetaInfoClassMember('ipv4-verification', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable IPv4 Verification
                ''',
                'ipv4_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('destination-mac-verification', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Destination MAC Verification
                ''',
                'destination_mac_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('source-mac-verification', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Source MAC Verification
                ''',
                'source_mac_verification',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Address Validation
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'dai-address-validation',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Dai' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Dai', REFERENCE_CLASS,
            '''Dynamic ARP Inspection''',
            False, 
            [
            _MetaInfoClassMember('dai-address-validation', REFERENCE_CLASS, 'DaiAddressValidation', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Dai.DaiAddressValidation',
                [], [],
                '''                Address Validation
                ''',
                'dai_address_validation',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('logging', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Logging
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Dynamic ARP Inspection
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'dai',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface.RoutedInterfaceSplitHorizonGroup' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface.RoutedInterfaceSplitHorizonGroup', REFERENCE_CLASS,
            '''Routed interface split horizon group''',
            False, 
            [
            _MetaInfoClassMember('routed-interface-split-horizon-group-core', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Configure BVI under SHG 1
                ''',
                'routed_interface_split_horizon_group_core',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'routed-interface-split-horizon-group',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface', REFERENCE_LIST,
            '''Bridge Domain Routed Interface''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                The name of the Routed Interface
                ''',
                'interface_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('routed-interface-split-horizon-group', REFERENCE_CLASS, 'RoutedInterfaceSplitHorizonGroup', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface.RoutedInterfaceSplitHorizonGroup',
                [], [],
                '''                Routed interface split horizon group
                ''',
                'routed_interface_split_horizon_group',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'routed-interface',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces', REFERENCE_CLASS,
            '''Bridge Domain Routed Interface Table''',
            False, 
            [
            _MetaInfoClassMember('routed-interface', REFERENCE_LIST, 'RoutedInterface', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface',
                [], [],
                '''                Bridge Domain Routed Interface
                ''',
                'routed_interface',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'routed-interfaces',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain', REFERENCE_LIST,
            '''bridge domain''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 27)], [],
                '''                Name of the bridge domain
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('bd-storm-controls', REFERENCE_CLASS, 'BdStormControls', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls',
                [], [],
                '''                Storm Control
                ''',
                'bd_storm_controls',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('member-vnis', REFERENCE_CLASS, 'MemberVnis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis',
                [], [],
                '''                Bridge Domain VxLAN Network Identifier Table
                ''',
                'member_vnis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domain-mac', REFERENCE_CLASS, 'BridgeDomainMac', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac',
                [], [],
                '''                MAC configuration commands
                ''',
                'bridge_domain_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('nv-satellite', REFERENCE_CLASS, 'NvSatellite', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.NvSatellite',
                [], [],
                '''                nV Satellite
                ''',
                'nv_satellite',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domain-pbb', REFERENCE_CLASS, 'BridgeDomainPbb', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb',
                [], [],
                '''                Bridge Domain PBB
                ''',
                'bridge_domain_pbb',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domain-evis', REFERENCE_CLASS, 'BridgeDomainEvis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainEvis',
                [], [],
                '''                Bridge Domain EVI Table
                ''',
                'bridge_domain_evis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('access-vfis', REFERENCE_CLASS, 'AccessVfis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis',
                [], [],
                '''                Specify the access virtual forwarding
                interface name
                ''',
                'access_vfis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-pseudowires', REFERENCE_CLASS, 'BdPseudowires', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires',
                [], [],
                '''                List of pseudowires
                ''',
                'bd_pseudowires',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfis', REFERENCE_CLASS, 'Vfis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis',
                [], [],
                '''                Specify the virtual forwarding interface name
                ''',
                'vfis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domainvnis', REFERENCE_CLASS, 'BridgeDomainvnis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainvnis',
                [], [],
                '''                Bridge Domain EVPN VxLAN Network Identifier
                Table
                ''',
                'bridge_domainvnis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-attachment-circuits', REFERENCE_CLASS, 'BdAttachmentCircuits', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits',
                [], [],
                '''                Attachment Circuit table
                ''',
                'bd_attachment_circuits',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bd-pseudowire-evpns', REFERENCE_CLASS, 'BdPseudowireEvpns', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowireEvpns',
                [], [],
                '''                List of EVPN pseudowires
                ''',
                'bd_pseudowire_evpns',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('ip-source-guard', REFERENCE_CLASS, 'IpSourceGuard', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.IpSourceGuard',
                [], [],
                '''                IP Source Guard
                ''',
                'ip_source_guard',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dai', REFERENCE_CLASS, 'Dai', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Dai',
                [], [],
                '''                Dynamic ARP Inspection
                ''',
                'dai',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('routed-interfaces', REFERENCE_CLASS, 'RoutedInterfaces', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces',
                [], [],
                '''                Bridge Domain Routed Interface Table
                ''',
                'routed_interfaces',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('coupled-mode', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Coupled-mode configuration
                ''',
                'coupled_mode',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('shutdown', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                shutdown the Bridge Domain
                ''',
                'shutdown',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('flooding-unknown-unicast', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable Unknown Unicast flooding
                ''',
                'flooding_unknown_unicast',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('efp-visibility', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable multicast for multiple VLANs in the
                bridge of a BVI
                ''',
                'efp_visibility',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2-multicast-source', REFERENCE_ENUM_CLASS, 'L2mcSrcTrafficEnabled', 'L2mc-src-traffic-enabled',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2mcSrcTrafficEnabled',
                [], [],
                '''                L2MC Source Traffic Enabled
                ''',
                'l2_multicast_source',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('igmp-snooping-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable IGMP Snooping
                ''',
                'igmp_snooping_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('transport-mode', REFERENCE_ENUM_CLASS, 'BridgeDomainTransportMode', 'Bridge-domain-transport-mode',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BridgeDomainTransportMode',
                [], [],
                '''                Bridge Domain Transport mode
                ''',
                'transport_mode',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mld-snooping', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach MLD Snooping Profile Name
                ''',
                'mld_snooping',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domain-mtu', ATTRIBUTE, 'int', 'Bridge-bd-mtu-range',
                None, None,
                [('46', '65535')], [],
                '''                Maximum transmission unit for this Bridge
                Domain
                ''',
                'bridge_domain_mtu',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('dhcp', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 32)], [],
                '''                DHCPv4 Snooping profile name
                ''',
                'dhcp',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-description', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 64)], [],
                '''                Bridge-domain description Name
                ''',
                'bridge_description',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('igmp-snooping', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Attach IGMP Snooping Profile Name
                ''',
                'igmp_snooping',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('flooding', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable flooding
                ''',
                'flooding',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domain',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains', REFERENCE_CLASS,
            '''List of Bridge Domain''',
            False, 
            [
            _MetaInfoClassMember('bridge-domain', REFERENCE_LIST, 'BridgeDomain', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain',
                [], [],
                '''                bridge domain
                ''',
                'bridge_domain',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bridge-domains',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches.VlanSwitch' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches.VlanSwitch', REFERENCE_LIST,
            '''VLAN Switch''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the VLAN Switch
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('vlan-switch-ports', REFERENCE_CLASS, 'VlanSwitchPorts', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.VlanSwitchPorts',
                [], [],
                '''                List of VLAN Switched Ports
                ''',
                'vlan_switch_ports',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vni-ranges', REFERENCE_CLASS, 'VniRanges', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.VniRanges',
                [], [],
                '''                Configure VLAN Switch VxLAN Ethernet VPN-ID
                ranges
                ''',
                'vni_ranges',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-ranges', REFERENCE_CLASS, 'VlanRanges', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.VlanRanges',
                [], [],
                '''                Configure VLAN Switch VLAN ranges
                ''',
                'vlan_ranges',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('routed-interface-ranges', REFERENCE_CLASS, 'RoutedInterfaceRanges', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.RoutedInterfaceRanges',
                [], [],
                '''                Configure VLAN Switch Routed BVI Interface
                ranges
                ''',
                'routed_interface_ranges',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domains', REFERENCE_CLASS, 'BridgeDomains', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains',
                [], [],
                '''                List of Bridge Domain
                ''',
                'bridge_domains',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-switch',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.VlanSwitches' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.VlanSwitches', REFERENCE_CLASS,
            '''List of VLAN Switches''',
            False, 
            [
            _MetaInfoClassMember('vlan-switch', REFERENCE_LIST, 'VlanSwitch', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches.VlanSwitch',
                [], [],
                '''                VLAN Switch
                ''',
                'vlan_switch',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-switches',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcAttachmentCircuits.VlanUnawareFxcAttachmentCircuit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcAttachmentCircuits.VlanUnawareFxcAttachmentCircuit', REFERENCE_LIST,
            '''Attachment circuit interface''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Name of the attachment circuit interface
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-unaware-fxc-attachment-circuit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcAttachmentCircuits' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcAttachmentCircuits', REFERENCE_CLASS,
            '''List of attachment circuits''',
            False, 
            [
            _MetaInfoClassMember('vlan-unaware-fxc-attachment-circuit', REFERENCE_LIST, 'VlanUnawareFxcAttachmentCircuit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcAttachmentCircuits.VlanUnawareFxcAttachmentCircuit',
                [], [],
                '''                Attachment circuit interface
                ''',
                'vlan_unaware_fxc_attachment_circuit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-unaware-fxc-attachment-circuits',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcPseudowireEvpns.VlanUnawareFxcPseudowireEvpn' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcPseudowireEvpns.VlanUnawareFxcPseudowireEvpn', REFERENCE_LIST,
            '''EVPN FXC Service Configuration''',
            False, 
            [
            _MetaInfoClassMember('eviid', ATTRIBUTE, 'int', 'Evpnvpnid-range',
                None, None,
                [('1', '65534')], [],
                '''                Ethernet VPN ID
                ''',
                'eviid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('acid', ATTRIBUTE, 'int', 'Pseudowire-acid-range',
                None, None,
                [('1', '4294967295')], [],
                '''                AC ID
                ''',
                'acid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-unaware-fxc-pseudowire-evpn',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcPseudowireEvpns' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcPseudowireEvpns', REFERENCE_CLASS,
            '''List of EVPN Services''',
            False, 
            [
            _MetaInfoClassMember('vlan-unaware-fxc-pseudowire-evpn', REFERENCE_LIST, 'VlanUnawareFxcPseudowireEvpn', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcPseudowireEvpns.VlanUnawareFxcPseudowireEvpn',
                [], [],
                '''                EVPN FXC Service Configuration
                ''',
                'vlan_unaware_fxc_pseudowire_evpn',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-unaware-fxc-pseudowire-evpns',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService', REFERENCE_LIST,
            '''Flexible XConnect Service''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 23)], [],
                '''                Name of the Flexible XConnect Service
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('vlan-unaware-fxc-attachment-circuits', REFERENCE_CLASS, 'VlanUnawareFxcAttachmentCircuits', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcAttachmentCircuits',
                [], [],
                '''                List of attachment circuits
                ''',
                'vlan_unaware_fxc_attachment_circuits',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-unaware-fxc-pseudowire-evpns', REFERENCE_CLASS, 'VlanUnawareFxcPseudowireEvpns', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcPseudowireEvpns',
                [], [],
                '''                List of EVPN Services
                ''',
                'vlan_unaware_fxc_pseudowire_evpns',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-unaware-flexible-xconnect-service',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices', REFERENCE_CLASS,
            '''List of Vlan-Unaware Flexible XConnect
Services''',
            False, 
            [
            _MetaInfoClassMember('vlan-unaware-flexible-xconnect-service', REFERENCE_LIST, 'VlanUnawareFlexibleXconnectService', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService',
                [], [],
                '''                Flexible XConnect Service
                ''',
                'vlan_unaware_flexible_xconnect_service',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-unaware-flexible-xconnect-services',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService.VlanAwareFxcAttachmentCircuits.VlanAwareFxcAttachmentCircuit' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService.VlanAwareFxcAttachmentCircuits.VlanAwareFxcAttachmentCircuit', REFERENCE_LIST,
            '''Attachment circuit interface''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Name of the attachment circuit interface
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-aware-fxc-attachment-circuit',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService.VlanAwareFxcAttachmentCircuits' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService.VlanAwareFxcAttachmentCircuits', REFERENCE_CLASS,
            '''List of attachment circuits''',
            False, 
            [
            _MetaInfoClassMember('vlan-aware-fxc-attachment-circuit', REFERENCE_LIST, 'VlanAwareFxcAttachmentCircuit', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService.VlanAwareFxcAttachmentCircuits.VlanAwareFxcAttachmentCircuit',
                [], [],
                '''                Attachment circuit interface
                ''',
                'vlan_aware_fxc_attachment_circuit',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-aware-fxc-attachment-circuits',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService', REFERENCE_LIST,
            '''Flexible XConnect Service''',
            False, 
            [
            _MetaInfoClassMember('eviid', ATTRIBUTE, 'int', 'Evpnvpnid-range',
                None, None,
                [('1', '65534')], [],
                '''                Ethernet VPN ID
                ''',
                'eviid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('vlan-aware-fxc-attachment-circuits', REFERENCE_CLASS, 'VlanAwareFxcAttachmentCircuits', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService.VlanAwareFxcAttachmentCircuits',
                [], [],
                '''                List of attachment circuits
                ''',
                'vlan_aware_fxc_attachment_circuits',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-aware-flexible-xconnect-service',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices', REFERENCE_CLASS,
            '''List of Vlan-Aware Flexible XConnect Services''',
            False, 
            [
            _MetaInfoClassMember('vlan-aware-flexible-xconnect-service', REFERENCE_LIST, 'VlanAwareFlexibleXconnectService', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService',
                [], [],
                '''                Flexible XConnect Service
                ''',
                'vlan_aware_flexible_xconnect_service',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'vlan-aware-flexible-xconnect-services',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.FlexibleXconnectServiceTable' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.FlexibleXconnectServiceTable', REFERENCE_CLASS,
            '''List of Flexible XConnect Services''',
            False, 
            [
            _MetaInfoClassMember('vlan-unaware-flexible-xconnect-services', REFERENCE_CLASS, 'VlanUnawareFlexibleXconnectServices', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices',
                [], [],
                '''                List of Vlan-Unaware Flexible XConnect
                Services
                ''',
                'vlan_unaware_flexible_xconnect_services',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-aware-flexible-xconnect-services', REFERENCE_CLASS, 'VlanAwareFlexibleXconnectServices', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices',
                [], [],
                '''                List of Vlan-Aware Flexible XConnect Services
                ''',
                'vlan_aware_flexible_xconnect_services',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'flexible-xconnect-service-table',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup.IccpInterfaces.IccpInterface' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup.IccpInterfaces.IccpInterface', REFERENCE_LIST,
            '''Interface name''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Interface name
                ''',
                'interface_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('secondary-vlan-range', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Secondary VLAN range, in the form of 1-3,5
                ,8-11
                ''',
                'secondary_vlan_range',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('recovery-delay', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('30', '3600')], [],
                '''                Failure clear recovery delay
                ''',
                'recovery_delay',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="180"),
            _MetaInfoClassMember('primary-vlan-range', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Primary VLAN range, in the form of 1-3,5
                ,8-11
                ''',
                'primary_vlan_range',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mac-flush-tcn', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable STP-TCN MAC flushing
                ''',
                'mac_flush_tcn',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'iccp-interface',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup.IccpInterfaces' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup.IccpInterfaces', REFERENCE_CLASS,
            '''List of interfaces''',
            False, 
            [
            _MetaInfoClassMember('iccp-interface', REFERENCE_LIST, 'IccpInterface', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup.IccpInterfaces.IccpInterface',
                [], [],
                '''                Interface name
                ''',
                'iccp_interface',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'iccp-interfaces',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup', REFERENCE_LIST,
            '''ICCP Redundancy group''',
            False, 
            [
            _MetaInfoClassMember('group-id', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '4294967295')], [],
                '''                Group ID
                ''',
                'group_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('iccp-interfaces', REFERENCE_CLASS, 'IccpInterfaces', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup.IccpInterfaces',
                [], [],
                '''                List of interfaces
                ''',
                'iccp_interfaces',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('multi-homing-node-id', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '254')], [],
                '''                ICCP-based service multi-homing node ID
                ''',
                'multi_homing_node_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'iccp-redundancy-group',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.Redundancy.IccpRedundancyGroups' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.Redundancy.IccpRedundancyGroups', REFERENCE_CLASS,
            '''List of Inter-Chassis Communication Protocol
redundancy groups''',
            False, 
            [
            _MetaInfoClassMember('iccp-redundancy-group', REFERENCE_LIST, 'IccpRedundancyGroup', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup',
                [], [],
                '''                ICCP Redundancy group
                ''',
                'iccp_redundancy_group',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'iccp-redundancy-groups',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database.Redundancy' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database.Redundancy', REFERENCE_CLASS,
            '''Redundancy groups''',
            False, 
            [
            _MetaInfoClassMember('iccp-redundancy-groups', REFERENCE_CLASS, 'IccpRedundancyGroups', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.Redundancy.IccpRedundancyGroups',
                [], [],
                '''                List of Inter-Chassis Communication Protocol
                redundancy groups
                ''',
                'iccp_redundancy_groups',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable redundancy groups
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'redundancy',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Database' : {
        'meta_info' : _MetaInfoClass('L2vpn.Database', REFERENCE_CLASS,
            '''L2VPN databases''',
            False, 
            [
            _MetaInfoClassMember('g8032-rings', REFERENCE_CLASS, 'G8032Rings', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.G8032Rings',
                [], [],
                '''                List of G8032 Ring
                ''',
                'g8032_rings',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('xconnect-groups', REFERENCE_CLASS, 'XconnectGroups', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.XconnectGroups',
                [], [],
                '''                List of xconnect groups
                ''',
                'xconnect_groups',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('bridge-domain-groups', REFERENCE_CLASS, 'BridgeDomainGroups', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.BridgeDomainGroups',
                [], [],
                '''                List of bridge groups
                ''',
                'bridge_domain_groups',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-classes', REFERENCE_CLASS, 'PseudowireClasses', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.PseudowireClasses',
                [], [],
                '''                List of pseudowire classes
                ''',
                'pseudowire_classes',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vlan-switches', REFERENCE_CLASS, 'VlanSwitches', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.VlanSwitches',
                [], [],
                '''                List of VLAN Switches
                ''',
                'vlan_switches',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('flexible-xconnect-service-table', REFERENCE_CLASS, 'FlexibleXconnectServiceTable', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.FlexibleXconnectServiceTable',
                [], [],
                '''                List of Flexible XConnect Services
                ''',
                'flexible_xconnect_service_table',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('redundancy', REFERENCE_CLASS, 'Redundancy', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database.Redundancy',
                [], [],
                '''                Redundancy groups
                ''',
                'redundancy',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'database',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Pbb' : {
        'meta_info' : _MetaInfoClass('L2vpn.Pbb', REFERENCE_CLASS,
            '''L2VPN PBB Global''',
            False, 
            [
            _MetaInfoClassMember('backbone-source-mac', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Backbone Source MAC
                ''',
                'backbone_source_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'pbb',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.AutoDiscovery.BgpSignaling' : {
        'meta_info' : _MetaInfoClass('L2vpn.AutoDiscovery.BgpSignaling', REFERENCE_CLASS,
            '''Global bgp signaling attributes''',
            False, 
            [
            _MetaInfoClassMember('mtu-mismatch-ignore', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Ignore MTU mismatch for auto-discovered
                pseudowires
                ''',
                'mtu_mismatch_ignore',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'bgp-signaling',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.AutoDiscovery' : {
        'meta_info' : _MetaInfoClass('L2vpn.AutoDiscovery', REFERENCE_CLASS,
            '''Global auto-discovery attributes''',
            False, 
            [
            _MetaInfoClassMember('bgp-signaling', REFERENCE_CLASS, 'BgpSignaling', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.AutoDiscovery.BgpSignaling',
                [], [],
                '''                Global bgp signaling attributes
                ''',
                'bgp_signaling',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'auto-discovery',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Utility.Logging' : {
        'meta_info' : _MetaInfoClass('L2vpn.Utility.Logging', REFERENCE_CLASS,
            '''L2VPN logging utility''',
            False, 
            [
            _MetaInfoClassMember('bridge-domain-state-change', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Bridge Domain state change logging
                ''',
                'bridge_domain_state_change',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pseudowire-state-change', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable pseudowire state change logging
                ''',
                'pseudowire_state_change',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('vfi', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable VFI state change logging
                ''',
                'vfi',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('nsr-state-change', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Non Stop Routing state change logging
                ''',
                'nsr_state_change',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pwhe-replication-state-change', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable PW-HE Replication state change logging
                ''',
                'pwhe_replication_state_change',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'logging',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Utility' : {
        'meta_info' : _MetaInfoClass('L2vpn.Utility', REFERENCE_CLASS,
            '''L2VPN utilities''',
            False, 
            [
            _MetaInfoClassMember('logging', REFERENCE_CLASS, 'Logging', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Utility.Logging',
                [], [],
                '''                L2VPN logging utility
                ''',
                'logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'utility',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Snmp.Mib.MibInterface.Format' : {
        'meta_info' : _MetaInfoClass('L2vpn.Snmp.Mib.MibInterface.Format', REFERENCE_CLASS,
            '''MIB interface name output format''',
            False, 
            [
            _MetaInfoClassMember('external-interface-format', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Set MIB interface name output in slash
                format (/)
                ''',
                'external_interface_format',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'format',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Snmp.Mib.MibInterface' : {
        'meta_info' : _MetaInfoClass('L2vpn.Snmp.Mib.MibInterface', REFERENCE_CLASS,
            '''Interface related configuration for MIB''',
            False, 
            [
            _MetaInfoClassMember('format', REFERENCE_CLASS, 'Format', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Snmp.Mib.MibInterface.Format',
                [], [],
                '''                MIB interface name output format
                ''',
                'format',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mib-interface',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Snmp.Mib.MibPseudowire' : {
        'meta_info' : _MetaInfoClass('L2vpn.Snmp.Mib.MibPseudowire', REFERENCE_CLASS,
            '''Pseudowire related configuration for MIB''',
            False, 
            [
            _MetaInfoClassMember('statistics', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable pseudowire statistics in MIB output
                ''',
                'statistics',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mib-pseudowire',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Snmp.Mib' : {
        'meta_info' : _MetaInfoClass('L2vpn.Snmp.Mib', REFERENCE_CLASS,
            '''MIB related configuration''',
            False, 
            [
            _MetaInfoClassMember('mib-interface', REFERENCE_CLASS, 'MibInterface', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Snmp.Mib.MibInterface',
                [], [],
                '''                Interface related configuration for MIB
                ''',
                'mib_interface',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mib-pseudowire', REFERENCE_CLASS, 'MibPseudowire', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Snmp.Mib.MibPseudowire',
                [], [],
                '''                Pseudowire related configuration for MIB
                ''',
                'mib_pseudowire',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'mib',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn.Snmp' : {
        'meta_info' : _MetaInfoClass('L2vpn.Snmp', REFERENCE_CLASS,
            '''SNMP related configuration''',
            False, 
            [
            _MetaInfoClassMember('mib', REFERENCE_CLASS, 'Mib', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Snmp.Mib',
                [], [],
                '''                MIB related configuration
                ''',
                'mib',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'snmp',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'L2vpn' : {
        'meta_info' : _MetaInfoClass('L2vpn', REFERENCE_CLASS,
            '''L2VPN configuration''',
            False, 
            [
            _MetaInfoClassMember('pw-routing', REFERENCE_CLASS, 'PwRouting', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.PwRouting',
                [], [],
                '''                Pseudowire-routing attributes
                ''',
                'pw_routing',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('neighbor', REFERENCE_CLASS, 'Neighbor', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Neighbor',
                [], [],
                '''                L2VPN neighbor submode
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('database', REFERENCE_CLASS, 'Database', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Database',
                [], [],
                '''                L2VPN databases
                ''',
                'database',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pbb', REFERENCE_CLASS, 'Pbb', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Pbb',
                [], [],
                '''                L2VPN PBB Global
                ''',
                'pbb',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('auto-discovery', REFERENCE_CLASS, 'AutoDiscovery', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.AutoDiscovery',
                [], [],
                '''                Global auto-discovery attributes
                ''',
                'auto_discovery',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('utility', REFERENCE_CLASS, 'Utility', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Utility',
                [], [],
                '''                L2VPN utilities
                ''',
                'utility',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('snmp', REFERENCE_CLASS, 'Snmp', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpn.Snmp',
                [], [],
                '''                SNMP related configuration
                ''',
                'snmp',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('nsr', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Non-Stop Routing
                ''',
                'nsr',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mtu-mismatch-ignore', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Ignore MTU Mismatch for XCs
                ''',
                'mtu_mismatch_ignore',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('tcn-propagation', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Topology change notification propagation
                ''',
                'tcn_propagation',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pwoam-refresh', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '4095')], [],
                '''                Configure PW OAM refresh interval
                ''',
                'pwoam_refresh',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('load-balance', REFERENCE_ENUM_CLASS, 'LoadBalance', 'Load-balance',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'LoadBalance',
                [], [],
                '''                Enable flow load balancing on l2vpn bridges
                ''',
                'load_balance',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mspw-description', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 64)], [],
                '''                MS-PW global description
                ''',
                'mspw_description',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mac-limit-threshold', ATTRIBUTE, 'int', 'Mac-limit-threshold-range',
                None, None,
                [('1', '100')], [],
                '''                Configure MAC limit threshold percent
                ''',
                'mac_limit_threshold',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pw-status-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable PW status
                ''',
                'pw_status_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable L2VPN feature
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('pw-grouping', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable PW grouping
                ''',
                'pw_grouping',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('capability', REFERENCE_ENUM_CLASS, 'L2vpnCapabilityMode', 'L2vpn-capability-mode',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'L2vpnCapabilityMode',
                [], [],
                '''                L2VPN Capability Mode
                ''',
                'capability',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('l2vpn-router-id', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Global L2VPN Router ID
                ''',
                'l2vpn_router_id',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'l2vpn',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'GenericInterfaceLists.GenericInterfaceList.Interfaces.Interface' : {
        'meta_info' : _MetaInfoClass('GenericInterfaceLists.GenericInterfaceList.Interfaces.Interface', REFERENCE_LIST,
            '''Interface''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Name of the interface
                ''',
                'interface_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable interface
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interface',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'GenericInterfaceLists.GenericInterfaceList.Interfaces' : {
        'meta_info' : _MetaInfoClass('GenericInterfaceLists.GenericInterfaceList.Interfaces', REFERENCE_CLASS,
            '''Interface table''',
            False, 
            [
            _MetaInfoClassMember('interface', REFERENCE_LIST, 'Interface', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'GenericInterfaceLists.GenericInterfaceList.Interfaces.Interface',
                [], [],
                '''                Interface
                ''',
                'interface',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'interfaces',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'GenericInterfaceLists.GenericInterfaceList' : {
        'meta_info' : _MetaInfoClass('GenericInterfaceLists.GenericInterfaceList', REFERENCE_LIST,
            '''Generic interface list''',
            False, 
            [
            _MetaInfoClassMember('generic-interface-list-name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the interface list
                ''',
                'generic_interface_list_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('interfaces', REFERENCE_CLASS, 'Interfaces', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'GenericInterfaceLists.GenericInterfaceList.Interfaces',
                [], [],
                '''                Interface table
                ''',
                'interfaces',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable interface list
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'generic-interface-list',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'GenericInterfaceLists' : {
        'meta_info' : _MetaInfoClass('GenericInterfaceLists', REFERENCE_CLASS,
            '''generic interface lists''',
            False, 
            [
            _MetaInfoClassMember('generic-interface-list', REFERENCE_LIST, 'GenericInterfaceList', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'GenericInterfaceLists.GenericInterfaceList',
                [], [],
                '''                Generic interface list
                ''',
                'generic_interface_list',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'generic-interface-lists',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnTimers' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnTimers', REFERENCE_CLASS,
            '''Enter EVPN timers configuration submode''',
            False, 
            [
            _MetaInfoClassMember('evpn-carving', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '300')], [],
                '''                Global Carving timer
                ''',
                'evpn_carving',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="0"),
            _MetaInfoClassMember('evpn-mac-postpone', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '300')], [],
                '''                Global MAC postpone timer
                ''',
                'evpn_mac_postpone',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="300"),
            _MetaInfoClassMember('evpn-recovery', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '3600')], [],
                '''                Global Recovery timer
                ''',
                'evpn_recovery',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="30"),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable EVPN timers
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-peering', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '300')], [],
                '''                Global Peering timer
                ''',
                'evpn_peering',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="3"),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-timers',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EviLoadBalancing' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEvis.EvpnEvi.EviLoadBalancing', REFERENCE_CLASS,
            '''Enter Loadbalancing configuration submode''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Loadbalancing
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-static-flow-label', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Static Flow Label based load balancing
                ''',
                'evi_static_flow_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evi-load-balancing',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteDistinguisher' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteDistinguisher', REFERENCE_CLASS,
            '''Route Distinguisher''',
            False, 
            [
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'BgpRouteDistinguisher', 'Bgp-route-distinguisher',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteDistinguisher',
                [], [],
                '''                Router Distinguisher Type
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Rdas-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Two byte or 4 byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Rdas-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS:nn (hex or decimal format)
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('addr-index', ATTRIBUTE, 'int', 'Rd-addr-index',
                None, None,
                [('0', '65535')], [],
                '''                Addr index
                ''',
                'addr_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-route-distinguisher',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetAs' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetAs', REFERENCE_LIST,
            '''Name of the Route Target''',
            False, 
            [
            _MetaInfoClassMember('format', REFERENCE_ENUM_CLASS, 'BgpRouteTargetFormat', 'Bgp-route-target-format',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetFormat',
                [], [],
                '''                Format of the route target
                ''',
                'format',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('role', REFERENCE_ENUM_CLASS, 'BgpRouteTargetRole', 'Bgp-route-target-role',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetRole',
                [], [],
                '''                Role of the router target type
                ''',
                'role',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Rdas-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Two byte or 4 byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Rdas-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS:nn (hex or decimal format)
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('stitching', REFERENCE_ENUM_CLASS, 'BgpRouteTarget', 'Bgp-route-target',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTarget',
                [], [],
                '''                whether RT is Stitching RT
                ''',
                'stitching',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-route-target-as',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetNone' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetNone', REFERENCE_LIST,
            '''Name of the Route Target''',
            False, 
            [
            _MetaInfoClassMember('format', REFERENCE_ENUM_CLASS, 'BgpRouteTargetFormat', 'Bgp-route-target-format',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetFormat',
                [], [],
                '''                Format of the route target
                ''',
                'format',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('role', REFERENCE_ENUM_CLASS, 'BgpRouteTargetRole', 'Bgp-route-target-role',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetRole',
                [], [],
                '''                Role of the router target type
                ''',
                'role',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('stitching', REFERENCE_ENUM_CLASS, 'BgpRouteTarget', 'Bgp-route-target',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTarget',
                [], [],
                '''                whether RT is Stitching RT
                ''',
                'stitching',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-route-target-none',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetIpv4Address' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetIpv4Address', REFERENCE_LIST,
            '''Name of the Route Target''',
            False, 
            [
            _MetaInfoClassMember('format', REFERENCE_ENUM_CLASS, 'BgpRouteTargetFormat', 'Bgp-route-target-format',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetFormat',
                [], [],
                '''                Format of the route target
                ''',
                'format',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('role', REFERENCE_ENUM_CLASS, 'BgpRouteTargetRole', 'Bgp-route-target-role',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetRole',
                [], [],
                '''                Role of the router target type
                ''',
                'role',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('addr-index', ATTRIBUTE, 'int', 'Rd-addr-index',
                None, None,
                [('0', '65535')], [],
                '''                Addr index
                ''',
                'addr_index',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('stitching', REFERENCE_ENUM_CLASS, 'BgpRouteTarget', 'Bgp-route-target',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTarget',
                [], [],
                '''                whether RT is Stitching RT
                ''',
                'stitching',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-route-target-ipv4-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets', REFERENCE_CLASS,
            '''Route Target''',
            False, 
            [
            _MetaInfoClassMember('evpn-route-target-as', REFERENCE_LIST, 'EvpnRouteTargetAs', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetAs',
                [], [],
                '''                Name of the Route Target
                ''',
                'evpn_route_target_as',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            _MetaInfoClassMember('evpn-route-target-none', REFERENCE_LIST, 'EvpnRouteTargetNone', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetNone',
                [], [],
                '''                Name of the Route Target
                ''',
                'evpn_route_target_none',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            _MetaInfoClassMember('evpn-route-target-ipv4-address', REFERENCE_LIST, 'EvpnRouteTargetIpv4Address', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetIpv4Address',
                [], [],
                '''                Name of the Route Target
                ''',
                'evpn_route_target_ipv4_address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-route-targets',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery', REFERENCE_CLASS,
            '''Enable Autodiscovery BGP in EVPN Instance''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Autodiscovery BGP
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('table-policy', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Table Policy for installation of forwarding data
                to L2FIB
                ''',
                'table_policy',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-route-distinguisher', REFERENCE_CLASS, 'EvpnRouteDistinguisher', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteDistinguisher',
                [], [],
                '''                Route Distinguisher
                ''',
                'evpn_route_distinguisher',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('implicit-import-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disables BGP Implicit Import
                ''',
                'implicit_import_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-route-targets', REFERENCE_CLASS, 'EvpnRouteTargets', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets',
                [], [],
                '''                Route Target
                ''',
                'evpn_route_targets',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-evi-bgp-auto-discovery',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EviMulticast' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEvis.EvpnEvi.EviMulticast', REFERENCE_CLASS,
            '''Enter Multicast configuration submode''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Multicast
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-mcast-source-connected', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Multicast source connectivity
                ''',
                'evi_mcast_source_connected',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evi-multicast',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EviAdvertiseMac' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEvis.EvpnEvi.EviAdvertiseMac', REFERENCE_CLASS,
            '''Enter Advertise local MAC-only routes
configuration submode''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Advertise local MAC-only routes
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-advertise-mac-bvi', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Advertise local MAC-only and BVI MAC routes
                ''',
                'evi_advertise_mac_bvi',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evi-advertise-mac',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnEvis.EvpnEvi' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEvis.EvpnEvi', REFERENCE_LIST,
            '''Enter EVPN Instance configuration submode''',
            False, 
            [
            _MetaInfoClassMember('eviid', ATTRIBUTE, 'int', 'Evpnvpnid-range',
                None, None,
                [('1', '65534')], [],
                '''                EVI ID
                ''',
                'eviid',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('evi-load-balancing', REFERENCE_CLASS, 'EviLoadBalancing', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EviLoadBalancing',
                [], [],
                '''                Enter Loadbalancing configuration submode
                ''',
                'evi_load_balancing',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-evi-bgp-auto-discovery', REFERENCE_CLASS, 'EvpnEviBgpAutoDiscovery', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery',
                [], [],
                '''                Enable Autodiscovery BGP in EVPN Instance
                ''',
                'evpn_evi_bgp_auto_discovery',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-multicast', REFERENCE_CLASS, 'EviMulticast', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EviMulticast',
                [], [],
                '''                Enter Multicast configuration submode
                ''',
                'evi_multicast',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-advertise-mac', REFERENCE_CLASS, 'EviAdvertiseMac', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEvis.EvpnEvi.EviAdvertiseMac',
                [], [],
                '''                Enter Advertise local MAC-only routes
                configuration submode
                ''',
                'evi_advertise_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-reorig-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable route re-origination
                ''',
                'evi_reorig_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-advertise-mac-deprecated', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                DEPRECATED: Advertise local MAC-only and BVI MAC
                routes
                ''',
                'evi_advertise_mac_deprecated',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-evi-description', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 64)], [],
                '''                EVPN Instance description
                ''',
                'evpn_evi_description',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-ecmp-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable ECMP on the EVI
                ''',
                'evi_ecmp_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-unknown-unicast-flooding-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable Unknown Unicast Flooding on this EVI
                ''',
                'evi_unknown_unicast_flooding_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-evi-cw-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                CW disable for EVPN EVI
                ''',
                'evpn_evi_cw_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-evi',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnEvis' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEvis', REFERENCE_CLASS,
            '''Enter EVPN Instance configuration submode''',
            False, 
            [
            _MetaInfoClassMember('evpn-evi', REFERENCE_LIST, 'EvpnEvi', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEvis.EvpnEvi',
                [], [],
                '''                Enter EVPN Instance configuration submode
                ''',
                'evpn_evi',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-evis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualAccessVfiTimers' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualAccessVfiTimers', REFERENCE_CLASS,
            '''Enter Virtual Forwarding Interface timers
configuration submode''',
            False, 
            [
            _MetaInfoClassMember('evpn-virtual-access-vfi-recovery', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '3600')], [],
                '''                Virtual Forwarding Interface-specific
                Recovery timer
                ''',
                'evpn_virtual_access_vfi_recovery',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="30"),
            _MetaInfoClassMember('evpn-virtual-access-vfi-peering', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '300')], [],
                '''                Virtual Forwarding Interface-specific
                Peering timer
                ''',
                'evpn_virtual_access_vfi_peering',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="3"),
            _MetaInfoClassMember('evpn-virtual-access-vfi-carving', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '300')], [],
                '''                Virtual Forwarding Interface-specific
                Carving timer
                ''',
                'evpn_virtual_access_vfi_carving',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="0"),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Virtual Forwarding Interface timers
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-virtual-access-vfi-timers',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment.Identifier' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment.Identifier', REFERENCE_CLASS,
            '''Ethernet segment identifier''',
            False, 
            [
            _MetaInfoClassMember('bytes01', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                Type 0's 1st Byte or Type Byte and 1st Byte
                ''',
                'bytes01',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('bytes23', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                2nd and 3rd Bytes
                ''',
                'bytes23',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('bytes45', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                4th and 5th Bytes
                ''',
                'bytes45',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('bytes67', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                6th and 7th Bytes
                ''',
                'bytes67',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('bytes89', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                8th and 9th Bytes
                ''',
                'bytes89',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'EthernetSegmentIdentifier', 'Ethernet-segment-identifier',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentIdentifier',
                [], [],
                '''                Ethernet segment identifier type
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'identifier',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            is_presence=True,
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment.ManualServiceCarving.ServiceList' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment.ManualServiceCarving.ServiceList', REFERENCE_CLASS,
            '''Manual service carving primary,secondary lists''',
            False, 
            [
            _MetaInfoClassMember('primary', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 150)], [],
                '''                Primary services list
                ''',
                'primary',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('secondary', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 150)], [],
                '''                Secondary services list
                ''',
                'secondary',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'service-list',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment.ManualServiceCarving' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment.ManualServiceCarving', REFERENCE_CLASS,
            '''Enter Manual service carving configuration
submode''',
            False, 
            [
            _MetaInfoClassMember('service-list', REFERENCE_CLASS, 'ServiceList', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment.ManualServiceCarving.ServiceList',
                [], [],
                '''                Manual service carving primary,secondary lists
                ''',
                'service_list',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Manual service carving
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'manual-service-carving',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment', REFERENCE_CLASS,
            '''Enter Ethernet Segment configuration submode''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Ethernet Segment
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('service-carving-mcast-type', REFERENCE_ENUM_CLASS, 'EthernetSegmentServiceCarvingMcast', 'Ethernet-segment-service-carving-mcast',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentServiceCarvingMcast',
                [], [],
                '''                Ethernet-Segment Service Carving multicast mode
                ''',
                'service_carving_mcast_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('es-import-route-target', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                ES-Import Route Target
                ''',
                'es_import_route_target',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('service-carving-type', REFERENCE_ENUM_CLASS, 'EthernetSegmentServiceCarving', 'Ethernet-segment-service-carving',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentServiceCarving',
                [], [],
                '''                Ethernet-Segment Service Carving mode
                ''',
                'service_carving_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('identifier', REFERENCE_CLASS, 'Identifier', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment.Identifier',
                [], [],
                '''                Ethernet segment identifier
                ''',
                'identifier',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_presence=True),
            _MetaInfoClassMember('manual-service-carving', REFERENCE_CLASS, 'ManualServiceCarving', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment.ManualServiceCarving',
                [], [],
                '''                Enter Manual service carving configuration
                submode
                ''',
                'manual_service_carving',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-virtual-ethernet-segment',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi', REFERENCE_LIST,
            '''Virtual Access VFI''',
            False, 
            [
            _MetaInfoClassMember('name', ATTRIBUTE, 'str', 'xr:Cisco-ios-xr-string',
                None, None,
                [(1, 32)], [],
                '''                Name of the Virtual Access VFI
                ''',
                'name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('evpn-virtual-access-vfi-timers', REFERENCE_CLASS, 'EvpnVirtualAccessVfiTimers', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualAccessVfiTimers',
                [], [],
                '''                Enter Virtual Forwarding Interface timers
                configuration submode
                ''',
                'evpn_virtual_access_vfi_timers',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-virtual-ethernet-segment', REFERENCE_CLASS, 'EvpnVirtualEthernetSegment', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment',
                [], [],
                '''                Enter Ethernet Segment configuration submode
                ''',
                'evpn_virtual_ethernet_segment',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-virtual-access-vfi',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessVfis' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessVfis', REFERENCE_CLASS,
            '''Virtual Access VFI interfaces''',
            False, 
            [
            _MetaInfoClassMember('evpn-virtual-access-vfi', REFERENCE_LIST, 'EvpnVirtualAccessVfi', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi',
                [], [],
                '''                Virtual Access VFI
                ''',
                'evpn_virtual_access_vfi',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-virtual-access-vfis',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnLoadBalancing' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnLoadBalancing', REFERENCE_CLASS,
            '''Enter EVPN Loadbalancing configuration submode''',
            False, 
            [
            _MetaInfoClassMember('evpn-static-flow-label', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Static Flow Label based load balancing
                ''',
                'evpn_static_flow_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable EVPN Loadbalancing
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-load-balancing',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnBgpAutoDiscovery.EvpnRouteDistinguisher' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnBgpAutoDiscovery.EvpnRouteDistinguisher', REFERENCE_CLASS,
            '''Route Distinguisher''',
            False, 
            [
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'BgpRouteDistinguisher', 'Bgp-route-distinguisher',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteDistinguisher',
                [], [],
                '''                Router Distinguisher Type
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Rdas-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Two byte or 4 byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Rdas-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS:nn (hex or decimal format)
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('addr-index', ATTRIBUTE, 'int', 'Rd-addr-index',
                None, None,
                [('0', '65535')], [],
                '''                Addr index
                ''',
                'addr_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-route-distinguisher',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnBgpAutoDiscovery' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnBgpAutoDiscovery', REFERENCE_CLASS,
            '''Enable Autodiscovery BGP in EVPN''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Autodiscovery BGP
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-route-distinguisher', REFERENCE_CLASS, 'EvpnRouteDistinguisher', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnBgpAutoDiscovery.EvpnRouteDistinguisher',
                [], [],
                '''                Route Distinguisher
                ''',
                'evpn_route_distinguisher',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-bgp-auto-discovery',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnGroups.EvpnGroup.EvpnGroupCoreInterfaces.EvpnGroupCoreInterface' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnGroups.EvpnGroup.EvpnGroupCoreInterfaces.EvpnGroupCoreInterface', REFERENCE_LIST,
            '''EVPN Group Core interface''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Name of the EVPN Group core interface
                ''',
                'interface_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-group-core-interface',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnGroups.EvpnGroup.EvpnGroupCoreInterfaces' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnGroups.EvpnGroup.EvpnGroupCoreInterfaces', REFERENCE_CLASS,
            '''EVPN Group core interfaces''',
            False, 
            [
            _MetaInfoClassMember('evpn-group-core-interface', REFERENCE_LIST, 'EvpnGroupCoreInterface', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnGroups.EvpnGroup.EvpnGroupCoreInterfaces.EvpnGroupCoreInterface',
                [], [],
                '''                EVPN Group Core interface
                ''',
                'evpn_group_core_interface',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-group-core-interfaces',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnGroups.EvpnGroup' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnGroups.EvpnGroup', REFERENCE_LIST,
            '''Enter EVPN Group submode''',
            False, 
            [
            _MetaInfoClassMember('group-id', ATTRIBUTE, 'int', 'Evpn-group-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Group ID
                ''',
                'group_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('evpn-group-core-interfaces', REFERENCE_CLASS, 'EvpnGroupCoreInterfaces', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnGroups.EvpnGroup.EvpnGroupCoreInterfaces',
                [], [],
                '''                EVPN Group core interfaces
                ''',
                'evpn_group_core_interfaces',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-group',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnGroups' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnGroups', REFERENCE_CLASS,
            '''Enter EVPN Group Table submode''',
            False, 
            [
            _MetaInfoClassMember('evpn-group', REFERENCE_LIST, 'EvpnGroup', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnGroups.EvpnGroup',
                [], [],
                '''                Enter EVPN Group submode
                ''',
                'evpn_group',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-groups',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteDistinguisher' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteDistinguisher', REFERENCE_CLASS,
            '''Route Distinguisher''',
            False, 
            [
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'BgpRouteDistinguisher', 'Bgp-route-distinguisher',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteDistinguisher',
                [], [],
                '''                Router Distinguisher Type
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Rdas-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Two byte or 4 byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Rdas-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS:nn (hex or decimal format)
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            _MetaInfoClassMember('addr-index', ATTRIBUTE, 'int', 'Rd-addr-index',
                None, None,
                [('0', '65535')], [],
                '''                Addr index
                ''',
                'addr_index',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_when=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-route-distinguisher',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetAs' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetAs', REFERENCE_LIST,
            '''Name of the Route Target''',
            False, 
            [
            _MetaInfoClassMember('format', REFERENCE_ENUM_CLASS, 'BgpRouteTargetFormat', 'Bgp-route-target-format',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetFormat',
                [], [],
                '''                Format of the route target
                ''',
                'format',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('role', REFERENCE_ENUM_CLASS, 'BgpRouteTargetRole', 'Bgp-route-target-role',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetRole',
                [], [],
                '''                Role of the router target type
                ''',
                'role',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('as', ATTRIBUTE, 'int', 'Rdas-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Two byte or 4 byte AS number
                ''',
                'as_',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('as-index', ATTRIBUTE, 'int', 'Rdas-index',
                None, None,
                [('0', '4294967295')], [],
                '''                AS:nn (hex or decimal format)
                ''',
                'as_index',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('stitching', REFERENCE_ENUM_CLASS, 'BgpRouteTarget', 'Bgp-route-target',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTarget',
                [], [],
                '''                whether RT is Stitching RT
                ''',
                'stitching',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-route-target-as',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetNone' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetNone', REFERENCE_LIST,
            '''Name of the Route Target''',
            False, 
            [
            _MetaInfoClassMember('format', REFERENCE_ENUM_CLASS, 'BgpRouteTargetFormat', 'Bgp-route-target-format',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetFormat',
                [], [],
                '''                Format of the route target
                ''',
                'format',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('role', REFERENCE_ENUM_CLASS, 'BgpRouteTargetRole', 'Bgp-route-target-role',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetRole',
                [], [],
                '''                Role of the router target type
                ''',
                'role',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('stitching', REFERENCE_ENUM_CLASS, 'BgpRouteTarget', 'Bgp-route-target',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTarget',
                [], [],
                '''                whether RT is Stitching RT
                ''',
                'stitching',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-route-target-none',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetIpv4Address' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetIpv4Address', REFERENCE_LIST,
            '''Name of the Route Target''',
            False, 
            [
            _MetaInfoClassMember('format', REFERENCE_ENUM_CLASS, 'BgpRouteTargetFormat', 'Bgp-route-target-format',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetFormat',
                [], [],
                '''                Format of the route target
                ''',
                'format',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('role', REFERENCE_ENUM_CLASS, 'BgpRouteTargetRole', 'Bgp-route-target-role',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTargetRole',
                [], [],
                '''                Role of the router target type
                ''',
                'role',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('address', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                IPV4 address
                ''',
                'address',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('addr-index', ATTRIBUTE, 'int', 'Rd-addr-index',
                None, None,
                [('0', '65535')], [],
                '''                Addr index
                ''',
                'addr_index',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('stitching', REFERENCE_ENUM_CLASS, 'BgpRouteTarget', 'Bgp-route-target',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'BgpRouteTarget',
                [], [],
                '''                whether RT is Stitching RT
                ''',
                'stitching',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-route-target-ipv4-address',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            has_must=True,
        ),
    },
    'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets', REFERENCE_CLASS,
            '''Route Target''',
            False, 
            [
            _MetaInfoClassMember('evpn-route-target-as', REFERENCE_LIST, 'EvpnRouteTargetAs', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetAs',
                [], [],
                '''                Name of the Route Target
                ''',
                'evpn_route_target_as',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            _MetaInfoClassMember('evpn-route-target-none', REFERENCE_LIST, 'EvpnRouteTargetNone', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetNone',
                [], [],
                '''                Name of the Route Target
                ''',
                'evpn_route_target_none',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            _MetaInfoClassMember('evpn-route-target-ipv4-address', REFERENCE_LIST, 'EvpnRouteTargetIpv4Address', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetIpv4Address',
                [], [],
                '''                Name of the Route Target
                ''',
                'evpn_route_target_ipv4_address',
                'Cisco-IOS-XR-l2vpn-cfg', False, has_must=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-route-targets',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery', REFERENCE_CLASS,
            '''Enable Autodiscovery BGP in EVPN Instance''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Autodiscovery BGP
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('table-policy', ATTRIBUTE, 'str', 'string',
                None, None,
                [], [],
                '''                Table Policy for installation of forwarding data
                to L2FIB
                ''',
                'table_policy',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-route-distinguisher', REFERENCE_CLASS, 'EvpnRouteDistinguisher', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteDistinguisher',
                [], [],
                '''                Route Distinguisher
                ''',
                'evpn_route_distinguisher',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('implicit-import-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disables BGP Implicit Import
                ''',
                'implicit_import_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-route-targets', REFERENCE_CLASS, 'EvpnRouteTargets', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets',
                [], [],
                '''                Route Target
                ''',
                'evpn_route_targets',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-instance-bgp-auto-discovery',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceEtree' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceEtree', REFERENCE_CLASS,
            '''Enter EVPN E-Tree configuration submode''',
            False, 
            [
            _MetaInfoClassMember('evpn-instance-etree-leaf', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Configure E-Tree as leaf
                ''',
                'evpn_instance_etree_leaf',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable EVPN E-Tree
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-instance-etree',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceAdvertiseMac' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceAdvertiseMac', REFERENCE_CLASS,
            '''Enter Advertise local MAC-only routes
configuration submode''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Advertise local MAC-only routes
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-advertise-mac-bvi', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Advertise local MAC-only and BVI MAC routes
                ''',
                'evi_advertise_mac_bvi',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-instance-advertise-mac',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceMulticast' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceMulticast', REFERENCE_CLASS,
            '''Enter Multicast configuration submode''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Multicast
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-mcast-source-connected', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Multicast source connectivity
                ''',
                'evi_mcast_source_connected',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-instance-multicast',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceLoadBalancing' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceLoadBalancing', REFERENCE_CLASS,
            '''Enter Loadbalancing configuration submode''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Loadbalancing
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-static-flow-label', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Static Flow Label based load balancing
                ''',
                'evi_static_flow_label',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-instance-load-balancing',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInstances.EvpnInstance' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInstances.EvpnInstance', REFERENCE_LIST,
            '''Enter EVPN Instance configuration submode''',
            False, 
            [
            _MetaInfoClassMember('vpn-id', ATTRIBUTE, 'int', 'Vpnid-range',
                None, None,
                [('1', '4294967295')], [],
                '''                EVPN Instance ID
                ''',
                'vpn_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('encapsulation', REFERENCE_ENUM_CLASS, 'EvpnEncapsulation', 'Evpn-encapsulation',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EvpnEncapsulation',
                [], [],
                '''                EVPN Instance Encapsulation
                ''',
                'encapsulation',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('side', REFERENCE_ENUM_CLASS, 'EvpnSide', 'Evpn-side',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EvpnSide',
                [], [],
                '''                EVPN Instance Side
                ''',
                'side',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('evpn-instance-bgp-auto-discovery', REFERENCE_CLASS, 'EvpnInstanceBgpAutoDiscovery', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery',
                [], [],
                '''                Enable Autodiscovery BGP in EVPN Instance
                ''',
                'evpn_instance_bgp_auto_discovery',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-instance-etree', REFERENCE_CLASS, 'EvpnInstanceEtree', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceEtree',
                [], [],
                '''                Enter EVPN E-Tree configuration submode
                ''',
                'evpn_instance_etree',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-instance-advertise-mac', REFERENCE_CLASS, 'EvpnInstanceAdvertiseMac', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceAdvertiseMac',
                [], [],
                '''                Enter Advertise local MAC-only routes
                configuration submode
                ''',
                'evpn_instance_advertise_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-instance-multicast', REFERENCE_CLASS, 'EvpnInstanceMulticast', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceMulticast',
                [], [],
                '''                Enter Multicast configuration submode
                ''',
                'evpn_instance_multicast',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-instance-load-balancing', REFERENCE_CLASS, 'EvpnInstanceLoadBalancing', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceLoadBalancing',
                [], [],
                '''                Enter Loadbalancing configuration submode
                ''',
                'evpn_instance_load_balancing',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-reorig-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable route re-origination
                ''',
                'evi_reorig_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-advertise-mac-deprecated', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                DEPRECATED: Advertise local MAC-only and BVI MAC
                routes
                ''',
                'evi_advertise_mac_deprecated',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-evi-description', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 64)], [],
                '''                EVPN Instance description
                ''',
                'evpn_evi_description',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-ecmp-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable ECMP on the EVI
                ''',
                'evi_ecmp_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-unknown-unicast-flooding-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable Unknown Unicast Flooding on this EVI
                ''',
                'evi_unknown_unicast_flooding_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-evi-cw-disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                CW disable for EVPN EVI
                ''',
                'evpn_evi_cw_disable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-instance',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInstances' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInstances', REFERENCE_CLASS,
            '''Enter EVPN Instance configuration submode''',
            False, 
            [
            _MetaInfoClassMember('evpn-instance', REFERENCE_LIST, 'EvpnInstance', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInstances.EvpnInstance',
                [], [],
                '''                Enter EVPN Instance configuration submode
                ''',
                'evpn_instance',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-instances',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnLogging' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnLogging', REFERENCE_CLASS,
            '''Enter EVPN Logging configuration submode''',
            False, 
            [
            _MetaInfoClassMember('evpn-df-election', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Designated Forwarder election logging
                ''',
                'evpn_df_election',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable EVPN Logging
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-logging',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EvpnacTimers' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EvpnacTimers', REFERENCE_CLASS,
            '''Enter Interface-specific timers configuration
submode''',
            False, 
            [
            _MetaInfoClassMember('evpnac-peering', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '300')], [],
                '''                Interface-specific Peering timer
                ''',
                'evpnac_peering',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="3"),
            _MetaInfoClassMember('evpnac-carving', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '300')], [],
                '''                Interface-specific Carving timer
                ''',
                'evpnac_carving',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="0"),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Interface-specific timers
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpnac-recovery', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '3600')], [],
                '''                Interface-specific Recovery timer
                ''',
                'evpnac_recovery',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="30"),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpnac-timers',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment.Identifier' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment.Identifier', REFERENCE_CLASS,
            '''Ethernet segment identifier''',
            False, 
            [
            _MetaInfoClassMember('bytes01', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                Type 0's 1st Byte or Type Byte and 1st Byte
                ''',
                'bytes01',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('bytes23', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                2nd and 3rd Bytes
                ''',
                'bytes23',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('bytes45', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                4th and 5th Bytes
                ''',
                'bytes45',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('bytes67', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                6th and 7th Bytes
                ''',
                'bytes67',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('bytes89', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                8th and 9th Bytes
                ''',
                'bytes89',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'EthernetSegmentIdentifier', 'Ethernet-segment-identifier',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentIdentifier',
                [], [],
                '''                Ethernet segment identifier type
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'identifier',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            is_presence=True,
        ),
    },
    'Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment.ManualServiceCarving.ServiceList' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment.ManualServiceCarving.ServiceList', REFERENCE_CLASS,
            '''Manual service carving primary,secondary lists''',
            False, 
            [
            _MetaInfoClassMember('primary', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 150)], [],
                '''                Primary services list
                ''',
                'primary',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('secondary', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 150)], [],
                '''                Secondary services list
                ''',
                'secondary',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'service-list',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment.ManualServiceCarving' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment.ManualServiceCarving', REFERENCE_CLASS,
            '''Enter Manual service carving configuration
submode''',
            False, 
            [
            _MetaInfoClassMember('service-list', REFERENCE_CLASS, 'ServiceList', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment.ManualServiceCarving.ServiceList',
                [], [],
                '''                Manual service carving primary,secondary lists
                ''',
                'service_list',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Manual service carving
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'manual-service-carving',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment', REFERENCE_CLASS,
            '''Enter Ethernet Segment configuration submode''',
            False, 
            [
            _MetaInfoClassMember('force-single-homed', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Force ethernet segment to remain
                single-homed
                ''',
                'force_single_homed',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('load-balancing-mode', REFERENCE_ENUM_CLASS, 'EthernetSegmentLoadBalance', 'Ethernet-segment-load-balance',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentLoadBalance',
                [], [],
                '''                Ethernet-Segment Load Balancing mode
                ''',
                'load_balancing_mode',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Ethernet Segment
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('backbone-source-mac', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                Backbone Source MAC
                ''',
                'backbone_source_mac',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('service-carving-mcast-type', REFERENCE_ENUM_CLASS, 'EthernetSegmentServiceCarvingMcast', 'Ethernet-segment-service-carving-mcast',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentServiceCarvingMcast',
                [], [],
                '''                Ethernet-Segment Service Carving multicast mode
                ''',
                'service_carving_mcast_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('es-import-route-target', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                ES-Import Route Target
                ''',
                'es_import_route_target',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('service-carving-type', REFERENCE_ENUM_CLASS, 'EthernetSegmentServiceCarving', 'Ethernet-segment-service-carving',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentServiceCarving',
                [], [],
                '''                Ethernet-Segment Service Carving mode
                ''',
                'service_carving_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('identifier', REFERENCE_CLASS, 'Identifier', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment.Identifier',
                [], [],
                '''                Ethernet segment identifier
                ''',
                'identifier',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_presence=True),
            _MetaInfoClassMember('manual-service-carving', REFERENCE_CLASS, 'ManualServiceCarving', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment.ManualServiceCarving',
                [], [],
                '''                Enter Manual service carving configuration
                submode
                ''',
                'manual_service_carving',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'ethernet-segment',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInterfaces.EvpnInterface' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInterfaces.EvpnInterface', REFERENCE_LIST,
            '''Attachment circuit interface''',
            False, 
            [
            _MetaInfoClassMember('interface-name', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Name of the attachment circuit interface
                ''',
                'interface_name',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('evpnac-timers', REFERENCE_CLASS, 'EvpnacTimers', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EvpnacTimers',
                [], [],
                '''                Enter Interface-specific timers configuration
                submode
                ''',
                'evpnac_timers',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('ethernet-segment', REFERENCE_CLASS, 'EthernetSegment', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment',
                [], [],
                '''                Enter Ethernet Segment configuration submode
                ''',
                'ethernet_segment',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-core-isolation-group', ATTRIBUTE, 'int', 'Evpn-core-group-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Enter EVPN Core Isolation Group ID
                ''',
                'evpn_core_isolation_group',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('mac-flush', REFERENCE_ENUM_CLASS, 'MacFlushMode', 'Mac-flush-mode',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'MacFlushMode',
                [], [],
                '''                Enable MAC Flushing
                ''',
                'mac_flush',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-interface',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnInterfaces' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnInterfaces', REFERENCE_CLASS,
            '''Attachment Circuit interfaces''',
            False, 
            [
            _MetaInfoClassMember('evpn-interface', REFERENCE_LIST, 'EvpnInterface', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInterfaces.EvpnInterface',
                [], [],
                '''                Attachment circuit interface
                ''',
                'evpn_interface',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-interfaces',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualAccessPwTimers' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualAccessPwTimers', REFERENCE_CLASS,
            '''Enter Virtual Access Pseudowire-specific
timers configuration submode''',
            False, 
            [
            _MetaInfoClassMember('evpn-virtual-access-pw-recovery', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '3600')], [],
                '''                Virtual Access Pseudowire-specific Recovery
                timer
                ''',
                'evpn_virtual_access_pw_recovery',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="30"),
            _MetaInfoClassMember('evpn-virtual-access-pw-peering', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '300')], [],
                '''                Virtual Access Pseudowire-specific Peering
                timer
                ''',
                'evpn_virtual_access_pw_peering',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="3"),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Virtual Access Pseudowire-specific
                timers
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-virtual-access-pw-carving', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '300')], [],
                '''                Virtual Access Pseudowire-specific Carving
                timer
                ''',
                'evpn_virtual_access_pw_carving',
                'Cisco-IOS-XR-l2vpn-cfg', False, default_value="0"),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-virtual-access-pw-timers',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment.Identifier' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment.Identifier', REFERENCE_CLASS,
            '''Ethernet segment identifier''',
            False, 
            [
            _MetaInfoClassMember('bytes01', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                Type 0's 1st Byte or Type Byte and 1st Byte
                ''',
                'bytes01',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('bytes23', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                2nd and 3rd Bytes
                ''',
                'bytes23',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('bytes45', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                4th and 5th Bytes
                ''',
                'bytes45',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('bytes67', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                6th and 7th Bytes
                ''',
                'bytes67',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('bytes89', ATTRIBUTE, 'str', 'xr:Hex-integer',
                None, None,
                [], [b'[0-9a-fA-F]{1,8}'],
                '''                8th and 9th Bytes
                ''',
                'bytes89',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            _MetaInfoClassMember('type', REFERENCE_ENUM_CLASS, 'EthernetSegmentIdentifier', 'Ethernet-segment-identifier',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentIdentifier',
                [], [],
                '''                Ethernet segment identifier type
                ''',
                'type',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_mandatory=True),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'identifier',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
            is_presence=True,
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment.ManualServiceCarving.ServiceList' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment.ManualServiceCarving.ServiceList', REFERENCE_CLASS,
            '''Manual service carving primary,secondary lists''',
            False, 
            [
            _MetaInfoClassMember('primary', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 150)], [],
                '''                Primary services list
                ''',
                'primary',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('secondary', ATTRIBUTE, 'str', 'string',
                None, None,
                [(1, 150)], [],
                '''                Secondary services list
                ''',
                'secondary',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'service-list',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment.ManualServiceCarving' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment.ManualServiceCarving', REFERENCE_CLASS,
            '''Enter Manual service carving configuration
submode''',
            False, 
            [
            _MetaInfoClassMember('service-list', REFERENCE_CLASS, 'ServiceList', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment.ManualServiceCarving.ServiceList',
                [], [],
                '''                Manual service carving primary,secondary lists
                ''',
                'service_list',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Manual service carving
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'manual-service-carving',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment', REFERENCE_CLASS,
            '''Enter Ethernet Segment configuration submode''',
            False, 
            [
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable Ethernet Segment
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('service-carving-mcast-type', REFERENCE_ENUM_CLASS, 'EthernetSegmentServiceCarvingMcast', 'Ethernet-segment-service-carving-mcast',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentServiceCarvingMcast',
                [], [],
                '''                Ethernet-Segment Service Carving multicast mode
                ''',
                'service_carving_mcast_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('es-import-route-target', ATTRIBUTE, 'str', 'yang:mac-address',
                None, None,
                [], [b'[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'],
                '''                ES-Import Route Target
                ''',
                'es_import_route_target',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('service-carving-type', REFERENCE_ENUM_CLASS, 'EthernetSegmentServiceCarving', 'Ethernet-segment-service-carving',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'EthernetSegmentServiceCarving',
                [], [],
                '''                Ethernet-Segment Service Carving mode
                ''',
                'service_carving_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('identifier', REFERENCE_CLASS, 'Identifier', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment.Identifier',
                [], [],
                '''                Ethernet segment identifier
                ''',
                'identifier',
                'Cisco-IOS-XR-l2vpn-cfg', False, is_presence=True),
            _MetaInfoClassMember('manual-service-carving', REFERENCE_CLASS, 'ManualServiceCarving', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment.ManualServiceCarving',
                [], [],
                '''                Enter Manual service carving configuration
                submode
                ''',
                'manual_service_carving',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-virtual-ethernet-segment',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw', REFERENCE_LIST,
            '''Virtual Access Pseudowire''',
            False, 
            [
            _MetaInfoClassMember('neighbor', ATTRIBUTE, 'str', 'inet:ipv4-address-no-zone',
                None, None,
                [], [b'(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(%[\\p{N}\\p{L}]+)?'],
                '''                Neighbor IP address
                ''',
                'neighbor',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('pseudowire-id', ATTRIBUTE, 'int', 'Pseudowire-id-range',
                None, None,
                [('1', '4294967295')], [],
                '''                Pseudowire ID
                ''',
                'pseudowire_id',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('evpn-virtual-access-pw-timers', REFERENCE_CLASS, 'EvpnVirtualAccessPwTimers', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualAccessPwTimers',
                [], [],
                '''                Enter Virtual Access Pseudowire-specific
                timers configuration submode
                ''',
                'evpn_virtual_access_pw_timers',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-virtual-ethernet-segment', REFERENCE_CLASS, 'EvpnVirtualEthernetSegment', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment',
                [], [],
                '''                Enter Ethernet Segment configuration submode
                ''',
                'evpn_virtual_ethernet_segment',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-virtual-access-pw',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnVirtualAccessPws' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnVirtualAccessPws', REFERENCE_CLASS,
            '''Virtual Access Pseudowire interfaces''',
            False, 
            [
            _MetaInfoClassMember('evpn-virtual-access-pw', REFERENCE_LIST, 'EvpnVirtualAccessPw', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw',
                [], [],
                '''                Virtual Access Pseudowire
                ''',
                'evpn_virtual_access_pw',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-virtual-access-pws',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnEthernetSegment.EvpnEsiTypes.EvpnEsiType' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEthernetSegment.EvpnEsiTypes.EvpnEsiType', REFERENCE_LIST,
            '''ESI type''',
            False, 
            [
            _MetaInfoClassMember('esi-type', ATTRIBUTE, 'int', 'Evpn-esi-type-range',
                None, None,
                [('1', '1')], [],
                '''                ESI type
                ''',
                'esi_type',
                'Cisco-IOS-XR-l2vpn-cfg', True),
            _MetaInfoClassMember('disable-auto-generation', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Disable ESI Autogeneration
                ''',
                'disable_auto_generation',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-esi-type',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnEthernetSegment.EvpnEsiTypes' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEthernetSegment.EvpnEsiTypes', REFERENCE_CLASS,
            '''EVPN ESI type table''',
            False, 
            [
            _MetaInfoClassMember('evpn-esi-type', REFERENCE_LIST, 'EvpnEsiType', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEthernetSegment.EvpnEsiTypes.EvpnEsiType',
                [], [],
                '''                ESI type
                ''',
                'evpn_esi_type',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-esi-types',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.EvpnEthernetSegment' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.EvpnEthernetSegment', REFERENCE_CLASS,
            '''EVPN Global Ethernet Segment submode''',
            False, 
            [
            _MetaInfoClassMember('evpn-esi-types', REFERENCE_CLASS, 'EvpnEsiTypes', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEthernetSegment.EvpnEsiTypes',
                [], [],
                '''                EVPN ESI type table
                ''',
                'evpn_esi_types',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable EVPN Global Ethernet Segment submode
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-ethernet-segment',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.Host.Ipv6.DuplicateDetection' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.Host.Ipv6.DuplicateDetection', REFERENCE_CLASS,
            '''EVPN HOST [MAC/IPv4/IPv6] DUP-DETECT
Configuration''',
            False, 
            [
            _MetaInfoClassMember('move-count', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '1000')], [],
                '''                Number of moves to occur within the
                MoveInterval before a MAC/IPv4/IPv6 address is
                marked as duplicate
                ''',
                'move_count',
                'Cisco-IOS-XR-l2rib-cfg', False, default_value="5"),
            _MetaInfoClassMember('retry-count', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '1000')], [],
                '''                Number of times to automatically clear the
                duplicate flag on a MAC/IPV4/IPV6 route before
                permanently freezing it
                ''',
                'retry_count',
                'Cisco-IOS-XR-l2rib-cfg', False, default_value="3"),
            _MetaInfoClassMember('freeze-time', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('5', '3600')], [],
                '''                Length of time to lock the MAC/IPv4/IPv6 after
                a MAC/IPv4/IPv6 has been marked as duplicate
                ''',
                'freeze_time',
                'Cisco-IOS-XR-l2rib-cfg', False, default_value="30"),
            _MetaInfoClassMember('move-interval', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('5', '3600')], [],
                '''                Interval within which MoveCount number of moves
                need to happen before a MAC/IPv4/IPv6 route is
                marked as duplicate
                ''',
                'move_interval',
                'Cisco-IOS-XR-l2rib-cfg', False, default_value="180"),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Set to disable duplicate detection
                ''',
                'disable',
                'Cisco-IOS-XR-l2rib-cfg', False),
            ],
            'Cisco-IOS-XR-l2rib-cfg',
            'duplicate-detection',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2rib-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.Host.Ipv6' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.Host.Ipv6', REFERENCE_CLASS,
            '''EVPN HOST IPV6-ADDR Configuration''',
            False, 
            [
            _MetaInfoClassMember('duplicate-detection', REFERENCE_CLASS, 'DuplicateDetection', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.Host.Ipv6.DuplicateDetection',
                [], [],
                '''                EVPN HOST [MAC/IPv4/IPv6] DUP-DETECT
                Configuration
                ''',
                'duplicate_detection',
                'Cisco-IOS-XR-l2rib-cfg', False),
            ],
            'Cisco-IOS-XR-l2rib-cfg',
            'ipv6',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2rib-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.Host.Ipv4.DuplicateDetection' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.Host.Ipv4.DuplicateDetection', REFERENCE_CLASS,
            '''EVPN HOST [MAC/IPv4/IPv6] DUP-DETECT
Configuration''',
            False, 
            [
            _MetaInfoClassMember('move-count', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '1000')], [],
                '''                Number of moves to occur within the
                MoveInterval before a MAC/IPv4/IPv6 address is
                marked as duplicate
                ''',
                'move_count',
                'Cisco-IOS-XR-l2rib-cfg', False, default_value="5"),
            _MetaInfoClassMember('retry-count', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '1000')], [],
                '''                Number of times to automatically clear the
                duplicate flag on a MAC/IPV4/IPV6 route before
                permanently freezing it
                ''',
                'retry_count',
                'Cisco-IOS-XR-l2rib-cfg', False, default_value="3"),
            _MetaInfoClassMember('freeze-time', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('5', '3600')], [],
                '''                Length of time to lock the MAC/IPv4/IPv6 after
                a MAC/IPv4/IPv6 has been marked as duplicate
                ''',
                'freeze_time',
                'Cisco-IOS-XR-l2rib-cfg', False, default_value="30"),
            _MetaInfoClassMember('move-interval', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('5', '3600')], [],
                '''                Interval within which MoveCount number of moves
                need to happen before a MAC/IPv4/IPv6 route is
                marked as duplicate
                ''',
                'move_interval',
                'Cisco-IOS-XR-l2rib-cfg', False, default_value="180"),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Set to disable duplicate detection
                ''',
                'disable',
                'Cisco-IOS-XR-l2rib-cfg', False),
            ],
            'Cisco-IOS-XR-l2rib-cfg',
            'duplicate-detection',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2rib-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.Host.Ipv4' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.Host.Ipv4', REFERENCE_CLASS,
            '''EVPN HOST IPV4-ADDR Configuration''',
            False, 
            [
            _MetaInfoClassMember('duplicate-detection', REFERENCE_CLASS, 'DuplicateDetection', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.Host.Ipv4.DuplicateDetection',
                [], [],
                '''                EVPN HOST [MAC/IPv4/IPv6] DUP-DETECT
                Configuration
                ''',
                'duplicate_detection',
                'Cisco-IOS-XR-l2rib-cfg', False),
            ],
            'Cisco-IOS-XR-l2rib-cfg',
            'ipv4',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2rib-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.Host.Mac.DuplicateDetection' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.Host.Mac.DuplicateDetection', REFERENCE_CLASS,
            '''EVPN HOST [MAC/IPv4/IPv6] DUP-DETECT
Configuration''',
            False, 
            [
            _MetaInfoClassMember('move-count', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('1', '1000')], [],
                '''                Number of moves to occur within the
                MoveInterval before a MAC/IPv4/IPv6 address is
                marked as duplicate
                ''',
                'move_count',
                'Cisco-IOS-XR-l2rib-cfg', False, default_value="5"),
            _MetaInfoClassMember('retry-count', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('0', '1000')], [],
                '''                Number of times to automatically clear the
                duplicate flag on a MAC/IPV4/IPV6 route before
                permanently freezing it
                ''',
                'retry_count',
                'Cisco-IOS-XR-l2rib-cfg', False, default_value="3"),
            _MetaInfoClassMember('freeze-time', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('5', '3600')], [],
                '''                Length of time to lock the MAC/IPv4/IPv6 after
                a MAC/IPv4/IPv6 has been marked as duplicate
                ''',
                'freeze_time',
                'Cisco-IOS-XR-l2rib-cfg', False, default_value="30"),
            _MetaInfoClassMember('move-interval', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('5', '3600')], [],
                '''                Interval within which MoveCount number of moves
                need to happen before a MAC/IPv4/IPv6 route is
                marked as duplicate
                ''',
                'move_interval',
                'Cisco-IOS-XR-l2rib-cfg', False, default_value="180"),
            _MetaInfoClassMember('disable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Set to disable duplicate detection
                ''',
                'disable',
                'Cisco-IOS-XR-l2rib-cfg', False),
            ],
            'Cisco-IOS-XR-l2rib-cfg',
            'duplicate-detection',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2rib-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.Host.Mac' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.Host.Mac', REFERENCE_CLASS,
            '''EVPN HOST MAC-ADDR Configuration''',
            False, 
            [
            _MetaInfoClassMember('duplicate-detection', REFERENCE_CLASS, 'DuplicateDetection', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.Host.Mac.DuplicateDetection',
                [], [],
                '''                EVPN HOST [MAC/IPv4/IPv6] DUP-DETECT
                Configuration
                ''',
                'duplicate_detection',
                'Cisco-IOS-XR-l2rib-cfg', False),
            ],
            'Cisco-IOS-XR-l2rib-cfg',
            'mac',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2rib-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables.Host' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables.Host', REFERENCE_CLASS,
            '''EVPN HOST Configuration''',
            False, 
            [
            _MetaInfoClassMember('ipv6', REFERENCE_CLASS, 'Ipv6', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.Host.Ipv6',
                [], [],
                '''                EVPN HOST IPV6-ADDR Configuration
                ''',
                'ipv6',
                'Cisco-IOS-XR-l2rib-cfg', False),
            _MetaInfoClassMember('ipv4', REFERENCE_CLASS, 'Ipv4', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.Host.Ipv4',
                [], [],
                '''                EVPN HOST IPV4-ADDR Configuration
                ''',
                'ipv4',
                'Cisco-IOS-XR-l2rib-cfg', False),
            _MetaInfoClassMember('mac', REFERENCE_CLASS, 'Mac', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.Host.Mac',
                [], [],
                '''                EVPN HOST MAC-ADDR Configuration
                ''',
                'mac',
                'Cisco-IOS-XR-l2rib-cfg', False),
            ],
            'Cisco-IOS-XR-l2rib-cfg',
            'host',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2rib-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn.EvpnTables' : {
        'meta_info' : _MetaInfoClass('Evpn.EvpnTables', REFERENCE_CLASS,
            '''EVPN submodes''',
            False, 
            [
            _MetaInfoClassMember('evpn-timers', REFERENCE_CLASS, 'EvpnTimers', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnTimers',
                [], [],
                '''                Enter EVPN timers configuration submode
                ''',
                'evpn_timers',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-evis', REFERENCE_CLASS, 'EvpnEvis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEvis',
                [], [],
                '''                Enter EVPN Instance configuration submode
                ''',
                'evpn_evis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-virtual-access-vfis', REFERENCE_CLASS, 'EvpnVirtualAccessVfis', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessVfis',
                [], [],
                '''                Virtual Access VFI interfaces
                ''',
                'evpn_virtual_access_vfis',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-load-balancing', REFERENCE_CLASS, 'EvpnLoadBalancing', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnLoadBalancing',
                [], [],
                '''                Enter EVPN Loadbalancing configuration submode
                ''',
                'evpn_load_balancing',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-bgp-auto-discovery', REFERENCE_CLASS, 'EvpnBgpAutoDiscovery', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnBgpAutoDiscovery',
                [], [],
                '''                Enable Autodiscovery BGP in EVPN
                ''',
                'evpn_bgp_auto_discovery',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-groups', REFERENCE_CLASS, 'EvpnGroups', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnGroups',
                [], [],
                '''                Enter EVPN Group Table submode
                ''',
                'evpn_groups',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-instances', REFERENCE_CLASS, 'EvpnInstances', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInstances',
                [], [],
                '''                Enter EVPN Instance configuration submode
                ''',
                'evpn_instances',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-logging', REFERENCE_CLASS, 'EvpnLogging', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnLogging',
                [], [],
                '''                Enter EVPN Logging configuration submode
                ''',
                'evpn_logging',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-interfaces', REFERENCE_CLASS, 'EvpnInterfaces', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnInterfaces',
                [], [],
                '''                Attachment Circuit interfaces
                ''',
                'evpn_interfaces',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-virtual-access-pws', REFERENCE_CLASS, 'EvpnVirtualAccessPws', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnVirtualAccessPws',
                [], [],
                '''                Virtual Access Pseudowire interfaces
                ''',
                'evpn_virtual_access_pws',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-ethernet-segment', REFERENCE_CLASS, 'EvpnEthernetSegment', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.EvpnEthernetSegment',
                [], [],
                '''                EVPN Global Ethernet Segment submode
                ''',
                'evpn_ethernet_segment',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evi-cost-out', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Configure node to cost-out
                ''',
                'evi_cost_out',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-source-interface', ATTRIBUTE, 'str', 'xr:Interface-name',
                None, None,
                [], [b'[a-zA-Z0-9._/-]+'],
                '''                Configure EVPN router-id implicitly through
                Loopback Interface
                ''',
                'evpn_source_interface',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('evpn-cost-in-startup', ATTRIBUTE, 'int', 'uint32',
                None, None,
                [('30', '86400')], [],
                '''                Cost-in node after given time (seconds) on
                startup timer
                ''',
                'evpn_cost_in_startup',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('host', REFERENCE_CLASS, 'Host', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables.Host',
                [], [],
                '''                EVPN HOST Configuration
                ''',
                'host',
                'Cisco-IOS-XR-l2rib-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn-tables',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
    'Evpn' : {
        'meta_info' : _MetaInfoClass('Evpn', REFERENCE_CLASS,
            '''evpn''',
            False, 
            [
            _MetaInfoClassMember('evpn-tables', REFERENCE_CLASS, 'EvpnTables', '',
                'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg', 'Evpn.EvpnTables',
                [], [],
                '''                EVPN submodes
                ''',
                'evpn_tables',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            _MetaInfoClassMember('enable', ATTRIBUTE, 'Empty', 'empty',
                None, None,
                [], [],
                '''                Enable EVPN feature
                ''',
                'enable',
                'Cisco-IOS-XR-l2vpn-cfg', False),
            ],
            'Cisco-IOS-XR-l2vpn-cfg',
            'evpn',
            _yang_ns.NAMESPACE_LOOKUP['Cisco-IOS-XR-l2vpn-cfg'],
            'ydk.models.cisco_ios_xr.Cisco_IOS_XR_l2vpn_cfg',
        ),
    },
}
_meta_table['L2vpn.PwRouting.PwRoutingBgp.EvpnRouteDistinguisher']['meta_info'].parent =_meta_table['L2vpn.PwRouting.PwRoutingBgp']['meta_info']
_meta_table['L2vpn.PwRouting.PwRoutingBgp']['meta_info'].parent =_meta_table['L2vpn.PwRouting']['meta_info']
_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpPort0s.ErpPort0']['meta_info'].parent =_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpPort0s']['meta_info']
_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance.Aps.Port1']['meta_info'].parent =_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance.Aps']['meta_info']
_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance.Rpl']['meta_info'].parent =_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance']['meta_info']
_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance.Aps']['meta_info'].parent =_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance']['meta_info']
_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpInstances.ErpInstance']['meta_info'].parent =_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpInstances']['meta_info']
_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1.NoneOrVirtual']['meta_info'].parent =_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1']['meta_info']
_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1.Interface']['meta_info'].parent =_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1']['meta_info']
_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s.ErpPort1']['meta_info'].parent =_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s']['meta_info']
_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpPort0s']['meta_info'].parent =_meta_table['L2vpn.Database.G8032Rings.G8032Ring']['meta_info']
_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpInstances']['meta_info'].parent =_meta_table['L2vpn.Database.G8032Rings.G8032Ring']['meta_info']
_meta_table['L2vpn.Database.G8032Rings.G8032Ring.ErpPort1s']['meta_info'].parent =_meta_table['L2vpn.Database.G8032Rings.G8032Ring']['meta_info']
_meta_table['L2vpn.Database.G8032Rings.G8032Ring']['meta_info'].parent =_meta_table['L2vpn.Database.G8032Rings']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.BackupAttachmentCircuits.BackupAttachmentCircuit']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.BackupAttachmentCircuits']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireEvpns.PseudowireEvpn']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireEvpns']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires.BackupPseudowire.BackupMplsStaticLabels']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires.BackupPseudowire']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires.BackupPseudowire']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes.L2tpRemoteCookie']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes.L2tpSecondaryLocalCookie']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes.L2tpLocalCookie']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.MplsStaticLabels']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.BackupPseudowires']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStaticAttributes']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor.L2tpStatic']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires.BackupPseudowire.BackupMplsStaticLabels']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires.BackupPseudowire']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires.BackupPseudowire']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes.L2tpRemoteCookie']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes.L2tpSecondaryLocalCookie']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes.L2tpLocalCookie']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.MplsStaticLabels']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.BackupPseudowires']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStaticAttributes']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress.L2tpStatic']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.Neighbor']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire.PseudowireAddress']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires.Pseudowire']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.MonitorSessions.MonitorSession']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.MonitorSessions']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireRouteds.PseudowireRouted']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireRouteds']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.AttachmentCircuits.AttachmentCircuit']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.AttachmentCircuits']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.BackupAttachmentCircuits']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireEvpns']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.Pseudowires']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.MonitorSessions']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.PseudowireRouteds']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect.AttachmentCircuits']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects.P2pXconnect']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget.TwoByteAsOrFourByteAs']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget.Ipv4Address']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets.Mp2mpRouteTarget']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid.RemoteCeidAttachmentCircuits.RemoteCeidAttachmentCircuit']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid.RemoteCeidAttachmentCircuits']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid.RemoteCeidAttachmentCircuits']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids.Ceid']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.FlowLabelLoadBalance']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol.Ceids']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.RouteDistinguisher']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRoutePolicy']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpRouteTargets']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery.Mp2mpSignalingProtocol']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect.Mp2mpAutoDiscovery']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects.Mp2mpXconnect']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.P2pXconnects']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup.Mp2mpXconnects']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups.XconnectGroup']['meta_info'].parent =_meta_table['L2vpn.Database.XconnectGroups']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl.StormControlUnit']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses.MemberVniStaticMacAddress']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis.MemberVni']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters.BdMacFilter']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacLimit']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.MacSecure']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacAging']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings.PbbStaticMacMapping']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacLimit']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacAging']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacSecure']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeSplitHorizonGroup']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeDhcpProfile']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacAging']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacLimit']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis.PbbCoreEvi']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreDhcpProfile']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainEvis.BridgeDomainEvi']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainEvis']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses.AccessVfiPseudowireStaticMacAddress']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai.PseudowireDaiAddressValidation']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType.StormControlUnit']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses.BdPwStaticMacAddress']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacSecure']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacAging']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacLimit']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon.BdPwSplitHorizonGroup']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires.BridgeDomainBackupPseudowire']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireProfile']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireIpSourceGuard']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwMplsStaticLabels']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports.Transport']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings.Signaling']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses.PseudowireStaticMacAddress']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwDhcpSnoop']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwMplsStaticLabels']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.VplsId']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.FlowLabelLoadBalance']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol.FlowLabelLoadBalance']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.TwoByteAsOrFourByteAs']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.Ipv4Address']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpRoutePolicy']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteDistinguisher']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis.Vfi']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainvnis.BridgeDomainvni']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainvnis']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai.InterfaceDaiAddressValidation']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType.StormControlUnit']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon.SplitHorizonGroupId']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses.StaticMacAddress']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacAging']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacSecure']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacLimit']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceIpSourceGuard']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceProfile']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowireEvpns.BdPseudowireEvpn']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowireEvpns']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Dai.DaiAddressValidation']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Dai']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface.RoutedInterfaceSplitHorizonGroup']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdStormControls']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.MemberVnis']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainMac']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.NvSatellite']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainPbb']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainEvis']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.AccessVfis']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowires']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Vfis']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BridgeDomainvnis']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdAttachmentCircuits']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.BdPseudowireEvpns']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.IpSourceGuard']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.Dai']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain.RoutedInterfaces']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains.BridgeDomain']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup.BridgeDomains']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups.BridgeDomainGroup']['meta_info'].parent =_meta_table['L2vpn.Database.BridgeDomainGroups']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.Sequencing']['meta_info'].parent =_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.TypeOfService']['meta_info'].parent =_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.SignalingProtocol']['meta_info'].parent =_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation.PathMtu']['meta_info'].parent =_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.LoadBalanceGroup.FlowLabelLoadBalance']['meta_info'].parent =_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.LoadBalanceGroup']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.Sequencing']['meta_info'].parent =_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.MplsRedundancy']['meta_info'].parent =_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.PreferredPath']['meta_info'].parent =_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation.LoadBalanceGroup']['meta_info'].parent =_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.L2tpv3Encapsulation']['meta_info'].parent =_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.BackupDisableDelay']['meta_info'].parent =_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass.MplsEncapsulation']['meta_info'].parent =_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses.PseudowireClass']['meta_info'].parent =_meta_table['L2vpn.Database.PseudowireClasses']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.VlanSwitchPorts.VlanSwitchPort']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.VlanSwitchPorts']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl.StormControlUnit']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls.BdStormControl']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses.MemberVniStaticMacAddress']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni.MemberVniStaticMacAddresses']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis.MemberVni']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters.BdMacFilter']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacLimit']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacFilters']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.MacSecure']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac.BdMacAging']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings.PbbStaticMacMapping']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacLimit']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacAging']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac.PbbEdgeMacSecure']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeSplitHorizonGroup']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbStaticMacMappings']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeDhcpProfile']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge.PbbEdgeMac']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges.PbbEdge']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacAging']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac.PbbCoreMacLimit']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis.PbbCoreEvi']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreMac']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreEvis']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore.PbbCoreDhcpProfile']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbEdges']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb.PbbCore']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainEvis.BridgeDomainEvi']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainEvis']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses.AccessVfiPseudowireStaticMacAddress']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire.AccessVfiPseudowireStaticMacAddresses']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires.AccessVfiPseudowire']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi.AccessVfiPseudowires']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis.AccessVfi']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai.PseudowireDaiAddressValidation']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType.StormControlUnit']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes.BdpwStormControlType']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses.BdPwStaticMacAddress']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacSecure']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacAging']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac.PseudowireMacLimit']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon.BdPwSplitHorizonGroup']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires.BridgeDomainBackupPseudowire']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireDai']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdpwStormControlTypes']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireProfile']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwStaticMacAddresses']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireIpSourceGuard']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.PseudowireMac']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwSplitHorizon']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BdPwMplsStaticLabels']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire.BridgeDomainBackupPseudowires']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires.BdPseudowire']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports.Transport']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings.Signaling']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Transports']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp.Signalings']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses.PseudowireStaticMacAddress']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwDhcpSnoop']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.VfiPwMplsStaticLabels']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire.PseudowireStaticMacAddresses']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires.VfiPseudowire']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.VplsId']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol.FlowLabelLoadBalance']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol.FlowLabelLoadBalance']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.TwoByteAsOrFourByteAs']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget.Ipv4Address']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets.RouteTarget']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.LdpSignalingProtocol']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpRoutePolicy']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteDistinguisher']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.BgpSignalingProtocol']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery.RouteTargets']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.MulticastP2mp']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.VfiPseudowires']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi.BgpAutoDiscovery']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis.Vfi']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainvnis.BridgeDomainvni']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainvnis']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai.InterfaceDaiAddressValidation']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType.StormControlUnit']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes.BdacStormControlType']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon.SplitHorizonGroupId']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses.StaticMacAddress']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacAging']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacSecure']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac.InterfaceMacLimit']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceIpSourceGuard']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceDai']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceProfile']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.BdacStormControlTypes']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.SplitHorizon']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.StaticMacAddresses']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit.InterfaceMac']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits.BdAttachmentCircuit']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowireEvpns.BdPseudowireEvpn']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowireEvpns']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Dai.DaiAddressValidation']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Dai']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface.RoutedInterfaceSplitHorizonGroup']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces.RoutedInterface']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdStormControls']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.MemberVnis']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainMac']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.NvSatellite']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainPbb']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainEvis']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.AccessVfis']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowires']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Vfis']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BridgeDomainvnis']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdAttachmentCircuits']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.BdPseudowireEvpns']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.IpSourceGuard']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.Dai']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain.RoutedInterfaces']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains.BridgeDomain']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.VlanSwitchPorts']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.VniRanges']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.VlanRanges']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.RoutedInterfaceRanges']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch.BridgeDomains']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches.VlanSwitch']['meta_info'].parent =_meta_table['L2vpn.Database.VlanSwitches']['meta_info']
_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcAttachmentCircuits.VlanUnawareFxcAttachmentCircuit']['meta_info'].parent =_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcAttachmentCircuits']['meta_info']
_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcPseudowireEvpns.VlanUnawareFxcPseudowireEvpn']['meta_info'].parent =_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcPseudowireEvpns']['meta_info']
_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcAttachmentCircuits']['meta_info'].parent =_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService']['meta_info']
_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService.VlanUnawareFxcPseudowireEvpns']['meta_info'].parent =_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService']['meta_info']
_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices.VlanUnawareFlexibleXconnectService']['meta_info'].parent =_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices']['meta_info']
_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService.VlanAwareFxcAttachmentCircuits.VlanAwareFxcAttachmentCircuit']['meta_info'].parent =_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService.VlanAwareFxcAttachmentCircuits']['meta_info']
_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService.VlanAwareFxcAttachmentCircuits']['meta_info'].parent =_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService']['meta_info']
_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices.VlanAwareFlexibleXconnectService']['meta_info'].parent =_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices']['meta_info']
_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanUnawareFlexibleXconnectServices']['meta_info'].parent =_meta_table['L2vpn.Database.FlexibleXconnectServiceTable']['meta_info']
_meta_table['L2vpn.Database.FlexibleXconnectServiceTable.VlanAwareFlexibleXconnectServices']['meta_info'].parent =_meta_table['L2vpn.Database.FlexibleXconnectServiceTable']['meta_info']
_meta_table['L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup.IccpInterfaces.IccpInterface']['meta_info'].parent =_meta_table['L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup.IccpInterfaces']['meta_info']
_meta_table['L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup.IccpInterfaces']['meta_info'].parent =_meta_table['L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup']['meta_info']
_meta_table['L2vpn.Database.Redundancy.IccpRedundancyGroups.IccpRedundancyGroup']['meta_info'].parent =_meta_table['L2vpn.Database.Redundancy.IccpRedundancyGroups']['meta_info']
_meta_table['L2vpn.Database.Redundancy.IccpRedundancyGroups']['meta_info'].parent =_meta_table['L2vpn.Database.Redundancy']['meta_info']
_meta_table['L2vpn.Database.G8032Rings']['meta_info'].parent =_meta_table['L2vpn.Database']['meta_info']
_meta_table['L2vpn.Database.XconnectGroups']['meta_info'].parent =_meta_table['L2vpn.Database']['meta_info']
_meta_table['L2vpn.Database.BridgeDomainGroups']['meta_info'].parent =_meta_table['L2vpn.Database']['meta_info']
_meta_table['L2vpn.Database.PseudowireClasses']['meta_info'].parent =_meta_table['L2vpn.Database']['meta_info']
_meta_table['L2vpn.Database.VlanSwitches']['meta_info'].parent =_meta_table['L2vpn.Database']['meta_info']
_meta_table['L2vpn.Database.FlexibleXconnectServiceTable']['meta_info'].parent =_meta_table['L2vpn.Database']['meta_info']
_meta_table['L2vpn.Database.Redundancy']['meta_info'].parent =_meta_table['L2vpn.Database']['meta_info']
_meta_table['L2vpn.AutoDiscovery.BgpSignaling']['meta_info'].parent =_meta_table['L2vpn.AutoDiscovery']['meta_info']
_meta_table['L2vpn.Utility.Logging']['meta_info'].parent =_meta_table['L2vpn.Utility']['meta_info']
_meta_table['L2vpn.Snmp.Mib.MibInterface.Format']['meta_info'].parent =_meta_table['L2vpn.Snmp.Mib.MibInterface']['meta_info']
_meta_table['L2vpn.Snmp.Mib.MibInterface']['meta_info'].parent =_meta_table['L2vpn.Snmp.Mib']['meta_info']
_meta_table['L2vpn.Snmp.Mib.MibPseudowire']['meta_info'].parent =_meta_table['L2vpn.Snmp.Mib']['meta_info']
_meta_table['L2vpn.Snmp.Mib']['meta_info'].parent =_meta_table['L2vpn.Snmp']['meta_info']
_meta_table['L2vpn.PwRouting']['meta_info'].parent =_meta_table['L2vpn']['meta_info']
_meta_table['L2vpn.Neighbor']['meta_info'].parent =_meta_table['L2vpn']['meta_info']
_meta_table['L2vpn.Database']['meta_info'].parent =_meta_table['L2vpn']['meta_info']
_meta_table['L2vpn.Pbb']['meta_info'].parent =_meta_table['L2vpn']['meta_info']
_meta_table['L2vpn.AutoDiscovery']['meta_info'].parent =_meta_table['L2vpn']['meta_info']
_meta_table['L2vpn.Utility']['meta_info'].parent =_meta_table['L2vpn']['meta_info']
_meta_table['L2vpn.Snmp']['meta_info'].parent =_meta_table['L2vpn']['meta_info']
_meta_table['GenericInterfaceLists.GenericInterfaceList.Interfaces.Interface']['meta_info'].parent =_meta_table['GenericInterfaceLists.GenericInterfaceList.Interfaces']['meta_info']
_meta_table['GenericInterfaceLists.GenericInterfaceList.Interfaces']['meta_info'].parent =_meta_table['GenericInterfaceLists.GenericInterfaceList']['meta_info']
_meta_table['GenericInterfaceLists.GenericInterfaceList']['meta_info'].parent =_meta_table['GenericInterfaceLists']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetAs']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetNone']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetIpv4Address']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteDistinguisher']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery.EvpnRouteTargets']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EviLoadBalancing']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EvpnEviBgpAutoDiscovery']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EviMulticast']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi.EviAdvertiseMac']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEvis.EvpnEvi']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnEvis']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment.ManualServiceCarving.ServiceList']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment.ManualServiceCarving']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment.Identifier']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment.ManualServiceCarving']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualAccessVfiTimers']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi.EvpnVirtualEthernetSegment']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessVfis.EvpnVirtualAccessVfi']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnVirtualAccessVfis']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnBgpAutoDiscovery.EvpnRouteDistinguisher']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnBgpAutoDiscovery']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnGroups.EvpnGroup.EvpnGroupCoreInterfaces.EvpnGroupCoreInterface']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnGroups.EvpnGroup.EvpnGroupCoreInterfaces']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnGroups.EvpnGroup.EvpnGroupCoreInterfaces']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnGroups.EvpnGroup']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnGroups.EvpnGroup']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnGroups']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetAs']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetNone']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets.EvpnRouteTargetIpv4Address']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteDistinguisher']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery.EvpnRouteTargets']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceBgpAutoDiscovery']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceEtree']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceAdvertiseMac']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceMulticast']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance.EvpnInstanceLoadBalancing']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInstances.EvpnInstance']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInstances']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment.ManualServiceCarving.ServiceList']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment.ManualServiceCarving']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment.Identifier']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment.ManualServiceCarving']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EvpnacTimers']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInterfaces.EvpnInterface']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInterfaces.EvpnInterface.EthernetSegment']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInterfaces.EvpnInterface']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInterfaces.EvpnInterface']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnInterfaces']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment.ManualServiceCarving.ServiceList']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment.ManualServiceCarving']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment.Identifier']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment.ManualServiceCarving']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualAccessPwTimers']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw.EvpnVirtualEthernetSegment']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessPws.EvpnVirtualAccessPw']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnVirtualAccessPws']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEthernetSegment.EvpnEsiTypes.EvpnEsiType']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnEthernetSegment.EvpnEsiTypes']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEthernetSegment.EvpnEsiTypes']['meta_info'].parent =_meta_table['Evpn.EvpnTables.EvpnEthernetSegment']['meta_info']
_meta_table['Evpn.EvpnTables.Host.Ipv6.DuplicateDetection']['meta_info'].parent =_meta_table['Evpn.EvpnTables.Host.Ipv6']['meta_info']
_meta_table['Evpn.EvpnTables.Host.Ipv4.DuplicateDetection']['meta_info'].parent =_meta_table['Evpn.EvpnTables.Host.Ipv4']['meta_info']
_meta_table['Evpn.EvpnTables.Host.Mac.DuplicateDetection']['meta_info'].parent =_meta_table['Evpn.EvpnTables.Host.Mac']['meta_info']
_meta_table['Evpn.EvpnTables.Host.Ipv6']['meta_info'].parent =_meta_table['Evpn.EvpnTables.Host']['meta_info']
_meta_table['Evpn.EvpnTables.Host.Ipv4']['meta_info'].parent =_meta_table['Evpn.EvpnTables.Host']['meta_info']
_meta_table['Evpn.EvpnTables.Host.Mac']['meta_info'].parent =_meta_table['Evpn.EvpnTables.Host']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnTimers']['meta_info'].parent =_meta_table['Evpn.EvpnTables']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEvis']['meta_info'].parent =_meta_table['Evpn.EvpnTables']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessVfis']['meta_info'].parent =_meta_table['Evpn.EvpnTables']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnLoadBalancing']['meta_info'].parent =_meta_table['Evpn.EvpnTables']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnBgpAutoDiscovery']['meta_info'].parent =_meta_table['Evpn.EvpnTables']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnGroups']['meta_info'].parent =_meta_table['Evpn.EvpnTables']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInstances']['meta_info'].parent =_meta_table['Evpn.EvpnTables']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnLogging']['meta_info'].parent =_meta_table['Evpn.EvpnTables']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnInterfaces']['meta_info'].parent =_meta_table['Evpn.EvpnTables']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnVirtualAccessPws']['meta_info'].parent =_meta_table['Evpn.EvpnTables']['meta_info']
_meta_table['Evpn.EvpnTables.EvpnEthernetSegment']['meta_info'].parent =_meta_table['Evpn.EvpnTables']['meta_info']
_meta_table['Evpn.EvpnTables.Host']['meta_info'].parent =_meta_table['Evpn.EvpnTables']['meta_info']
_meta_table['Evpn.EvpnTables']['meta_info'].parent =_meta_table['Evpn']['meta_info']
