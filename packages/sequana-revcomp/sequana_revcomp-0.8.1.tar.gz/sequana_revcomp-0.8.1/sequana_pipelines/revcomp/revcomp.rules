"""Multi fastqc pipeline

Author: Rachel Legendre
Affiliation: Institut Pasteur @ 2019

This pipeline is part of Sequana software (sequana.readthedocs.io)

snakemake -s revcomp.rules --forceall --stats stats.txt --cores 4


"""
from sequana import snaketools as sm


# This must be defined before the include
configfile: "config.yaml"


# A convenient manager
#
def sample_func(filename):
    import os
    filename = os.path.basename(filename)
    filename = filename.split(".", 1)[0]
    return filename


manager = sm.PipelineManagerGeneric("revcomp", config, sample_func)

rule pipeline:
    input: expand('{sample}.rc.fastq.gz', sample=list(manager.samples.keys()))


## Revcomp rule
__revcomp__input = manager.getrawdata()
__revcomp__logs = "logs/{sample}.logs"
__revcomp__output = "{sample}.rc.fastq.gz"
include: sm.modules['revcomp_rule']


onsuccess:
    from sequana.snaketools import OnSuccessCleaner
    sc = OnSuccessCleaner()
    sc.files_to_remove.append("revcomp.rules")
    sc.files_to_remove.append("config.yaml")
    sc.files_to_remove.append("schema.yaml")
    sc.files_to_remove.append("revcomp.sh")
    sc.directories_to_remove.append("logs")
    sc.add_makefile()
    print("Once done, please clean up the directory using\n'make clean'")

onerror:
    print("An error occurred. See message above.")
