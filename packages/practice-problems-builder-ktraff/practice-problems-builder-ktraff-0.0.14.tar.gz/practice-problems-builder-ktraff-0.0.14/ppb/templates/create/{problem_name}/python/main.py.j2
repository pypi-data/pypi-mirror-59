import argparse
import logging

from src.naive.foo import Foo
from src.optimized.foo import FooOptimized

_log_fmt = '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
_log = logging.getLogger()
_log.setLevel(logging.DEBUG)
_handler = logging.StreamHandler()
_handler.setLevel(logging.DEBUG)
_formatter = logging.Formatter(_log_fmt)
_handler.setFormatter(_formatter)
_log.addHandler(_handler)


def main(args):
    if not args.debug:
        _log.setLevel(logging.INFO)
    if args.version == 'naive':
        _log.info(f'Running Foo with {args}')
        foo = Foo()
    else:
        _log.info(f'Running FooOptimized with {args}')
        foo = FooOptimized()
    foo.bar(args.num)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(prog="{{ problem_name }}", description="{{ description }}")
    parser.add_argument('--debug', '-d', action='store_true', help='Set your logging level to show debugging output')
    parser.add_argument('--version', '-v', choices=['naive', 'optimized'], default='naive')
    parser.add_argument('--num', type=int, default=2)
    main(parser.parse_args())
